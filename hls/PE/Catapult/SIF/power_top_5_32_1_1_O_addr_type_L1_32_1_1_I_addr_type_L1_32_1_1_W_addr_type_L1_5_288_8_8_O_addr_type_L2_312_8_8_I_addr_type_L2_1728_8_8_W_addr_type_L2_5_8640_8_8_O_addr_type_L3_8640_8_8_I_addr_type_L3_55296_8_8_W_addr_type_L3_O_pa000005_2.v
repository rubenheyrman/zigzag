// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    10.5c/896140 Production Release
//  HLS Date:       Sun Sep  6 22:45:38 PDT 2020
//
//  Generated by:   r0678912@amazone.esat.kuleuven.be
//  Generated date: Tue Jul 13 10:57:56 2021
// ----------------------------------------------------------------------

//
// ------------------------------------------------------------------
//  Design Unit:    tiling_unit_5_W_addr_type_L2_run
// ------------------------------------------------------------------


module topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000156 (
  loops_bound_rsc_dat, loops_relevancy_rsc_dat, tile_size_in_rsc_dat, tile_size_out_rsc_z,
      instr_bound_rsc_z, instr_tile_rsc_z, ccs_ccore_start_rsc_dat, ccs_ccore_clk,
      ccs_ccore_srst, ccs_ccore_en
);
  input [54:0] loops_bound_rsc_dat;
  input [4:0] loops_relevancy_rsc_dat;
  input [10:0] tile_size_in_rsc_dat;
  output [10:0] tile_size_out_rsc_z;
  output [54:0] instr_bound_rsc_z;
  output [54:0] instr_tile_rsc_z;
  input ccs_ccore_start_rsc_dat;
  input ccs_ccore_clk;
  input ccs_ccore_srst;
  input ccs_ccore_en;


  // Interconnect Declarations
  wire [54:0] loops_bound_rsci_idat;
  wire [4:0] loops_relevancy_rsci_idat;
  wire [10:0] tile_size_in_rsci_idat;
  wire ccs_ccore_start_rsci_idat;
  reg [10:0] instr_bound_rsci_d_54_44;
  reg [10:0] instr_bound_rsci_d_43_33;
  reg [10:0] instr_bound_rsci_d_32_22;
  reg [10:0] instr_bound_rsci_d_21_11;
  reg [10:0] instr_bound_rsci_d_10_0;
  reg [5:0] instr_tile_rsci_d_10_5;
  reg [4:0] instr_tile_rsci_d_4_0;
  reg [5:0] instr_tile_rsci_d_43_38;
  reg [4:0] instr_tile_rsci_d_37_33;
  reg [5:0] instr_tile_rsci_d_32_27;
  reg [4:0] instr_tile_rsci_d_26_22;
  reg [5:0] instr_tile_rsci_d_21_16;
  reg [4:0] instr_tile_rsci_d_15_11;
  reg [5:0] reg_tile_size_out_rsci_d_10_5_cse;
  reg [4:0] reg_tile_size_out_rsci_d_4_0_cse;
  wire [4:0] instr_tile_rsci_d_4_0_mx0;
  wire [5:0] instr_tile_rsci_d_43_38_mx0;
  wire [4:0] instr_tile_rsci_d_37_33_mx0;
  wire [5:0] tile_size_int_lpi_1_dfm_10_5_1;
  wire [5:0] instr_tile_rsci_d_32_27_mx0;
  wire [4:0] instr_tile_rsci_d_26_22_mx0;
  wire [5:0] instr_tile_rsci_d_21_16_mx0;
  wire [4:0] instr_tile_rsci_d_15_11_mx0;
  wire [10:0] tile_size_int_sva_6;
  wire [15:0] nl_tile_size_int_sva_6;
  wire [10:0] tile_size_int_sva_7;
  wire [21:0] nl_tile_size_int_sva_7;
  wire [10:0] tile_size_int_sva_8;
  wire [21:0] nl_tile_size_int_sva_8;
  wire [10:0] tile_size_int_sva_9;
  wire [21:0] nl_tile_size_int_sva_9;
  wire [10:0] tile_size_int_sva_10;
  wire [21:0] nl_tile_size_int_sva_10;
  wire tile_size_and_cse;


  // Interconnect Declarations for Component Instantiations
  wire [54:0] nl_instr_bound_rsci_d;
  assign nl_instr_bound_rsci_d = {instr_bound_rsci_d_54_44 , instr_bound_rsci_d_43_33
      , instr_bound_rsci_d_32_22 , instr_bound_rsci_d_21_11 , instr_bound_rsci_d_10_0};
  wire [54:0] nl_instr_tile_rsci_d;
  assign nl_instr_tile_rsci_d = {reg_tile_size_out_rsci_d_10_5_cse , reg_tile_size_out_rsci_d_4_0_cse
      , instr_tile_rsci_d_43_38 , instr_tile_rsci_d_37_33 , instr_tile_rsci_d_32_27
      , instr_tile_rsci_d_26_22 , instr_tile_rsci_d_21_16 , instr_tile_rsci_d_15_11
      , instr_tile_rsci_d_10_5 , instr_tile_rsci_d_4_0};
  wire [10:0] nl_tile_size_out_rsci_d;
  assign nl_tile_size_out_rsci_d = {reg_tile_size_out_rsci_d_10_5_cse , reg_tile_size_out_rsci_d_4_0_cse};
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000152 #(.rscid(32'sd16),
  .width(32'sd55)) loops_bound_rsci (
      .dat(loops_bound_rsc_dat),
      .idat(loops_bound_rsci_idat)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000152 #(.rscid(32'sd17),
  .width(32'sd5)) loops_relevancy_rsci (
      .dat(loops_relevancy_rsc_dat),
      .idat(loops_relevancy_rsci_idat)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000153 #(.rscid(32'sd19),
  .width(32'sd55)) instr_bound_rsci (
      .d(nl_instr_bound_rsci_d[54:0]),
      .z(instr_bound_rsc_z)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000153 #(.rscid(32'sd20),
  .width(32'sd55)) instr_tile_rsci (
      .d(nl_instr_tile_rsci_d[54:0]),
      .z(instr_tile_rsc_z)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000152 #(.rscid(32'sd124),
  .width(32'sd11)) tile_size_in_rsci (
      .dat(tile_size_in_rsc_dat),
      .idat(tile_size_in_rsci_idat)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000153 #(.rscid(32'sd125),
  .width(32'sd11)) tile_size_out_rsci (
      .d(nl_tile_size_out_rsci_d[10:0]),
      .z(tile_size_out_rsc_z)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000152 #(.rscid(32'sd134),
  .width(32'sd1)) ccs_ccore_start_rsci (
      .dat(ccs_ccore_start_rsc_dat),
      .idat(ccs_ccore_start_rsci_idat)
    );
  assign tile_size_and_cse = ccs_ccore_en & ccs_ccore_start_rsci_idat;
  assign instr_tile_rsci_d_4_0_mx0 = MUX_v_5_2_2((tile_size_in_rsci_idat[4:0]), (tile_size_int_sva_6[4:0]),
      loops_relevancy_rsci_idat[0]);
  assign instr_tile_rsci_d_43_38_mx0 = MUX_v_6_2_2(instr_tile_rsci_d_32_27_mx0, (tile_size_int_sva_9[10:5]),
      loops_relevancy_rsci_idat[3]);
  assign instr_tile_rsci_d_37_33_mx0 = MUX_v_5_2_2(instr_tile_rsci_d_26_22_mx0, (tile_size_int_sva_9[4:0]),
      loops_relevancy_rsci_idat[3]);
  assign tile_size_int_lpi_1_dfm_10_5_1 = MUX_v_6_2_2(6'b000000, (tile_size_int_sva_6[10:5]),
      (loops_relevancy_rsci_idat[0]));
  assign instr_tile_rsci_d_32_27_mx0 = MUX_v_6_2_2(instr_tile_rsci_d_21_16_mx0, (tile_size_int_sva_8[10:5]),
      loops_relevancy_rsci_idat[2]);
  assign instr_tile_rsci_d_26_22_mx0 = MUX_v_5_2_2(instr_tile_rsci_d_15_11_mx0, (tile_size_int_sva_8[4:0]),
      loops_relevancy_rsci_idat[2]);
  assign instr_tile_rsci_d_21_16_mx0 = MUX_v_6_2_2(tile_size_int_lpi_1_dfm_10_5_1,
      (tile_size_int_sva_7[10:5]), loops_relevancy_rsci_idat[1]);
  assign instr_tile_rsci_d_15_11_mx0 = MUX_v_5_2_2(instr_tile_rsci_d_4_0_mx0, (tile_size_int_sva_7[4:0]),
      loops_relevancy_rsci_idat[1]);
  assign nl_tile_size_int_sva_6 = (tile_size_in_rsci_idat[4:0]) * (loops_bound_rsci_idat[10:0]);
  assign tile_size_int_sva_6 = nl_tile_size_int_sva_6[10:0];
  assign nl_tile_size_int_sva_7 = ({tile_size_int_lpi_1_dfm_10_5_1 , instr_tile_rsci_d_4_0_mx0})
      * (loops_bound_rsci_idat[21:11]);
  assign tile_size_int_sva_7 = nl_tile_size_int_sva_7[10:0];
  assign nl_tile_size_int_sva_8 = ({instr_tile_rsci_d_21_16_mx0 , instr_tile_rsci_d_15_11_mx0})
      * (loops_bound_rsci_idat[32:22]);
  assign tile_size_int_sva_8 = nl_tile_size_int_sva_8[10:0];
  assign nl_tile_size_int_sva_9 = ({instr_tile_rsci_d_32_27_mx0 , instr_tile_rsci_d_26_22_mx0})
      * (loops_bound_rsci_idat[43:33]);
  assign tile_size_int_sva_9 = nl_tile_size_int_sva_9[10:0];
  assign nl_tile_size_int_sva_10 = ({instr_tile_rsci_d_43_38_mx0 , instr_tile_rsci_d_37_33_mx0})
      * (loops_bound_rsci_idat[54:44]);
  assign tile_size_int_sva_10 = nl_tile_size_int_sva_10[10:0];
  always @(posedge ccs_ccore_clk) begin
    if ( ccs_ccore_srst ) begin
      reg_tile_size_out_rsci_d_10_5_cse <= 6'b000000;
      reg_tile_size_out_rsci_d_4_0_cse <= 5'b00000;
      instr_tile_rsci_d_10_5 <= 6'b000000;
    end
    else if ( tile_size_and_cse ) begin
      reg_tile_size_out_rsci_d_10_5_cse <= MUX_v_6_2_2(instr_tile_rsci_d_43_38_mx0,
          (tile_size_int_sva_10[10:5]), loops_relevancy_rsci_idat[4]);
      reg_tile_size_out_rsci_d_4_0_cse <= MUX_v_5_2_2(instr_tile_rsci_d_37_33_mx0,
          (tile_size_int_sva_10[4:0]), loops_relevancy_rsci_idat[4]);
      instr_tile_rsci_d_10_5 <= tile_size_int_lpi_1_dfm_10_5_1;
    end
  end
  always @(posedge ccs_ccore_clk) begin
    if ( ccs_ccore_srst ) begin
      instr_bound_rsci_d_54_44 <= 11'b00000000000;
      instr_bound_rsci_d_10_0 <= 11'b00000000000;
      instr_bound_rsci_d_43_33 <= 11'b00000000000;
      instr_bound_rsci_d_21_11 <= 11'b00000000000;
      instr_bound_rsci_d_32_22 <= 11'b00000000000;
      instr_tile_rsci_d_4_0 <= 5'b00000;
      instr_tile_rsci_d_43_38 <= 6'b000000;
      instr_tile_rsci_d_37_33 <= 5'b00000;
      instr_tile_rsci_d_32_27 <= 6'b000000;
      instr_tile_rsci_d_26_22 <= 5'b00000;
      instr_tile_rsci_d_21_16 <= 6'b000000;
      instr_tile_rsci_d_15_11 <= 5'b00000;
    end
    else if ( ccs_ccore_en ) begin
      instr_bound_rsci_d_54_44 <= MUX_v_11_2_2((loops_bound_rsci_idat[54:44]), 11'b00000000001,
          loops_relevancy_rsci_idat[4]);
      instr_bound_rsci_d_10_0 <= MUX_v_11_2_2((loops_bound_rsci_idat[10:0]), 11'b00000000001,
          loops_relevancy_rsci_idat[0]);
      instr_bound_rsci_d_43_33 <= MUX_v_11_2_2((loops_bound_rsci_idat[43:33]), 11'b00000000001,
          loops_relevancy_rsci_idat[3]);
      instr_bound_rsci_d_21_11 <= MUX_v_11_2_2((loops_bound_rsci_idat[21:11]), 11'b00000000001,
          loops_relevancy_rsci_idat[1]);
      instr_bound_rsci_d_32_22 <= MUX_v_11_2_2((loops_bound_rsci_idat[32:22]), 11'b00000000001,
          loops_relevancy_rsci_idat[2]);
      instr_tile_rsci_d_4_0 <= instr_tile_rsci_d_4_0_mx0;
      instr_tile_rsci_d_43_38 <= instr_tile_rsci_d_43_38_mx0;
      instr_tile_rsci_d_37_33 <= instr_tile_rsci_d_37_33_mx0;
      instr_tile_rsci_d_32_27 <= instr_tile_rsci_d_32_27_mx0;
      instr_tile_rsci_d_26_22 <= instr_tile_rsci_d_26_22_mx0;
      instr_tile_rsci_d_21_16 <= instr_tile_rsci_d_21_16_mx0;
      instr_tile_rsci_d_15_11 <= instr_tile_rsci_d_15_11_mx0;
    end
  end

  function automatic [10:0] MUX_v_11_2_2;
    input [10:0] input_0;
    input [10:0] input_1;
    input [0:0] sel;
    reg [10:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_11_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction


  function automatic [5:0] MUX_v_6_2_2;
    input [5:0] input_0;
    input [5:0] input_1;
    input [0:0] sel;
    reg [5:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_6_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    tiling_unit_5_W_addr_type_L2
// ------------------------------------------------------------------


module topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000157 (
  loops_bound_rsc_dat, loops_relevancy_rsc_dat, tile_size_in_rsc_dat, tile_size_out_rsc_z,
      instr_bound_rsc_z, instr_tile_rsc_z, ccs_ccore_start_rsc_dat, ccs_ccore_clk,
      ccs_ccore_srst, ccs_ccore_en
);
  input [54:0] loops_bound_rsc_dat;
  input [4:0] loops_relevancy_rsc_dat;
  input [10:0] tile_size_in_rsc_dat;
  output [10:0] tile_size_out_rsc_z;
  output [54:0] instr_bound_rsc_z;
  output [54:0] instr_tile_rsc_z;
  input ccs_ccore_start_rsc_dat;
  input ccs_ccore_clk;
  input ccs_ccore_srst;
  input ccs_ccore_en;



  // Interconnect Declarations for Component Instantiations
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000156 tiling_unit_5_W_addr_type_L2_run_inst (
      .loops_bound_rsc_dat(loops_bound_rsc_dat),
      .loops_relevancy_rsc_dat(loops_relevancy_rsc_dat),
      .tile_size_in_rsc_dat(tile_size_in_rsc_dat),
      .tile_size_out_rsc_z(tile_size_out_rsc_z),
      .instr_bound_rsc_z(instr_bound_rsc_z),
      .instr_tile_rsc_z(instr_tile_rsc_z),
      .ccs_ccore_start_rsc_dat(ccs_ccore_start_rsc_dat),
      .ccs_ccore_clk(ccs_ccore_clk),
      .ccs_ccore_srst(ccs_ccore_srst),
      .ccs_ccore_en(ccs_ccore_en)
    );
endmodule



