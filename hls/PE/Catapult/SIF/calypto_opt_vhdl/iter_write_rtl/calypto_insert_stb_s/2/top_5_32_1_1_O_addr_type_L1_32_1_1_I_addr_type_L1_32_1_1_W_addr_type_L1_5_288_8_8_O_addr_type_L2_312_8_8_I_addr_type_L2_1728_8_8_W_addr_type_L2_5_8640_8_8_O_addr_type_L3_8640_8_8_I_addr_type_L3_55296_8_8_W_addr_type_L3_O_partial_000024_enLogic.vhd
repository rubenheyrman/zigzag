--+-----------------------------------------------------------------------------------+
--|                                                                                   |
--| Generated by PowerPro-10.3c_2/849904   (Jan 10 2020)  linux64  P2001101230        |
--| on Tue Jul 13 11:49:08 2021.                                                      |
--|                                                                                   |
--| This document may be used and distributed without restriction provided that       |
--| this copyright statement is not removed from the file and that any derivative     |
--| work contains this copyright notice.                                              |
--|                                                                                   |
--+-----------------------------------------------------------------------------------+

library ieee;
use ieee.std_logic_1164.all;

package top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package is
  component cg_sym_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
  port ( 
        counter_nand_2_nl : in std_logic_vector(0 downto 0);
        counter_or_nl : in std_logic_vector(0 downto 0);
        mux_14_cse : in std_logic_vector(0 downto 0);
        for_1_for_1_for_1_for_1_nor_tmp : in std_logic_vector(0 downto 0);
        and_dcpl_3 : in std_logic_vector(0 downto 0);
        mux_tmp_25 : in std_logic_vector(0 downto 0);
        and_dcpl : in std_logic_vector(0 downto 0);
        for_1_unequal_3_tmp : in std_logic_vector(0 downto 0);
        and_dcpl_64 : in std_logic_vector(0 downto 0);
        counter_nand_1_nl : in std_logic_vector(0 downto 0);
        counter_nand_3_nl : in std_logic_vector(0 downto 0);
        counter_nand_nl : in std_logic_vector(0 downto 0);
        W_mac_pntr_and_cse : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port_14 : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        operator_5_false_1_acc_4_nl_5_5 : in std_logic_vector(5 downto 5);
        operator_5_false_1_acc_1_nl_5_5 : in std_logic_vector(5 downto 5);
        operator_5_false_1_acc_nl_5_5 : in std_logic_vector(5 downto 5);
        O_mac_counter_4_sva_en : out std_logic_vector(0 downto 0)
       );
  end component;

  component cg_db_sym_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
  port ( 
        counter_nand_2_nl : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        counter_or_nl : in std_logic_vector(0 downto 0);
        n529 : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        n545 : in std_logic_vector(0 downto 0);
        n609 : in std_logic_vector(0 downto 0);
        counter_nand_1_nl : in std_logic_vector(0 downto 0);
        counter_nand_3_nl : in std_logic_vector(0 downto 0);
        counter_nand_nl : in std_logic_vector(0 downto 0);
        E_4553 : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        O_mac_counter_4_sva_en : out std_logic_vector(0 downto 0)
       );
  end component;

  component top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_powerpro_reset_mod is 
  port ( 
        rst : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : out std_logic_vector(0 downto 0)
       );
  end component;

end package;


 -- QuickLink: Instance: top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000001.PE.rf_5_32_32_32_1_1_1_1_1_1_O_partial_type_O_addr_type_L1_I_type_I_addr_type_L1_W_type_W_addr_type_L1_run_inst, Module: topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003
 --            Source-relation: power_top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_pa000000.vhdl:5044
 --
 --            Area before justification: 82.194
 --            Area after  justification: 92.302( 12.2978% increase )
 --
 --            Signals with hierarchical names need to have new hierarchy ports/signals created.

 -- wire O_mac_counter_4_sva_en ; 

library ieee, work;
library calypto_lib;
use ieee.std_logic_1164.all;
use calypto_lib.powerpro_cg_package.all;
use calypto_lib.top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package.all;

entity cg_sym_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
  port ( 
        counter_nand_2_nl : in std_logic_vector(0 downto 0);
        counter_or_nl : in std_logic_vector(0 downto 0);
        mux_14_cse : in std_logic_vector(0 downto 0);
        for_1_for_1_for_1_for_1_nor_tmp : in std_logic_vector(0 downto 0);
        and_dcpl_3 : in std_logic_vector(0 downto 0);
        mux_tmp_25 : in std_logic_vector(0 downto 0);
        and_dcpl : in std_logic_vector(0 downto 0);
        for_1_unequal_3_tmp : in std_logic_vector(0 downto 0);
        and_dcpl_64 : in std_logic_vector(0 downto 0);
        counter_nand_1_nl : in std_logic_vector(0 downto 0);
        counter_nand_3_nl : in std_logic_vector(0 downto 0);
        counter_nand_nl : in std_logic_vector(0 downto 0);
        W_mac_pntr_and_cse : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port_14 : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        operator_5_false_1_acc_4_nl_5_5 : in std_logic_vector(5 downto 5);
        operator_5_false_1_acc_1_nl_5_5 : in std_logic_vector(5 downto 5);
        operator_5_false_1_acc_nl_5_5 : in std_logic_vector(5 downto 5);
        O_mac_counter_4_sva_en : out std_logic_vector(0 downto 0)
       );
end entity;

architecture rtl of cg_sym_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
 signal E_1 : std_logic_vector(0 downto 0);
 signal E_2 : std_logic_vector(0 downto 0);
 signal E_3 : std_logic_vector(0 downto 0);
 signal E_4 : std_logic_vector(0 downto 0);
 signal E_5 : std_logic_vector(0 downto 0);
 signal E_6 : std_logic_vector(0 downto 0);
 signal E_7 : std_logic_vector(0 downto 0);
 signal E_8 : std_logic_vector(0 downto 0);
 signal E_9 : std_logic_vector(0 downto 0);
 signal E_10 : std_logic_vector(0 downto 0);
begin
 inst_cg_db_sym_stb_topless_5comma_32comm : cg_db_sym_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003
    port map (
              counter_nand_2_nl => counter_nand_2_nl,
              rst => rst,
              counter_or_nl => counter_or_nl,
              n529 => E_9,
              clk => clk,
              n545 => E_6,
              n609 => E_2,
              counter_nand_1_nl => counter_nand_1_nl,
              counter_nand_3_nl => counter_nand_3_nl,
              counter_nand_nl => counter_nand_nl,
              E_4553 => E_1,
              ppro_reset_CLOCKclk_out_port => ppro_reset_CLOCKclk_out_port_14,
              O_mac_counter_4_sva_en => O_mac_counter_4_sva_en
              );
 E_1 <= ( rst or W_mac_pntr_and_cse ) ;
 E_2 <= ( E_3 and and_dcpl ) ;
 E_3 <= ( E_4 and E_5 ) ;
 E_4 <= ( and_dcpl_64 and operator_5_false_1_acc_4_nl_5_5 ) ;
 E_5 <= ( not (for_1_unequal_3_tmp) ) ;
 E_6 <= ( E_7 and for_1_for_1_for_1_for_1_nor_tmp ) ;
 E_7 <= ( E_8 and and_dcpl_3 ) ;
 E_8 <= ( mux_tmp_25 or operator_5_false_1_acc_1_nl_5_5 ) ;
 E_9 <= ( E_10 and for_1_for_1_for_1_for_1_nor_tmp ) ;
 E_10 <= ( mux_14_cse or operator_5_false_1_acc_nl_5_5 ) ;
end architecture;

library ieee, work;
library calypto_lib;
use ieee.std_logic_1164.all;
use calypto_lib.powerpro_cg_package.all;
use calypto_lib.top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package.all;

entity cg_db_sym_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
  port ( 
        counter_nand_2_nl : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        counter_or_nl : in std_logic_vector(0 downto 0);
        n529 : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        n545 : in std_logic_vector(0 downto 0);
        n609 : in std_logic_vector(0 downto 0);
        counter_nand_1_nl : in std_logic_vector(0 downto 0);
        counter_nand_3_nl : in std_logic_vector(0 downto 0);
        counter_nand_nl : in std_logic_vector(0 downto 0);
        E_4553 : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        O_mac_counter_4_sva_en : out std_logic_vector(0 downto 0)
       );
end entity;

architecture rtl of cg_db_sym_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
 signal E_1 : std_logic_vector(0 downto 0);
 signal E_2 : std_logic_vector(0 downto 0);
 signal E_3 : std_logic_vector(0 downto 0);
 signal E_4 : std_logic_vector(0 downto 0);
 signal E_5 : std_logic_vector(0 downto 0);
 signal E_6 : std_logic_vector(0 downto 0);
 signal E_7 : std_logic_vector(0 downto 0);
 signal E_8 : std_logic_vector(0 downto 0);
 signal E_9 : std_logic_vector(0 downto 0);
 signal E_10 : std_logic_vector(0 downto 0);
 signal Gen_122_1122749733 : std_logic_vector(0 downto 0);
 signal E_11 : std_logic_vector(0 downto 0);
 signal E_12 : std_logic_vector(0 downto 0);
 signal E_13 : std_logic_vector(0 downto 0);
 signal E_14 : std_logic_vector(0 downto 0);
 signal Gen_122_2854119917 : std_logic_vector(0 downto 0);
 signal E_15 : std_logic_vector(0 downto 0);
 signal Gen_122_794575444 : std_logic_vector(0 downto 0);
 signal E_16 : std_logic_vector(0 downto 0);
 signal E_17 : std_logic_vector(0 downto 0);
 signal E_18 : std_logic_vector(0 downto 0);
 signal E_19 : std_logic_vector(0 downto 0);
 signal Gen_122_counter_or_nl : std_logic_vector(0 downto 0);
 signal E_20 : std_logic_vector(0 downto 0);
 signal E_21 : std_logic_vector(0 downto 0);
 signal E_22 : std_logic_vector(0 downto 0);
 signal Gen_122_counter_nand_1_nl : std_logic_vector(0 downto 0);
 signal E_23 : std_logic_vector(0 downto 0);
 signal E_24 : std_logic_vector(0 downto 0);
 signal E_25 : std_logic_vector(0 downto 0);
 signal E_26 : std_logic_vector(0 downto 0);
 signal Gen_109_rst : std_logic_vector(0 downto 0);
 signal Sflop_88_O_mac_counter_0_sva : std_logic_vector(0 downto 0);
 signal E_27 : std_logic_vector(0 downto 0);
 signal E_28 : std_logic_vector(0 downto 0);
 signal E_29 : std_logic_vector(0 downto 0);
begin
 O_mac_counter_4_sva_en <= E_1 ;
 E_1 <= ( nor_reduce (E_2) ) ;
 E_2 <= ( E_3 and Sflop_88_O_mac_counter_0_sva ) ;
 E_3 <= ( nor_reduce (E_4) ) ;
 E_4 <= ( E_5 or E_16 ) ;
 E_5 <= ( E_6 or E_8 ) ;
 E_6 <= ( counter_nand_2_nl or E_7 ) ;
 E_7 <= ( rst or counter_or_nl ) ;
 E_8 <= ( nor_reduce (E_9) ) ;
 E_9 <= ( E_10 and E_13 ) ;
 E_10 <= ( unsigned_unsigned_eq(n529, Gen_122_1122749733) ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
        Gen_122_1122749733 <= n529;
  end if;
 end process;

 E_11 <= "1";
 E_12 <= "0";
 E_13 <= ( E_14 and E_15 ) ;
 E_14 <= ( unsigned_unsigned_eq(n545, Gen_122_2854119917) ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
        Gen_122_2854119917 <= n545;
  end if;
 end process;

 E_15 <= ( unsigned_unsigned_eq(n609, Gen_122_794575444) ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
        Gen_122_794575444 <= n609;
  end if;
 end process;

 E_16 <= ( E_17 or E_23 ) ;
 E_17 <= ( E_18 or E_20 ) ;
 E_18 <= ( nor_reduce (E_19) ) ;
 E_19 <= ( unsigned_unsigned_eq(counter_or_nl, Gen_122_counter_or_nl) ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
        Gen_122_counter_or_nl <= counter_or_nl;
  end if;
 end process;

 E_20 <= ( E_21 or counter_nand_3_nl ) ;
 E_21 <= ( nor_reduce (E_22) ) ;
 E_22 <= ( unsigned_unsigned_eq(counter_nand_1_nl, Gen_122_counter_nand_1_nl) ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
        Gen_122_counter_nand_1_nl <= counter_nand_1_nl;
  end if;
 end process;

 E_23 <= ( counter_nand_nl or E_24 ) ;
 E_24 <= ( counter_nand_1_nl or E_25 ) ;
 E_25 <= ( nor_reduce (E_26) ) ;
 E_26 <= ( unsigned_unsigned_eq(rst, Gen_109_rst) ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
        Gen_109_rst <= rst;
  end if;
 end process;


 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_29 = "1") then
        Sflop_88_O_mac_counter_0_sva <= E_27;
     end if;
  end if;
 end process;

 E_27 <= ( E_4553 and E_28 ) ;
 E_28 <= ( not (ppro_reset_CLOCKclk_out_port) ) ;
 E_29 <= ( E_1 or ppro_reset_CLOCKclk_out_port ) ;
end architecture;


 -- QuickLink: Module: top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000
 --            Source-relation: power_top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_pa000000.vhdl:10545
 --
 --            Area before justification: 0
 --            Area after  justification: 0( 0% increase )
 --
 --            Signals with hierarchical names need to have new hierarchy ports/signals created.

 -- wire ppro_reset_CLOCKclk_out_port ; 

library ieee, work;
library calypto_lib;
use ieee.std_logic_1164.all;
use calypto_lib.powerpro_cg_package.all;
use calypto_lib.top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package.all;

entity top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_powerpro_reset_mod is 
  port ( 
        rst : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : out std_logic_vector(0 downto 0)
       );
end entity;

architecture rtl of top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_powerpro_reset_mod is 
begin
 ppro_reset_CLOCKclk_out_port <= rst ;
end architecture;

