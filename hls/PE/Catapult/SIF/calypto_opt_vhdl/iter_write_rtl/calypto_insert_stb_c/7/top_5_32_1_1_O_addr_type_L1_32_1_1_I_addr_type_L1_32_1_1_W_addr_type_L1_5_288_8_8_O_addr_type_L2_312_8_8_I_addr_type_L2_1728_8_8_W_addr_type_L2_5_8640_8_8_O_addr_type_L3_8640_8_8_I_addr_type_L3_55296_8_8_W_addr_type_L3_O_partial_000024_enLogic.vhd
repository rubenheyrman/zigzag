--+-----------------------------------------------------------------------------------+
--|                                                                                   |
--| Generated by PowerPro-10.3c_2/849904   (Jan 10 2020)  linux64  P2001101230        |
--| on Tue Jul 13 11:48:54 2021.                                                      |
--|                                                                                   |
--| This document may be used and distributed without restriction provided that       |
--| this copyright statement is not removed from the file and that any derivative     |
--| work contains this copyright notice.                                              |
--|                                                                                   |
--+-----------------------------------------------------------------------------------+

library ieee;
use ieee.std_logic_1164.all;

package top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package is
  component cg_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026 is 
  port ( 
        I_wr_data_rsci_biwt : in std_logic_vector(0 downto 0);
        I_wr_data_rsc_vld : in std_logic_vector(0 downto 0);
        I_wr_data_rsc_dat : in std_logic_vector(15 downto 0);
        o : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        I_wr_data_rsci_idat_bfwt_en : out std_logic_vector(0 downto 0)
       );
  end component;

  component cg_db_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026 is 
  port ( 
        I_data_in_rsc_dat : in std_logic_vector(15 downto 0);
        rst : in std_logic_vector(0 downto 0);
        I_data_in_rsc_vld : in std_logic_vector(0 downto 0);
        o : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        E_4929 : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        I_wr_data_rsci_idat_bfwt_en : out std_logic_vector(0 downto 0)
       );
  end component;

  component cg_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
  port ( 
        tile_bound_out : in std_logic_vector(24 downto 0);
        counter_out : in std_logic_vector(24 downto 0);
        run_wen : in std_logic_vector(0 downto 0);
        fsm_output : in std_logic_vector(1 downto 0);
        counter_or_nl : in std_logic_vector(0 downto 0);
        counter_nand_nl : in std_logic_vector(0 downto 0);
        counter_nand_2_nl : in std_logic_vector(0 downto 0);
        counter_nand_1_nl : in std_logic_vector(0 downto 0);
        counter_nand_3_nl : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        W_mac_pntr_and_cse : in std_logic_vector(0 downto 0);
        mux_614_nl : in std_logic_vector(0 downto 0);
        mux_44_nl : in std_logic_vector(0 downto 0);
        tile_pntr_nand_nl : in std_logic_vector(0 downto 0);
        counter_out_2 : in std_logic_vector(24 downto 0);
        O_mac_tile_bound_2_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        reg_W_instr_in_rsci_oswt_cse_1 : in std_logic_vector(0 downto 0);
        and_395_cse : in std_logic_vector(0 downto 0);
        O_mac_tile_bound_1_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        O_mac_tile_bound_3_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        O_mac_tile_bound_0_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        O_mac_tile_bound_4_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        tile_bound_out_3 : in std_logic_vector(24 downto 0);
        I_mac_tile_bound_4_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        I_mac_tile_bound_3_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        W_mac_tile_bound_4_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        tile_bound_out_2 : in std_logic_vector(24 downto 0);
        I_mac_tile_bound_2_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        mux_tmp_76 : in std_logic_vector(0 downto 0);
        if_6_or_itm : in std_logic_vector(0 downto 0);
        if_6_if_if_not_5_nl : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        O_mac_counter_4_sva_en : out std_logic_vector(0 downto 0);
        O_vld_zg_pntr_sva_en : out std_logic_vector(0 downto 0);
        O_mac_pntr_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_1_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_2_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_3_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_4_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_1_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_2_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_0_sva_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_2_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_1_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_3_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_0_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_3_lpi_1_en : out std_logic_vector(0 downto 0);
        W_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_2_lpi_1_en : out std_logic_vector(0 downto 0);
        o_10_1 : out std_logic_vector(0 downto 0)
       );
  end component;

  component cg_db_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
  port ( 
        counter_or_nl : in std_logic_vector(0 downto 0);
        counter_nand_nl : in std_logic_vector(0 downto 0);
        counter_nand_2_nl_22966 : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        counter_nand_1_nl : in std_logic_vector(0 downto 0);
        counter_nand_3_nl_23055 : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        E_4553 : in std_logic_vector(0 downto 0);
        if_6_if_if_not_5_nl : in std_logic_vector(0 downto 0);
        if_6_or_itm : in std_logic_vector(0 downto 0);
        E_4248 : in std_logic_vector(0 downto 0);
        mux_44_nl : in std_logic_vector(0 downto 0);
        tile_pntr_nand_nl_22923 : in std_logic_vector(0 downto 0);
        n5960 : in std_logic_vector(4 downto 0);
        n5948 : in std_logic_vector(4 downto 0);
        n5936 : in std_logic_vector(4 downto 0);
        n5864 : in std_logic_vector(4 downto 0);
        n5900 : in std_logic_vector(4 downto 0);
        n5888 : in std_logic_vector(4 downto 0);
        n5972 : in std_logic_vector(4 downto 0);
        n10536 : in std_logic_vector(4 downto 0);
        E_4101 : in std_logic_vector(0 downto 0);
        n10548 : in std_logic_vector(4 downto 0);
        n10524 : in std_logic_vector(4 downto 0);
        n10560 : in std_logic_vector(4 downto 0);
        n10512 : in std_logic_vector(4 downto 0);
        n10632 : in std_logic_vector(4 downto 0);
        n10644 : in std_logic_vector(4 downto 0);
        n10572 : in std_logic_vector(4 downto 0);
        n10656 : in std_logic_vector(4 downto 0);
        O_mac_counter_4_sva_en : out std_logic_vector(0 downto 0);
        O_vld_zg_pntr_sva_en : out std_logic_vector(0 downto 0);
        O_mac_pntr_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_1_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_2_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_3_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_4_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_1_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_2_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_0_sva_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_2_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_1_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_3_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_0_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_3_lpi_1_en : out std_logic_vector(0 downto 0);
        W_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_2_lpi_1_en : out std_logic_vector(0 downto 0);
        o_10 : out std_logic_vector(0 downto 0)
       );
  end component;

  component top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_powerpro_reset_mod is 
  port ( 
        rst : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : out std_logic_vector(0 downto 0)
       );
  end component;

end package;


 -- QuickLink: Instance: top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000001.PE.rf_5_32_32_32_1_1_1_1_1_1_O_partial_type_O_addr_type_L1_I_type_I_addr_type_L1_W_type_W_addr_type_L1_run_inst.rf_5_32_32_32_1_1_1_1_1_1_O_partial_type_O_addr_type_L1_I_type_I_addr_type_L1_W_type_W_addr_type_L1_run_I_wr_data_rsci_inst.rf_5_32_32_32_1_1_1_1_1_1_O_partial_type_O_addr_type_L1_I_type_I_addr_type_L1_W_type_W_addr_type_L1_run_I_wr_data_rsci_I_wr_data_wait_dp_inst, Module: topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026
 --            Source-relation: power_top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_pa000000.vhdl:1856
 --
 --            Area before justification: 36.906
 --            Area after  justification: 37.97( 2.883% increase )
 --
 --            Signals with hierarchical names need to have new hierarchy ports/signals created.

 -- wire I_wr_data_rsci_idat_bfwt_en ; 

library ieee, work;
library calypto_lib;
use ieee.std_logic_1164.all;
use calypto_lib.powerpro_cg_package.all;
use calypto_lib.top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package.all;

entity cg_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026 is 
  port ( 
        I_wr_data_rsci_biwt : in std_logic_vector(0 downto 0);
        I_wr_data_rsc_vld : in std_logic_vector(0 downto 0);
        I_wr_data_rsc_dat : in std_logic_vector(15 downto 0);
        o : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        I_wr_data_rsci_idat_bfwt_en : out std_logic_vector(0 downto 0)
       );
end entity;

architecture rtl of cg_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026 is 
 signal E_1 : std_logic_vector(0 downto 0);
begin
 inst_cg_db_const_stb_topless_5comma_32co : cg_db_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026
    port map (
              I_data_in_rsc_dat => I_wr_data_rsc_dat,
              rst => rst,
              I_data_in_rsc_vld => I_wr_data_rsc_vld,
              o => o,
              clk => clk,
              E_4929 => E_1,
              ppro_reset_CLOCKclk_out_port => ppro_reset_CLOCKclk_out_port,
              I_wr_data_rsci_idat_bfwt_en => I_wr_data_rsci_idat_bfwt_en
              );
 E_1 <= ( rst or I_wr_data_rsci_biwt ) ;
end architecture;

library ieee, work;
library calypto_lib;
use ieee.std_logic_1164.all;
use calypto_lib.powerpro_cg_package.all;
use calypto_lib.top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package.all;

entity cg_db_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026 is 
  port ( 
        I_data_in_rsc_dat : in std_logic_vector(15 downto 0);
        rst : in std_logic_vector(0 downto 0);
        I_data_in_rsc_vld : in std_logic_vector(0 downto 0);
        o : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        E_4929 : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        I_wr_data_rsci_idat_bfwt_en : out std_logic_vector(0 downto 0)
       );
end entity;

architecture rtl of cg_db_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026 is 
 signal E_1 : std_logic_vector(0 downto 0);
 signal Cflop_106_I_wr_data_rsci_idat_bfwt1 : std_logic_vector(0 downto 0);
 signal E_2 : std_logic_vector(0 downto 0);
 signal E_3 : std_logic_vector(0 downto 0);
 signal E_4 : std_logic_vector(0 downto 0);
 signal E_5 : std_logic_vector(15 downto 0);
 signal E_6 : std_logic_vector(0 downto 0);
 signal E_7 : std_logic_vector(0 downto 0);
 signal E_8 : std_logic_vector(0 downto 0);
 signal E_9 : std_logic_vector(0 downto 0);
begin
 I_wr_data_rsci_idat_bfwt_en <= ( not (E_1) ) ;
 E_1 <= ( Cflop_106_I_wr_data_rsci_idat_bfwt1 and E_3 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_8 = "1") then
        Cflop_106_I_wr_data_rsci_idat_bfwt1 <= E_2;
     end if;
  end if;
 end process;

 E_2 <= ( E_3 and o ) ;
 E_3 <= ( E_4 and E_6 ) ;
 E_4 <= ( unsigned_unsigned_eq(I_data_in_rsc_dat, E_5) ) ;
 E_5 <= "0000000000000001";
 E_6 <= ( E_7 and I_data_in_rsc_vld ) ;
 E_7 <= ( nor_reduce (rst) ) ;
 E_8 <= ( E_4929 or ppro_reset_CLOCKclk_out_port ) ;
 E_9 <= "0";
end architecture;


 -- QuickLink: Instance: top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000001.PE.rf_5_32_32_32_1_1_1_1_1_1_O_partial_type_O_addr_type_L1_I_type_I_addr_type_L1_W_type_W_addr_type_L1_run_inst, Module: topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003
 --            Source-relation: power_top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_pa000000.vhdl:5044
 --
 --            Area before justification: 296.418
 --            Area after  justification: 544.064( 83.5463% increase )
 --
 --            Signals with hierarchical names need to have new hierarchy ports/signals created.

 -- wire O_mac_counter_4_sva_en ; 

 -- wire O_vld_zg_pntr_sva_en ; 

 -- wire O_mac_pntr_sva_en ; 

 -- wire I_mac_counter_1_sva_en ; 

 -- wire I_mac_counter_2_sva_en ; 

 -- wire I_mac_counter_3_sva_en ; 

 -- wire W_mac_counter_4_sva_en ; 

 -- wire W_mac_counter_1_sva_en ; 

 -- wire W_mac_counter_2_sva_en ; 

 -- wire I_mac_counter_0_sva_en ; 

 -- wire O_mac_tile_bound_2_lpi_1_en ; 

 -- wire O_mac_tile_bound_1_lpi_1_en ; 

 -- wire O_mac_tile_bound_3_lpi_1_en ; 

 -- wire O_mac_tile_bound_0_lpi_1_en ; 

 -- wire O_mac_tile_bound_4_lpi_1_en ; 

 -- wire I_mac_tile_bound_4_lpi_1_en ; 

 -- wire I_mac_tile_bound_3_lpi_1_en ; 

 -- wire W_mac_tile_bound_4_lpi_1_en ; 

 -- wire I_mac_tile_bound_2_lpi_1_en ; 

 -- wire o_10_1 ; 

library ieee, work;
library calypto_lib;
use ieee.std_logic_1164.all;
use calypto_lib.powerpro_cg_package.all;
use calypto_lib.top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package.all;

entity cg_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
  port ( 
        tile_bound_out : in std_logic_vector(24 downto 0);
        counter_out : in std_logic_vector(24 downto 0);
        run_wen : in std_logic_vector(0 downto 0);
        fsm_output : in std_logic_vector(1 downto 0);
        counter_or_nl : in std_logic_vector(0 downto 0);
        counter_nand_nl : in std_logic_vector(0 downto 0);
        counter_nand_2_nl : in std_logic_vector(0 downto 0);
        counter_nand_1_nl : in std_logic_vector(0 downto 0);
        counter_nand_3_nl : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        W_mac_pntr_and_cse : in std_logic_vector(0 downto 0);
        mux_614_nl : in std_logic_vector(0 downto 0);
        mux_44_nl : in std_logic_vector(0 downto 0);
        tile_pntr_nand_nl : in std_logic_vector(0 downto 0);
        counter_out_2 : in std_logic_vector(24 downto 0);
        O_mac_tile_bound_2_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        reg_W_instr_in_rsci_oswt_cse_1 : in std_logic_vector(0 downto 0);
        and_395_cse : in std_logic_vector(0 downto 0);
        O_mac_tile_bound_1_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        O_mac_tile_bound_3_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        O_mac_tile_bound_0_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        O_mac_tile_bound_4_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        tile_bound_out_3 : in std_logic_vector(24 downto 0);
        I_mac_tile_bound_4_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        I_mac_tile_bound_3_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        W_mac_tile_bound_4_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        tile_bound_out_2 : in std_logic_vector(24 downto 0);
        I_mac_tile_bound_2_lpi_1_dfm_mx0 : in std_logic_vector(4 downto 0);
        mux_tmp_76 : in std_logic_vector(0 downto 0);
        if_6_or_itm : in std_logic_vector(0 downto 0);
        if_6_if_if_not_5_nl : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        O_mac_counter_4_sva_en : out std_logic_vector(0 downto 0);
        O_vld_zg_pntr_sva_en : out std_logic_vector(0 downto 0);
        O_mac_pntr_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_1_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_2_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_3_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_4_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_1_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_2_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_0_sva_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_2_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_1_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_3_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_0_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_3_lpi_1_en : out std_logic_vector(0 downto 0);
        W_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_2_lpi_1_en : out std_logic_vector(0 downto 0);
        o_10_1 : out std_logic_vector(0 downto 0)
       );
end entity;

architecture rtl of cg_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
 signal E_1 : std_logic_vector(4 downto 0);
 signal E_2 : std_logic_vector(4 downto 0);
 signal E_3 : std_logic_vector(4 downto 0);
 signal E_4 : std_logic_vector(4 downto 0);
 signal E_5 : std_logic_vector(4 downto 0);
 signal E_6 : std_logic_vector(4 downto 0);
 signal E_7 : std_logic_vector(4 downto 0);
 signal E_8 : std_logic_vector(4 downto 0);
 signal E_9 : std_logic_vector(0 downto 0);
 signal E_10 : std_logic_vector(4 downto 0);
 signal E_11 : std_logic_vector(4 downto 0);
 signal E_12 : std_logic_vector(4 downto 0);
 signal E_13 : std_logic_vector(4 downto 0);
 signal E_14 : std_logic_vector(4 downto 0);
 signal E_15 : std_logic_vector(4 downto 0);
 signal E_16 : std_logic_vector(4 downto 0);
 signal E_17 : std_logic_vector(4 downto 0);
 signal E_18 : std_logic_vector(0 downto 0);
 signal E_19 : std_logic_vector(0 downto 0);
 signal E_20 : std_logic_vector(4 downto 0);
 signal E_21 : std_logic_vector(4 downto 0);
 signal E_22 : std_logic_vector(4 downto 0);
 signal E_23 : std_logic_vector(4 downto 0);
 signal E_24 : std_logic_vector(4 downto 0);
 signal E_25 : std_logic_vector(4 downto 0);
 signal E_26 : std_logic_vector(4 downto 0);
 signal E_27 : std_logic_vector(4 downto 0);
 signal E_28 : std_logic_vector(4 downto 0);
 signal E_29 : std_logic_vector(4 downto 0);
 signal E_30 : std_logic_vector(4 downto 0);
 signal E_31 : std_logic_vector(4 downto 0);
 signal E_32 : std_logic_vector(4 downto 0);
 signal E_33 : std_logic_vector(4 downto 0);
 signal E_34 : std_logic_vector(4 downto 0);
 signal E_35 : std_logic_vector(4 downto 0);
 signal E_36 : std_logic_vector(4 downto 0);
 signal E_37 : std_logic_vector(0 downto 0);
 signal E_38 : std_logic_vector(0 downto 0);
 signal E_39 : std_logic_vector(0 downto 0);
 signal E_40 : std_logic_vector(0 downto 0);
 signal E_41 : std_logic_vector(0 downto 0);
 signal E_42 : std_logic_vector(0 downto 0);
 signal E_43 : std_logic_vector(4 downto 0);
 signal E_44 : std_logic_vector(4 downto 0);
 signal E_45 : std_logic_vector(4 downto 0);
 signal E_46 : std_logic_vector(4 downto 0);
 signal E_47 : std_logic_vector(4 downto 0);
 signal E_48 : std_logic_vector(4 downto 0);
 signal E_49 : std_logic_vector(4 downto 0);
 signal E_50 : std_logic_vector(4 downto 0);
 signal E_51 : std_logic_vector(4 downto 0);
 signal E_52 : std_logic_vector(0 downto 0);
 signal E_53 : std_logic_vector(0 downto 0);
 signal E_54 : std_logic_vector(0 downto 0);
 signal E_55 : std_logic_vector(0 downto 0);
 signal E_56 : std_logic_vector(0 downto 0);
 signal E_57 : std_logic_vector(0 downto 0);
 signal E_58 : std_logic_vector(0 downto 0);
 signal E_59 : std_logic_vector(0 downto 0);
begin
 E_56 <= ( fsm_output(0 downto 0) ) ;
 E_45 <= ( counter_out(4 downto 0) ) ;
 E_32 <= ( tile_bound_out_3(4 downto 0) ) ;
 inst_cg_db_const_stb_topless_5comma_32co : cg_db_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003
    port map (
              counter_or_nl => counter_or_nl,
              counter_nand_nl => counter_nand_nl,
              counter_nand_2_nl_22966 => counter_nand_2_nl,
              rst => rst,
              counter_nand_1_nl => counter_nand_1_nl,
              counter_nand_3_nl_23055 => counter_nand_3_nl,
              ppro_reset_CLOCKclk_out_port => ppro_reset_CLOCKclk_out_port,
              clk => clk,
              E_4553 => E_19,
              O_mac_counter_4_sva_en => O_mac_counter_4_sva_en,
              if_6_if_if_not_5_nl => if_6_if_if_not_5_nl,
              if_6_or_itm => if_6_or_itm,
              E_4248 => E_18,
              O_vld_zg_pntr_sva_en => O_vld_zg_pntr_sva_en,
              mux_44_nl => mux_44_nl,
              tile_pntr_nand_nl_22923 => tile_pntr_nand_nl,
              O_mac_pntr_sva_en => O_mac_pntr_sva_en,
              n5960 => E_17,
              I_mac_counter_1_sva_en => I_mac_counter_1_sva_en,
              n5948 => E_16,
              I_mac_counter_2_sva_en => I_mac_counter_2_sva_en,
              n5936 => E_15,
              I_mac_counter_3_sva_en => I_mac_counter_3_sva_en,
              n5864 => E_14,
              W_mac_counter_4_sva_en => W_mac_counter_4_sva_en,
              n5900 => E_13,
              W_mac_counter_1_sva_en => W_mac_counter_1_sva_en,
              n5888 => E_12,
              W_mac_counter_2_sva_en => W_mac_counter_2_sva_en,
              n5972 => E_11,
              I_mac_counter_0_sva_en => I_mac_counter_0_sva_en,
              n10536 => E_10,
              E_4101 => E_9,
              O_mac_tile_bound_2_lpi_1_en => O_mac_tile_bound_2_lpi_1_en,
              n10548 => E_8,
              O_mac_tile_bound_1_lpi_1_en => O_mac_tile_bound_1_lpi_1_en,
              n10524 => E_7,
              O_mac_tile_bound_3_lpi_1_en => O_mac_tile_bound_3_lpi_1_en,
              n10560 => E_6,
              O_mac_tile_bound_0_lpi_1_en => O_mac_tile_bound_0_lpi_1_en,
              n10512 => E_5,
              O_mac_tile_bound_4_lpi_1_en => O_mac_tile_bound_4_lpi_1_en,
              n10632 => E_4,
              I_mac_tile_bound_4_lpi_1_en => I_mac_tile_bound_4_lpi_1_en,
              n10644 => E_3,
              I_mac_tile_bound_3_lpi_1_en => I_mac_tile_bound_3_lpi_1_en,
              n10572 => E_2,
              W_mac_tile_bound_4_lpi_1_en => W_mac_tile_bound_4_lpi_1_en,
              n10656 => E_1,
              I_mac_tile_bound_2_lpi_1_en => I_mac_tile_bound_2_lpi_1_en,
              o_10 => o_10_1
              );

 process (rst, E_20, E_22)
 begin
	case rst is
		when "0" => E_1 <= E_20;
		when others => E_1 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_21, I_mac_tile_bound_2_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_20 <= E_21;
		when others => E_20 <= I_mac_tile_bound_2_lpi_1_dfm_mx0;
	end case;
 end process;
 E_21 <= ( tile_bound_out(14 downto 10) ) ;
 E_22 <= "00000";

 process (rst, E_23, E_22)
 begin
	case rst is
		when "0" => E_2 <= E_23;
		when others => E_2 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_24, W_mac_tile_bound_4_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_23 <= E_24;
		when others => E_23 <= W_mac_tile_bound_4_lpi_1_dfm_mx0;
	end case;
 end process;
 E_24 <= ( tile_bound_out_2(24 downto 20) ) ;

 process (rst, E_25, E_22)
 begin
	case rst is
		when "0" => E_3 <= E_25;
		when others => E_3 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_26, I_mac_tile_bound_3_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_25 <= E_26;
		when others => E_25 <= I_mac_tile_bound_3_lpi_1_dfm_mx0;
	end case;
 end process;
 E_26 <= ( tile_bound_out(19 downto 15) ) ;

 process (rst, E_27, E_22)
 begin
	case rst is
		when "0" => E_4 <= E_27;
		when others => E_4 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_28, I_mac_tile_bound_4_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_27 <= E_28;
		when others => E_27 <= I_mac_tile_bound_4_lpi_1_dfm_mx0;
	end case;
 end process;
 E_28 <= ( tile_bound_out(24 downto 20) ) ;

 process (rst, E_29, E_22)
 begin
	case rst is
		when "0" => E_5 <= E_29;
		when others => E_5 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_30, O_mac_tile_bound_4_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_29 <= E_30;
		when others => E_29 <= O_mac_tile_bound_4_lpi_1_dfm_mx0;
	end case;
 end process;
 E_30 <= ( tile_bound_out_3(24 downto 20) ) ;

 process (rst, E_31, E_22)
 begin
	case rst is
		when "0" => E_6 <= E_31;
		when others => E_6 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_32, O_mac_tile_bound_0_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_31 <= E_32;
		when others => E_31 <= O_mac_tile_bound_0_lpi_1_dfm_mx0;
	end case;
 end process;

 process (rst, E_33, E_22)
 begin
	case rst is
		when "0" => E_7 <= E_33;
		when others => E_7 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_34, O_mac_tile_bound_3_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_33 <= E_34;
		when others => E_33 <= O_mac_tile_bound_3_lpi_1_dfm_mx0;
	end case;
 end process;
 E_34 <= ( tile_bound_out_3(19 downto 15) ) ;

 process (rst, E_35, E_22)
 begin
	case rst is
		when "0" => E_8 <= E_35;
		when others => E_8 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_36, O_mac_tile_bound_1_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_35 <= E_36;
		when others => E_35 <= O_mac_tile_bound_1_lpi_1_dfm_mx0;
	end case;
 end process;
 E_36 <= ( tile_bound_out_3(9 downto 5) ) ;
 E_9 <= ( E_37 and E_38 ) ;
 E_37 <= ( rst or and_395_cse ) ;
 E_38 <= ( E_39 or reg_W_instr_in_rsci_oswt_cse_1 ) ;
 E_39 <= ( E_40 or E_42 ) ;
 E_40 <= ( rst or E_41 ) ;
 E_41 <= ( nor_reduce (and_395_cse) ) ;
 E_42 <= ( nor_reduce (mux_tmp_76) ) ;

 process (rst, E_43, E_22)
 begin
	case rst is
		when "0" => E_10 <= E_43;
		when others => E_10 <= E_22;
	end case;
 end process;

 process (mux_tmp_76, E_44, O_mac_tile_bound_2_lpi_1_dfm_mx0)
 begin
	case mux_tmp_76 is
		when "0" => E_43 <= E_44;
		when others => E_43 <= O_mac_tile_bound_2_lpi_1_dfm_mx0;
	end case;
 end process;
 E_44 <= ( tile_bound_out_3(14 downto 10) ) ;

 process (rst, E_45, E_22)
 begin
	case rst is
		when "0" => E_11 <= E_45;
		when others => E_11 <= E_22;
	end case;
 end process;

 process (rst, E_46, E_22)
 begin
	case rst is
		when "0" => E_12 <= E_46;
		when others => E_12 <= E_22;
	end case;
 end process;
 E_46 <= ( counter_out_2(14 downto 10) ) ;

 process (rst, E_47, E_22)
 begin
	case rst is
		when "0" => E_13 <= E_47;
		when others => E_13 <= E_22;
	end case;
 end process;
 E_47 <= ( counter_out_2(9 downto 5) ) ;

 process (rst, E_48, E_22)
 begin
	case rst is
		when "0" => E_14 <= E_48;
		when others => E_14 <= E_22;
	end case;
 end process;
 E_48 <= ( counter_out_2(24 downto 20) ) ;

 process (rst, E_49, E_22)
 begin
	case rst is
		when "0" => E_15 <= E_49;
		when others => E_15 <= E_22;
	end case;
 end process;
 E_49 <= ( counter_out(19 downto 15) ) ;

 process (rst, E_50, E_22)
 begin
	case rst is
		when "0" => E_16 <= E_50;
		when others => E_16 <= E_22;
	end case;
 end process;
 E_50 <= ( counter_out(14 downto 10) ) ;

 process (rst, E_51, E_22)
 begin
	case rst is
		when "0" => E_17 <= E_51;
		when others => E_17 <= E_22;
	end case;
 end process;
 E_51 <= ( counter_out(9 downto 5) ) ;
 E_18 <= ( E_52 and E_57 ) ;
 E_52 <= ( rst or E_53 ) ;
 E_53 <= ( E_54 and E_55 ) ;
 E_54 <= ( mux_614_nl and run_wen ) ;
 E_55 <= ( not (E_56) ) ;
 E_57 <= ( E_58 or if_6_or_itm ) ;
 E_58 <= ( rst or E_59 ) ;
 E_59 <= ( nor_reduce (E_53) ) ;
 E_19 <= ( rst or W_mac_pntr_and_cse ) ;
end architecture;

library ieee, work;
library calypto_lib;
use ieee.std_logic_1164.all;
use calypto_lib.powerpro_cg_package.all;
use calypto_lib.top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package.all;

entity cg_db_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
  port ( 
        counter_or_nl : in std_logic_vector(0 downto 0);
        counter_nand_nl : in std_logic_vector(0 downto 0);
        counter_nand_2_nl_22966 : in std_logic_vector(0 downto 0);
        rst : in std_logic_vector(0 downto 0);
        counter_nand_1_nl : in std_logic_vector(0 downto 0);
        counter_nand_3_nl_23055 : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : in std_logic_vector(0 downto 0);
        clk : in std_logic_vector(0 downto 0);
        E_4553 : in std_logic_vector(0 downto 0);
        if_6_if_if_not_5_nl : in std_logic_vector(0 downto 0);
        if_6_or_itm : in std_logic_vector(0 downto 0);
        E_4248 : in std_logic_vector(0 downto 0);
        mux_44_nl : in std_logic_vector(0 downto 0);
        tile_pntr_nand_nl_22923 : in std_logic_vector(0 downto 0);
        n5960 : in std_logic_vector(4 downto 0);
        n5948 : in std_logic_vector(4 downto 0);
        n5936 : in std_logic_vector(4 downto 0);
        n5864 : in std_logic_vector(4 downto 0);
        n5900 : in std_logic_vector(4 downto 0);
        n5888 : in std_logic_vector(4 downto 0);
        n5972 : in std_logic_vector(4 downto 0);
        n10536 : in std_logic_vector(4 downto 0);
        E_4101 : in std_logic_vector(0 downto 0);
        n10548 : in std_logic_vector(4 downto 0);
        n10524 : in std_logic_vector(4 downto 0);
        n10560 : in std_logic_vector(4 downto 0);
        n10512 : in std_logic_vector(4 downto 0);
        n10632 : in std_logic_vector(4 downto 0);
        n10644 : in std_logic_vector(4 downto 0);
        n10572 : in std_logic_vector(4 downto 0);
        n10656 : in std_logic_vector(4 downto 0);
        O_mac_counter_4_sva_en : out std_logic_vector(0 downto 0);
        O_vld_zg_pntr_sva_en : out std_logic_vector(0 downto 0);
        O_mac_pntr_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_1_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_2_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_3_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_4_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_1_sva_en : out std_logic_vector(0 downto 0);
        W_mac_counter_2_sva_en : out std_logic_vector(0 downto 0);
        I_mac_counter_0_sva_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_2_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_1_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_3_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_0_lpi_1_en : out std_logic_vector(0 downto 0);
        O_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_3_lpi_1_en : out std_logic_vector(0 downto 0);
        W_mac_tile_bound_4_lpi_1_en : out std_logic_vector(0 downto 0);
        I_mac_tile_bound_2_lpi_1_en : out std_logic_vector(0 downto 0);
        o_10 : out std_logic_vector(0 downto 0)
       );
end entity;

architecture rtl of cg_db_const_stb_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 is 
 signal E_1 : std_logic_vector(0 downto 0);
 signal Cflop_88_O_mac_counter_0_sva0 : std_logic_vector(0 downto 0);
 signal E_2 : std_logic_vector(0 downto 0);
 signal E_3 : std_logic_vector(0 downto 0);
 signal E_4 : std_logic_vector(0 downto 0);
 signal E_5 : std_logic_vector(0 downto 0);
 signal E_6 : std_logic_vector(0 downto 0);
 signal E_7 : std_logic_vector(0 downto 0);
 signal E_8 : std_logic_vector(0 downto 0);
 signal E_9 : std_logic_vector(0 downto 0);
 signal E_10 : std_logic_vector(0 downto 0);
 signal E_11 : std_logic_vector(0 downto 0);
 signal Cflop_88_O_vld_zg_pntr_sva0 : std_logic_vector(0 downto 0);
 signal E_12 : std_logic_vector(0 downto 0);
 signal E_13 : std_logic_vector(0 downto 0);
 signal E_14 : std_logic_vector(0 downto 0);
 signal E_15 : std_logic_vector(0 downto 0);
 signal E_16 : std_logic_vector(0 downto 0);
 signal E_17 : std_logic_vector(0 downto 0);
 signal E_18 : std_logic_vector(0 downto 0);
 signal Cflop_88_O_mac_pntr_sva0 : std_logic_vector(0 downto 0);
 signal E_19 : std_logic_vector(0 downto 0);
 signal E_20 : std_logic_vector(0 downto 0);
 signal E_21 : std_logic_vector(0 downto 0);
 signal E_22 : std_logic_vector(0 downto 0);
 signal E_23 : std_logic_vector(0 downto 0);
 signal E_24 : std_logic_vector(0 downto 0);
 signal Cflop_88_I_mac_counter_1_sva0 : std_logic_vector(0 downto 0);
 signal E_25 : std_logic_vector(0 downto 0);
 signal E_26 : std_logic_vector(0 downto 0);
 signal E_27 : std_logic_vector(0 downto 0);
 signal Cflop_88_I_mac_counter_2_sva0 : std_logic_vector(0 downto 0);
 signal E_28 : std_logic_vector(0 downto 0);
 signal E_29 : std_logic_vector(0 downto 0);
 signal E_30 : std_logic_vector(0 downto 0);
 signal Cflop_88_I_mac_counter_3_sva0 : std_logic_vector(0 downto 0);
 signal E_31 : std_logic_vector(0 downto 0);
 signal E_32 : std_logic_vector(0 downto 0);
 signal E_33 : std_logic_vector(0 downto 0);
 signal Cflop_88_W_mac_counter_4_sva0 : std_logic_vector(0 downto 0);
 signal E_34 : std_logic_vector(0 downto 0);
 signal E_35 : std_logic_vector(0 downto 0);
 signal E_36 : std_logic_vector(0 downto 0);
 signal Cflop_88_W_mac_counter_1_sva0 : std_logic_vector(0 downto 0);
 signal E_37 : std_logic_vector(0 downto 0);
 signal E_38 : std_logic_vector(0 downto 0);
 signal E_39 : std_logic_vector(0 downto 0);
 signal Cflop_88_W_mac_counter_2_sva0 : std_logic_vector(0 downto 0);
 signal E_40 : std_logic_vector(0 downto 0);
 signal E_41 : std_logic_vector(0 downto 0);
 signal E_42 : std_logic_vector(0 downto 0);
 signal Cflop_88_I_mac_counter_0_sva0 : std_logic_vector(0 downto 0);
 signal E_43 : std_logic_vector(0 downto 0);
 signal E_44 : std_logic_vector(0 downto 0);
 signal E_45 : std_logic_vector(4 downto 0);
 signal E_46 : std_logic_vector(0 downto 0);
 signal Cflop_88_O_mac_tile_bound_2_lpi_11 : std_logic_vector(0 downto 0);
 signal E_47 : std_logic_vector(0 downto 0);
 signal E_48 : std_logic_vector(0 downto 0);
 signal E_49 : std_logic_vector(0 downto 0);
 signal E_50 : std_logic_vector(0 downto 0);
 signal Cflop_88_O_mac_tile_bound_1_lpi_11 : std_logic_vector(0 downto 0);
 signal E_51 : std_logic_vector(0 downto 0);
 signal E_52 : std_logic_vector(0 downto 0);
 signal E_53 : std_logic_vector(0 downto 0);
 signal Cflop_88_O_mac_tile_bound_3_lpi_11 : std_logic_vector(0 downto 0);
 signal E_54 : std_logic_vector(0 downto 0);
 signal E_55 : std_logic_vector(0 downto 0);
 signal E_56 : std_logic_vector(0 downto 0);
 signal Cflop_88_O_mac_tile_bound_0_lpi_11 : std_logic_vector(0 downto 0);
 signal E_57 : std_logic_vector(0 downto 0);
 signal E_58 : std_logic_vector(0 downto 0);
 signal E_59 : std_logic_vector(0 downto 0);
 signal Cflop_88_O_mac_tile_bound_4_lpi_11 : std_logic_vector(0 downto 0);
 signal E_60 : std_logic_vector(0 downto 0);
 signal E_61 : std_logic_vector(0 downto 0);
 signal E_62 : std_logic_vector(4 downto 0);
 signal E_63 : std_logic_vector(0 downto 0);
 signal Cflop_88_I_mac_tile_bound_4_lpi_117 : std_logic_vector(0 downto 0);
 signal E_64 : std_logic_vector(0 downto 0);
 signal E_65 : std_logic_vector(0 downto 0);
 signal E_66 : std_logic_vector(0 downto 0);
 signal Cflop_88_I_mac_tile_bound_3_lpi_117 : std_logic_vector(0 downto 0);
 signal E_67 : std_logic_vector(0 downto 0);
 signal E_68 : std_logic_vector(0 downto 0);
 signal E_69 : std_logic_vector(4 downto 0);
 signal E_70 : std_logic_vector(0 downto 0);
 signal Cflop_88_W_mac_tile_bound_4_lpi_118 : std_logic_vector(0 downto 0);
 signal E_71 : std_logic_vector(0 downto 0);
 signal E_72 : std_logic_vector(0 downto 0);
 signal E_73 : std_logic_vector(4 downto 0);
 signal E_74 : std_logic_vector(0 downto 0);
 signal Cflop_88_I_mac_tile_bound_2_lpi_127 : std_logic_vector(0 downto 0);
 signal E_75 : std_logic_vector(0 downto 0);
 signal E_76 : std_logic_vector(0 downto 0);
 signal E_77 : std_logic_vector(4 downto 0);
 signal E_78 : std_logic_vector(0 downto 0);
begin
 o_10 <= E_9 ;
 O_mac_counter_4_sva_en <= ( not (E_1) ) ;
 E_1 <= ( Cflop_88_O_mac_counter_0_sva0 and E_3 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_O_mac_counter_0_sva0 <= E_2;
     end if;
  end if;
 end process;

 E_2 <= ( E_3 and E_9 ) ;
 E_3 <= ( nor_reduce (E_4) ) ;
 E_4 <= ( E_5 or E_7 ) ;
 E_5 <= ( counter_or_nl or E_6 ) ;
 E_6 <= ( counter_nand_nl or counter_nand_2_nl_22966 ) ;
 E_7 <= ( rst or E_8 ) ;
 E_8 <= ( counter_nand_1_nl or counter_nand_3_nl_23055 ) ;
 E_9 <= ( not (ppro_reset_CLOCKclk_out_port) ) ;
 E_10 <= ( E_4553 or ppro_reset_CLOCKclk_out_port ) ;
 O_vld_zg_pntr_sva_en <= ( not (E_11) ) ;
 E_11 <= ( Cflop_88_O_vld_zg_pntr_sva0 and E_13 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_17 = "1") then
        Cflop_88_O_vld_zg_pntr_sva0 <= E_12;
     end if;
  end if;
 end process;

 E_12 <= ( E_13 and E_9 ) ;
 E_13 <= ( nor_reduce (E_14) ) ;
 E_14 <= ( rst or E_15 ) ;
 E_15 <= ( if_6_if_if_not_5_nl or E_16 ) ;
 E_16 <= ( nor_reduce (if_6_or_itm) ) ;
 E_17 <= ( E_4248 or ppro_reset_CLOCKclk_out_port ) ;
 O_mac_pntr_sva_en <= ( not (E_18) ) ;
 E_18 <= ( Cflop_88_O_mac_pntr_sva0 and E_20 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_O_mac_pntr_sva0 <= E_19;
     end if;
  end if;
 end process;

 E_19 <= ( E_20 and E_9 ) ;
 E_20 <= ( nor_reduce (E_21) ) ;
 E_21 <= ( rst or E_22 ) ;
 E_22 <= ( E_23 or tile_pntr_nand_nl_22923 ) ;
 E_23 <= ( nor_reduce (mux_44_nl) ) ;
 I_mac_counter_1_sva_en <= ( not (E_24) ) ;
 E_24 <= ( Cflop_88_I_mac_counter_1_sva0 and E_26 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_I_mac_counter_1_sva0 <= E_25;
     end if;
  end if;
 end process;

 E_25 <= ( E_26 and E_9 ) ;
 E_26 <= ( unsigned_unsigned_eq(n5960, E_45) ) ;
 I_mac_counter_2_sva_en <= ( not (E_27) ) ;
 E_27 <= ( Cflop_88_I_mac_counter_2_sva0 and E_29 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_I_mac_counter_2_sva0 <= E_28;
     end if;
  end if;
 end process;

 E_28 <= ( E_29 and E_9 ) ;
 E_29 <= ( unsigned_unsigned_eq(n5948, E_45) ) ;
 I_mac_counter_3_sva_en <= ( not (E_30) ) ;
 E_30 <= ( Cflop_88_I_mac_counter_3_sva0 and E_32 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_I_mac_counter_3_sva0 <= E_31;
     end if;
  end if;
 end process;

 E_31 <= ( E_32 and E_9 ) ;
 E_32 <= ( unsigned_unsigned_eq(n5936, E_45) ) ;
 W_mac_counter_4_sva_en <= ( not (E_33) ) ;
 E_33 <= ( Cflop_88_W_mac_counter_4_sva0 and E_35 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_W_mac_counter_4_sva0 <= E_34;
     end if;
  end if;
 end process;

 E_34 <= ( E_35 and E_9 ) ;
 E_35 <= ( unsigned_unsigned_eq(n5864, E_45) ) ;
 W_mac_counter_1_sva_en <= ( not (E_36) ) ;
 E_36 <= ( Cflop_88_W_mac_counter_1_sva0 and E_38 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_W_mac_counter_1_sva0 <= E_37;
     end if;
  end if;
 end process;

 E_37 <= ( E_38 and E_9 ) ;
 E_38 <= ( unsigned_unsigned_eq(n5900, E_45) ) ;
 W_mac_counter_2_sva_en <= ( not (E_39) ) ;
 E_39 <= ( Cflop_88_W_mac_counter_2_sva0 and E_41 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_W_mac_counter_2_sva0 <= E_40;
     end if;
  end if;
 end process;

 E_40 <= ( E_41 and E_9 ) ;
 E_41 <= ( unsigned_unsigned_eq(n5888, E_45) ) ;
 I_mac_counter_0_sva_en <= ( not (E_42) ) ;
 E_42 <= ( Cflop_88_I_mac_counter_0_sva0 and E_44 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_10 = "1") then
        Cflop_88_I_mac_counter_0_sva0 <= E_43;
     end if;
  end if;
 end process;

 E_43 <= ( E_44 and E_9 ) ;
 E_44 <= ( unsigned_unsigned_eq(n5972, E_45) ) ;
 E_45 <= "00000";
 O_mac_tile_bound_2_lpi_1_en <= ( not (E_46) ) ;
 E_46 <= ( Cflop_88_O_mac_tile_bound_2_lpi_11 and E_48 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_O_mac_tile_bound_2_lpi_11 <= E_47;
     end if;
  end if;
 end process;

 E_47 <= ( E_48 and E_9 ) ;
 E_48 <= ( unsigned_unsigned_eq(n10536, E_62) ) ;
 E_49 <= ( E_4101 or ppro_reset_CLOCKclk_out_port ) ;
 O_mac_tile_bound_1_lpi_1_en <= ( not (E_50) ) ;
 E_50 <= ( Cflop_88_O_mac_tile_bound_1_lpi_11 and E_52 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_O_mac_tile_bound_1_lpi_11 <= E_51;
     end if;
  end if;
 end process;

 E_51 <= ( E_52 and E_9 ) ;
 E_52 <= ( unsigned_unsigned_eq(n10548, E_62) ) ;
 O_mac_tile_bound_3_lpi_1_en <= ( not (E_53) ) ;
 E_53 <= ( Cflop_88_O_mac_tile_bound_3_lpi_11 and E_55 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_O_mac_tile_bound_3_lpi_11 <= E_54;
     end if;
  end if;
 end process;

 E_54 <= ( E_55 and E_9 ) ;
 E_55 <= ( unsigned_unsigned_eq(n10524, E_62) ) ;
 O_mac_tile_bound_0_lpi_1_en <= ( not (E_56) ) ;
 E_56 <= ( Cflop_88_O_mac_tile_bound_0_lpi_11 and E_58 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_O_mac_tile_bound_0_lpi_11 <= E_57;
     end if;
  end if;
 end process;

 E_57 <= ( E_58 and E_9 ) ;
 E_58 <= ( unsigned_unsigned_eq(n10560, E_62) ) ;
 O_mac_tile_bound_4_lpi_1_en <= ( not (E_59) ) ;
 E_59 <= ( Cflop_88_O_mac_tile_bound_4_lpi_11 and E_61 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_O_mac_tile_bound_4_lpi_11 <= E_60;
     end if;
  end if;
 end process;

 E_60 <= ( E_61 and E_9 ) ;
 E_61 <= ( unsigned_unsigned_eq(n10512, E_62) ) ;
 E_62 <= "00001";
 I_mac_tile_bound_4_lpi_1_en <= ( not (E_63) ) ;
 E_63 <= ( Cflop_88_I_mac_tile_bound_4_lpi_117 and E_65 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_I_mac_tile_bound_4_lpi_117 <= E_64;
     end if;
  end if;
 end process;

 E_64 <= ( E_65 and E_9 ) ;
 E_65 <= ( unsigned_unsigned_eq(n10632, E_69) ) ;
 I_mac_tile_bound_3_lpi_1_en <= ( not (E_66) ) ;
 E_66 <= ( Cflop_88_I_mac_tile_bound_3_lpi_117 and E_68 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_I_mac_tile_bound_3_lpi_117 <= E_67;
     end if;
  end if;
 end process;

 E_67 <= ( E_68 and E_9 ) ;
 E_68 <= ( unsigned_unsigned_eq(n10644, E_69) ) ;
 E_69 <= "10001";
 W_mac_tile_bound_4_lpi_1_en <= ( not (E_70) ) ;
 E_70 <= ( Cflop_88_W_mac_tile_bound_4_lpi_118 and E_72 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_W_mac_tile_bound_4_lpi_118 <= E_71;
     end if;
  end if;
 end process;

 E_71 <= ( E_72 and E_9 ) ;
 E_72 <= ( unsigned_unsigned_eq(n10572, E_73) ) ;
 E_73 <= "10010";
 I_mac_tile_bound_2_lpi_1_en <= ( not (E_74) ) ;
 E_74 <= ( Cflop_88_I_mac_tile_bound_2_lpi_127 and E_76 ) ;

 process (clk)
 begin
   if (clk(0)'event and clk(0) = '1') then
     if (E_49 = "1") then
        Cflop_88_I_mac_tile_bound_2_lpi_127 <= E_75;
     end if;
  end if;
 end process;

 E_75 <= ( E_76 and E_9 ) ;
 E_76 <= ( unsigned_unsigned_eq(n10656, E_77) ) ;
 E_77 <= "11011";
 E_78 <= "0";
end architecture;


 -- QuickLink: Module: top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000
 --            Source-relation: power_top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_pa000000.vhdl:10545
 --
 --            Area before justification: 0
 --            Area after  justification: 0( 0% increase )
 --
 --            Signals with hierarchical names need to have new hierarchy ports/signals created.

 -- wire ppro_reset_CLOCKclk_out_port ; 

library ieee, work;
library calypto_lib;
use ieee.std_logic_1164.all;
use calypto_lib.powerpro_cg_package.all;
use calypto_lib.top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_calypto_package.all;

entity top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_powerpro_reset_mod is 
  port ( 
        rst : in std_logic_vector(0 downto 0);
        ppro_reset_CLOCKclk_out_port : out std_logic_vector(0 downto 0)
       );
end entity;

architecture rtl of top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_partial_000000_powerpro_reset_mod is 
begin
 ppro_reset_CLOCKclk_out_port <= rst ;
end architecture;

