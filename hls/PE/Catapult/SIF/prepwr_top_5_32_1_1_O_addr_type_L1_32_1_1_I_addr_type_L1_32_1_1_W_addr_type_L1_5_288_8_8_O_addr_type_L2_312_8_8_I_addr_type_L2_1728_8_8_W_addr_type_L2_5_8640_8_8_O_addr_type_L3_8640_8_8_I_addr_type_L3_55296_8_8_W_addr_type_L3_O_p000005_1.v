// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    10.5c/896140 Production Release
//  HLS Date:       Sun Sep  6 22:45:38 PDT 2020
//
//  Generated by:   r0678912@amazone.esat.kuleuven.be
//  Generated date: Tue Jul 13 10:57:37 2021
// ----------------------------------------------------------------------

//
// ------------------------------------------------------------------
//  Design Unit:    tiling_unit_5_W_addr_type_L3_run
// ------------------------------------------------------------------


module topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000154 (
  loops_bound_rsc_dat, loops_relevancy_rsc_dat, tile_size_in_rsc_dat, tile_size_out_rsc_z,
      instr_bound_rsc_z, instr_tile_rsc_z, ccs_ccore_start_rsc_dat, ccs_ccore_clk,
      ccs_ccore_srst, ccs_ccore_en
);
  input [79:0] loops_bound_rsc_dat;
  input [4:0] loops_relevancy_rsc_dat;
  input [15:0] tile_size_in_rsc_dat;
  output [15:0] tile_size_out_rsc_z;
  output [79:0] instr_bound_rsc_z;
  output [79:0] instr_tile_rsc_z;
  input ccs_ccore_start_rsc_dat;
  input ccs_ccore_clk;
  input ccs_ccore_srst;
  input ccs_ccore_en;


  // Interconnect Declarations
  wire [79:0] loops_bound_rsci_idat;
  wire [4:0] loops_relevancy_rsci_idat;
  wire [15:0] tile_size_in_rsci_idat;
  wire ccs_ccore_start_rsci_idat;
  reg [15:0] instr_bound_rsci_d_79_64;
  reg [15:0] instr_bound_rsci_d_63_48;
  reg [15:0] instr_bound_rsci_d_47_32;
  reg [15:0] instr_bound_rsci_d_31_16;
  reg [15:0] instr_bound_rsci_d_15_0;
  reg [4:0] instr_tile_rsci_d_15_11;
  reg [10:0] instr_tile_rsci_d_10_0;
  reg [4:0] instr_tile_rsci_d_63_59;
  reg [10:0] instr_tile_rsci_d_58_48;
  reg [4:0] instr_tile_rsci_d_47_43;
  reg [10:0] instr_tile_rsci_d_42_32;
  reg [4:0] instr_tile_rsci_d_31_27;
  reg [10:0] instr_tile_rsci_d_26_16;
  reg [4:0] reg_tile_size_out_rsci_d_15_11_cse;
  reg [10:0] reg_tile_size_out_rsci_d_10_0_cse;
  wire [10:0] instr_tile_rsci_d_10_0_mx0;
  wire [4:0] instr_tile_rsci_d_63_59_mx0;
  wire [10:0] instr_tile_rsci_d_58_48_mx0;
  wire [4:0] tile_size_int_lpi_1_dfm_15_11_1;
  wire [4:0] instr_tile_rsci_d_47_43_mx0;
  wire [10:0] instr_tile_rsci_d_42_32_mx0;
  wire [4:0] instr_tile_rsci_d_31_27_mx0;
  wire [10:0] instr_tile_rsci_d_26_16_mx0;
  wire [15:0] tile_size_int_sva_6;
  wire [26:0] nl_tile_size_int_sva_6;
  wire [15:0] tile_size_int_sva_7;
  wire [31:0] nl_tile_size_int_sva_7;
  wire [15:0] tile_size_int_sva_8;
  wire [31:0] nl_tile_size_int_sva_8;
  wire [15:0] tile_size_int_sva_9;
  wire [31:0] nl_tile_size_int_sva_9;
  wire [15:0] tile_size_int_sva_10;
  wire [31:0] nl_tile_size_int_sva_10;
  wire tile_size_and_cse;


  // Interconnect Declarations for Component Instantiations
  wire [79:0] nl_instr_bound_rsci_d;
  assign nl_instr_bound_rsci_d = {instr_bound_rsci_d_79_64 , instr_bound_rsci_d_63_48
      , instr_bound_rsci_d_47_32 , instr_bound_rsci_d_31_16 , instr_bound_rsci_d_15_0};
  wire [79:0] nl_instr_tile_rsci_d;
  assign nl_instr_tile_rsci_d = {reg_tile_size_out_rsci_d_15_11_cse , reg_tile_size_out_rsci_d_10_0_cse
      , instr_tile_rsci_d_63_59 , instr_tile_rsci_d_58_48 , instr_tile_rsci_d_47_43
      , instr_tile_rsci_d_42_32 , instr_tile_rsci_d_31_27 , instr_tile_rsci_d_26_16
      , instr_tile_rsci_d_15_11 , instr_tile_rsci_d_10_0};
  wire [15:0] nl_tile_size_out_rsci_d;
  assign nl_tile_size_out_rsci_d = {reg_tile_size_out_rsci_d_15_11_cse , reg_tile_size_out_rsci_d_10_0_cse};
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000152 #(.rscid(32'sd21),
  .width(32'sd80)) loops_bound_rsci (
      .dat(loops_bound_rsc_dat),
      .idat(loops_bound_rsci_idat)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000152 #(.rscid(32'sd22),
  .width(32'sd5)) loops_relevancy_rsci (
      .dat(loops_relevancy_rsc_dat),
      .idat(loops_relevancy_rsci_idat)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000153 #(.rscid(32'sd24),
  .width(32'sd80)) instr_bound_rsci (
      .d(nl_instr_bound_rsci_d[79:0]),
      .z(instr_bound_rsc_z)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000153 #(.rscid(32'sd25),
  .width(32'sd80)) instr_tile_rsci (
      .d(nl_instr_tile_rsci_d[79:0]),
      .z(instr_tile_rsc_z)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000152 #(.rscid(32'sd122),
  .width(32'sd16)) tile_size_in_rsci (
      .dat(tile_size_in_rsc_dat),
      .idat(tile_size_in_rsci_idat)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000153 #(.rscid(32'sd123),
  .width(32'sd16)) tile_size_out_rsci (
      .d(nl_tile_size_out_rsci_d[15:0]),
      .z(tile_size_out_rsc_z)
    );
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000152 #(.rscid(32'sd133),
  .width(32'sd1)) ccs_ccore_start_rsci (
      .dat(ccs_ccore_start_rsc_dat),
      .idat(ccs_ccore_start_rsci_idat)
    );
  assign tile_size_and_cse = ccs_ccore_en & ccs_ccore_start_rsci_idat;
  assign instr_tile_rsci_d_10_0_mx0 = MUX_v_11_2_2((tile_size_in_rsci_idat[10:0]),
      (tile_size_int_sva_6[10:0]), loops_relevancy_rsci_idat[0]);
  assign instr_tile_rsci_d_63_59_mx0 = MUX_v_5_2_2(instr_tile_rsci_d_47_43_mx0, (tile_size_int_sva_9[15:11]),
      loops_relevancy_rsci_idat[3]);
  assign instr_tile_rsci_d_58_48_mx0 = MUX_v_11_2_2(instr_tile_rsci_d_42_32_mx0,
      (tile_size_int_sva_9[10:0]), loops_relevancy_rsci_idat[3]);
  assign tile_size_int_lpi_1_dfm_15_11_1 = MUX_v_5_2_2(5'b00000, (tile_size_int_sva_6[15:11]),
      (loops_relevancy_rsci_idat[0]));
  assign instr_tile_rsci_d_47_43_mx0 = MUX_v_5_2_2(instr_tile_rsci_d_31_27_mx0, (tile_size_int_sva_8[15:11]),
      loops_relevancy_rsci_idat[2]);
  assign instr_tile_rsci_d_42_32_mx0 = MUX_v_11_2_2(instr_tile_rsci_d_26_16_mx0,
      (tile_size_int_sva_8[10:0]), loops_relevancy_rsci_idat[2]);
  assign instr_tile_rsci_d_31_27_mx0 = MUX_v_5_2_2(tile_size_int_lpi_1_dfm_15_11_1,
      (tile_size_int_sva_7[15:11]), loops_relevancy_rsci_idat[1]);
  assign instr_tile_rsci_d_26_16_mx0 = MUX_v_11_2_2(instr_tile_rsci_d_10_0_mx0, (tile_size_int_sva_7[10:0]),
      loops_relevancy_rsci_idat[1]);
  assign nl_tile_size_int_sva_6 = (tile_size_in_rsci_idat[10:0]) * (loops_bound_rsci_idat[15:0]);
  assign tile_size_int_sva_6 = nl_tile_size_int_sva_6[15:0];
  assign nl_tile_size_int_sva_7 = ({tile_size_int_lpi_1_dfm_15_11_1 , instr_tile_rsci_d_10_0_mx0})
      * (loops_bound_rsci_idat[31:16]);
  assign tile_size_int_sva_7 = nl_tile_size_int_sva_7[15:0];
  assign nl_tile_size_int_sva_8 = ({instr_tile_rsci_d_31_27_mx0 , instr_tile_rsci_d_26_16_mx0})
      * (loops_bound_rsci_idat[47:32]);
  assign tile_size_int_sva_8 = nl_tile_size_int_sva_8[15:0];
  assign nl_tile_size_int_sva_9 = ({instr_tile_rsci_d_47_43_mx0 , instr_tile_rsci_d_42_32_mx0})
      * (loops_bound_rsci_idat[63:48]);
  assign tile_size_int_sva_9 = nl_tile_size_int_sva_9[15:0];
  assign nl_tile_size_int_sva_10 = ({instr_tile_rsci_d_63_59_mx0 , instr_tile_rsci_d_58_48_mx0})
      * (loops_bound_rsci_idat[79:64]);
  assign tile_size_int_sva_10 = nl_tile_size_int_sva_10[15:0];
  always @(posedge ccs_ccore_clk) begin
    if ( ccs_ccore_srst ) begin
      reg_tile_size_out_rsci_d_15_11_cse <= 5'b00000;
      reg_tile_size_out_rsci_d_10_0_cse <= 11'b00000000000;
      instr_tile_rsci_d_15_11 <= 5'b00000;
    end
    else if ( tile_size_and_cse ) begin
      reg_tile_size_out_rsci_d_15_11_cse <= MUX_v_5_2_2(instr_tile_rsci_d_63_59_mx0,
          (tile_size_int_sva_10[15:11]), loops_relevancy_rsci_idat[4]);
      reg_tile_size_out_rsci_d_10_0_cse <= MUX_v_11_2_2(instr_tile_rsci_d_58_48_mx0,
          (tile_size_int_sva_10[10:0]), loops_relevancy_rsci_idat[4]);
      instr_tile_rsci_d_15_11 <= tile_size_int_lpi_1_dfm_15_11_1;
    end
  end
  always @(posedge ccs_ccore_clk) begin
    if ( ccs_ccore_srst ) begin
      instr_bound_rsci_d_79_64 <= 16'b0000000000000000;
      instr_bound_rsci_d_15_0 <= 16'b0000000000000000;
      instr_bound_rsci_d_63_48 <= 16'b0000000000000000;
      instr_bound_rsci_d_31_16 <= 16'b0000000000000000;
      instr_bound_rsci_d_47_32 <= 16'b0000000000000000;
      instr_tile_rsci_d_10_0 <= 11'b00000000000;
      instr_tile_rsci_d_63_59 <= 5'b00000;
      instr_tile_rsci_d_58_48 <= 11'b00000000000;
      instr_tile_rsci_d_47_43 <= 5'b00000;
      instr_tile_rsci_d_42_32 <= 11'b00000000000;
      instr_tile_rsci_d_31_27 <= 5'b00000;
      instr_tile_rsci_d_26_16 <= 11'b00000000000;
    end
    else if ( ccs_ccore_en ) begin
      instr_bound_rsci_d_79_64 <= MUX_v_16_2_2((loops_bound_rsci_idat[79:64]), 16'b0000000000000001,
          loops_relevancy_rsci_idat[4]);
      instr_bound_rsci_d_15_0 <= MUX_v_16_2_2((loops_bound_rsci_idat[15:0]), 16'b0000000000000001,
          loops_relevancy_rsci_idat[0]);
      instr_bound_rsci_d_63_48 <= MUX_v_16_2_2((loops_bound_rsci_idat[63:48]), 16'b0000000000000001,
          loops_relevancy_rsci_idat[3]);
      instr_bound_rsci_d_31_16 <= MUX_v_16_2_2((loops_bound_rsci_idat[31:16]), 16'b0000000000000001,
          loops_relevancy_rsci_idat[1]);
      instr_bound_rsci_d_47_32 <= MUX_v_16_2_2((loops_bound_rsci_idat[47:32]), 16'b0000000000000001,
          loops_relevancy_rsci_idat[2]);
      instr_tile_rsci_d_10_0 <= instr_tile_rsci_d_10_0_mx0;
      instr_tile_rsci_d_63_59 <= instr_tile_rsci_d_63_59_mx0;
      instr_tile_rsci_d_58_48 <= instr_tile_rsci_d_58_48_mx0;
      instr_tile_rsci_d_47_43 <= instr_tile_rsci_d_47_43_mx0;
      instr_tile_rsci_d_42_32 <= instr_tile_rsci_d_42_32_mx0;
      instr_tile_rsci_d_31_27 <= instr_tile_rsci_d_31_27_mx0;
      instr_tile_rsci_d_26_16 <= instr_tile_rsci_d_26_16_mx0;
    end
  end

  function automatic [10:0] MUX_v_11_2_2;
    input [10:0] input_0;
    input [10:0] input_1;
    input [0:0] sel;
    reg [10:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_11_2_2 = result;
  end
  endfunction


  function automatic [15:0] MUX_v_16_2_2;
    input [15:0] input_0;
    input [15:0] input_1;
    input [0:0] sel;
    reg [15:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_16_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    tiling_unit_5_W_addr_type_L3
// ------------------------------------------------------------------


module topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000155 (
  loops_bound_rsc_dat, loops_relevancy_rsc_dat, tile_size_in_rsc_dat, tile_size_out_rsc_z,
      instr_bound_rsc_z, instr_tile_rsc_z, ccs_ccore_start_rsc_dat, ccs_ccore_clk,
      ccs_ccore_srst, ccs_ccore_en
);
  input [79:0] loops_bound_rsc_dat;
  input [4:0] loops_relevancy_rsc_dat;
  input [15:0] tile_size_in_rsc_dat;
  output [15:0] tile_size_out_rsc_z;
  output [79:0] instr_bound_rsc_z;
  output [79:0] instr_tile_rsc_z;
  input ccs_ccore_start_rsc_dat;
  input ccs_ccore_clk;
  input ccs_ccore_srst;
  input ccs_ccore_en;



  // Interconnect Declarations for Component Instantiations
  topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000154 tiling_unit_5_W_addr_type_L3_run_inst (
      .loops_bound_rsc_dat(loops_bound_rsc_dat),
      .loops_relevancy_rsc_dat(loops_relevancy_rsc_dat),
      .tile_size_in_rsc_dat(tile_size_in_rsc_dat),
      .tile_size_out_rsc_z(tile_size_out_rsc_z),
      .instr_bound_rsc_z(instr_bound_rsc_z),
      .instr_tile_rsc_z(instr_tile_rsc_z),
      .ccs_ccore_start_rsc_dat(ccs_ccore_start_rsc_dat),
      .ccs_ccore_clk(ccs_ccore_clk),
      .ccs_ccore_srst(ccs_ccore_srst),
      .ccs_ccore_en(ccs_ccore_en)
    );
endmodule



