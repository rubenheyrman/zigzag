// ----------------------------------------------------------------------------
// SystemC Testbench Body
//
//    HLS version: 10.5c/896140 Production Release
//       HLS date: Sun Sep  6 22:45:38 PDT 2020
//  Flow Packages: HDL_Tcl 8.0a, SCVerify 10.4.1
//
//   Generated by: r0678912@amazone.esat.kuleuven.be
// Generated date: Tue Jul 13 11:44:20 CEST 2021
//
// ----------------------------------------------------------------------------
// 
// -------------------------------------
// mc_testbench
// SCVerify mc_testbench SC_MODULE
// -------------------------------------
// 
#include "mc_testbench.h"
#include <mc_testbench_util.h>
#include <mc_simulator_extensions.h>

mc_testbench* mc_testbench::that;
bool testbench::enable_idle_sync_mode;
unsigned short testbench::idle_sync_stable_cycles;
void testbench::set_enable_stalls(bool flag) { mc_testbench::set_enable_stalls(flag); }
void testbench::reset_request() { mc_testbench::that->reset_request(); }
void mc_testbench_reset_request() { mc_testbench::that->reset_request(); }
bool testbench::O_data_in_data_ignore;
void mc_testbench_O_data_in_data_skip(bool v) { testbench::O_data_in_data_skip = v; }
bool testbench::O_data_in_data_skip;
bool testbench::O_data_in_data_skip_quiet;
bool testbench::O_data_in_data_skip_once;
bool testbench::O_data_in_data_skip_noerr;
int  testbench::O_data_in_data_array_comp_first;
int  testbench::O_data_in_data_array_comp_last;
mc_wait_ctrl testbench::O_data_in_data_wait_ctrl;
bool testbench::O_data_out_data_ignore;
void mc_testbench_O_data_out_data_skip(bool v) { testbench::O_data_out_data_skip = v; }
bool testbench::O_data_out_data_skip;
bool testbench::O_data_out_data_skip_quiet;
bool testbench::O_data_out_data_skip_once;
bool testbench::O_data_out_data_skip_noerr;
int  testbench::O_data_out_data_array_comp_first;
int  testbench::O_data_out_data_array_comp_last;
bool testbench::O_data_out_data_use_mask;
ac_fixed<16, 16, false, AC_TRN, AC_WRAP > testbench::O_data_out_data_output_mask;
mc_wait_ctrl testbench::O_data_out_data_wait_ctrl;
bool testbench::I_data_in_data_ignore;
void mc_testbench_I_data_in_data_skip(bool v) { testbench::I_data_in_data_skip = v; }
bool testbench::I_data_in_data_skip;
bool testbench::I_data_in_data_skip_quiet;
bool testbench::I_data_in_data_skip_once;
bool testbench::I_data_in_data_skip_noerr;
int  testbench::I_data_in_data_array_comp_first;
int  testbench::I_data_in_data_array_comp_last;
mc_wait_ctrl testbench::I_data_in_data_wait_ctrl;
bool testbench::W_data_in_data_ignore;
void mc_testbench_W_data_in_data_skip(bool v) { testbench::W_data_in_data_skip = v; }
bool testbench::W_data_in_data_skip;
bool testbench::W_data_in_data_skip_quiet;
bool testbench::W_data_in_data_skip_once;
bool testbench::W_data_in_data_skip_noerr;
int  testbench::W_data_in_data_array_comp_first;
int  testbench::W_data_in_data_array_comp_last;
mc_wait_ctrl testbench::W_data_in_data_wait_ctrl;
bool testbench::zero_guard_in_ignore;
void mc_testbench_zero_guard_in_skip(bool v) { testbench::zero_guard_in_skip = v; }
bool testbench::zero_guard_in_skip;
bool testbench::zero_guard_in_skip_quiet;
bool testbench::zero_guard_in_skip_once;
bool testbench::zero_guard_in_skip_noerr;
int  testbench::zero_guard_in_array_comp_first;
int  testbench::zero_guard_in_array_comp_last;
mc_wait_ctrl testbench::zero_guard_in_wait_ctrl;
bool testbench::done_out_ignore;
void mc_testbench_done_out_skip(bool v) { testbench::done_out_skip = v; }
bool testbench::done_out_skip;
bool testbench::done_out_skip_quiet;
bool testbench::done_out_skip_once;
bool testbench::done_out_skip_noerr;
int  testbench::done_out_array_comp_first;
int  testbench::done_out_array_comp_last;
mc_wait_ctrl testbench::done_out_wait_ctrl;
bool testbench::layer_instruction_in_O_loopData_L3_bound_ignore;
void mc_testbench_layer_instruction_in_O_loopData_L3_bound_skip(bool v) { testbench::layer_instruction_in_O_loopData_L3_bound_skip = v; }
bool testbench::layer_instruction_in_O_loopData_L3_bound_skip;
bool testbench::layer_instruction_in_O_loopData_L3_bound_skip_quiet;
bool testbench::layer_instruction_in_O_loopData_L3_bound_skip_once;
bool testbench::layer_instruction_in_O_loopData_L3_bound_skip_noerr;
int  testbench::layer_instruction_in_O_loopData_L3_bound_array_comp_first;
int  testbench::layer_instruction_in_O_loopData_L3_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_O_loopData_L3_bound_wait_ctrl;
bool testbench::layer_instruction_in_O_loopData_L3_relevancy_ignore;
void mc_testbench_layer_instruction_in_O_loopData_L3_relevancy_skip(bool v) { testbench::layer_instruction_in_O_loopData_L3_relevancy_skip = v; }
bool testbench::layer_instruction_in_O_loopData_L3_relevancy_skip;
bool testbench::layer_instruction_in_O_loopData_L3_relevancy_skip_quiet;
bool testbench::layer_instruction_in_O_loopData_L3_relevancy_skip_once;
bool testbench::layer_instruction_in_O_loopData_L3_relevancy_skip_noerr;
int  testbench::layer_instruction_in_O_loopData_L3_relevancy_array_comp_first;
int  testbench::layer_instruction_in_O_loopData_L3_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_O_loopData_L3_relevancy_wait_ctrl;
bool testbench::layer_instruction_in_O_loopData_L2_bound_ignore;
void mc_testbench_layer_instruction_in_O_loopData_L2_bound_skip(bool v) { testbench::layer_instruction_in_O_loopData_L2_bound_skip = v; }
bool testbench::layer_instruction_in_O_loopData_L2_bound_skip;
bool testbench::layer_instruction_in_O_loopData_L2_bound_skip_quiet;
bool testbench::layer_instruction_in_O_loopData_L2_bound_skip_once;
bool testbench::layer_instruction_in_O_loopData_L2_bound_skip_noerr;
int  testbench::layer_instruction_in_O_loopData_L2_bound_array_comp_first;
int  testbench::layer_instruction_in_O_loopData_L2_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_O_loopData_L2_bound_wait_ctrl;
bool testbench::layer_instruction_in_O_loopData_L2_relevancy_ignore;
void mc_testbench_layer_instruction_in_O_loopData_L2_relevancy_skip(bool v) { testbench::layer_instruction_in_O_loopData_L2_relevancy_skip = v; }
bool testbench::layer_instruction_in_O_loopData_L2_relevancy_skip;
bool testbench::layer_instruction_in_O_loopData_L2_relevancy_skip_quiet;
bool testbench::layer_instruction_in_O_loopData_L2_relevancy_skip_once;
bool testbench::layer_instruction_in_O_loopData_L2_relevancy_skip_noerr;
int  testbench::layer_instruction_in_O_loopData_L2_relevancy_array_comp_first;
int  testbench::layer_instruction_in_O_loopData_L2_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_O_loopData_L2_relevancy_wait_ctrl;
bool testbench::layer_instruction_in_O_loopData_L1_bound_ignore;
void mc_testbench_layer_instruction_in_O_loopData_L1_bound_skip(bool v) { testbench::layer_instruction_in_O_loopData_L1_bound_skip = v; }
bool testbench::layer_instruction_in_O_loopData_L1_bound_skip;
bool testbench::layer_instruction_in_O_loopData_L1_bound_skip_quiet;
bool testbench::layer_instruction_in_O_loopData_L1_bound_skip_once;
bool testbench::layer_instruction_in_O_loopData_L1_bound_skip_noerr;
int  testbench::layer_instruction_in_O_loopData_L1_bound_array_comp_first;
int  testbench::layer_instruction_in_O_loopData_L1_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_O_loopData_L1_bound_wait_ctrl;
bool testbench::layer_instruction_in_O_loopData_L1_relevancy_ignore;
void mc_testbench_layer_instruction_in_O_loopData_L1_relevancy_skip(bool v) { testbench::layer_instruction_in_O_loopData_L1_relevancy_skip = v; }
bool testbench::layer_instruction_in_O_loopData_L1_relevancy_skip;
bool testbench::layer_instruction_in_O_loopData_L1_relevancy_skip_quiet;
bool testbench::layer_instruction_in_O_loopData_L1_relevancy_skip_once;
bool testbench::layer_instruction_in_O_loopData_L1_relevancy_skip_noerr;
int  testbench::layer_instruction_in_O_loopData_L1_relevancy_array_comp_first;
int  testbench::layer_instruction_in_O_loopData_L1_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_O_loopData_L1_relevancy_wait_ctrl;
bool testbench::layer_instruction_in_I_loopData_L3_bound_ignore;
void mc_testbench_layer_instruction_in_I_loopData_L3_bound_skip(bool v) { testbench::layer_instruction_in_I_loopData_L3_bound_skip = v; }
bool testbench::layer_instruction_in_I_loopData_L3_bound_skip;
bool testbench::layer_instruction_in_I_loopData_L3_bound_skip_quiet;
bool testbench::layer_instruction_in_I_loopData_L3_bound_skip_once;
bool testbench::layer_instruction_in_I_loopData_L3_bound_skip_noerr;
int  testbench::layer_instruction_in_I_loopData_L3_bound_array_comp_first;
int  testbench::layer_instruction_in_I_loopData_L3_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_I_loopData_L3_bound_wait_ctrl;
bool testbench::layer_instruction_in_I_loopData_L3_relevancy_ignore;
void mc_testbench_layer_instruction_in_I_loopData_L3_relevancy_skip(bool v) { testbench::layer_instruction_in_I_loopData_L3_relevancy_skip = v; }
bool testbench::layer_instruction_in_I_loopData_L3_relevancy_skip;
bool testbench::layer_instruction_in_I_loopData_L3_relevancy_skip_quiet;
bool testbench::layer_instruction_in_I_loopData_L3_relevancy_skip_once;
bool testbench::layer_instruction_in_I_loopData_L3_relevancy_skip_noerr;
int  testbench::layer_instruction_in_I_loopData_L3_relevancy_array_comp_first;
int  testbench::layer_instruction_in_I_loopData_L3_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_I_loopData_L3_relevancy_wait_ctrl;
bool testbench::layer_instruction_in_I_loopData_L2_bound_ignore;
void mc_testbench_layer_instruction_in_I_loopData_L2_bound_skip(bool v) { testbench::layer_instruction_in_I_loopData_L2_bound_skip = v; }
bool testbench::layer_instruction_in_I_loopData_L2_bound_skip;
bool testbench::layer_instruction_in_I_loopData_L2_bound_skip_quiet;
bool testbench::layer_instruction_in_I_loopData_L2_bound_skip_once;
bool testbench::layer_instruction_in_I_loopData_L2_bound_skip_noerr;
int  testbench::layer_instruction_in_I_loopData_L2_bound_array_comp_first;
int  testbench::layer_instruction_in_I_loopData_L2_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_I_loopData_L2_bound_wait_ctrl;
bool testbench::layer_instruction_in_I_loopData_L2_relevancy_ignore;
void mc_testbench_layer_instruction_in_I_loopData_L2_relevancy_skip(bool v) { testbench::layer_instruction_in_I_loopData_L2_relevancy_skip = v; }
bool testbench::layer_instruction_in_I_loopData_L2_relevancy_skip;
bool testbench::layer_instruction_in_I_loopData_L2_relevancy_skip_quiet;
bool testbench::layer_instruction_in_I_loopData_L2_relevancy_skip_once;
bool testbench::layer_instruction_in_I_loopData_L2_relevancy_skip_noerr;
int  testbench::layer_instruction_in_I_loopData_L2_relevancy_array_comp_first;
int  testbench::layer_instruction_in_I_loopData_L2_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_I_loopData_L2_relevancy_wait_ctrl;
bool testbench::layer_instruction_in_I_loopData_L1_bound_ignore;
void mc_testbench_layer_instruction_in_I_loopData_L1_bound_skip(bool v) { testbench::layer_instruction_in_I_loopData_L1_bound_skip = v; }
bool testbench::layer_instruction_in_I_loopData_L1_bound_skip;
bool testbench::layer_instruction_in_I_loopData_L1_bound_skip_quiet;
bool testbench::layer_instruction_in_I_loopData_L1_bound_skip_once;
bool testbench::layer_instruction_in_I_loopData_L1_bound_skip_noerr;
int  testbench::layer_instruction_in_I_loopData_L1_bound_array_comp_first;
int  testbench::layer_instruction_in_I_loopData_L1_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_I_loopData_L1_bound_wait_ctrl;
bool testbench::layer_instruction_in_I_loopData_L1_relevancy_ignore;
void mc_testbench_layer_instruction_in_I_loopData_L1_relevancy_skip(bool v) { testbench::layer_instruction_in_I_loopData_L1_relevancy_skip = v; }
bool testbench::layer_instruction_in_I_loopData_L1_relevancy_skip;
bool testbench::layer_instruction_in_I_loopData_L1_relevancy_skip_quiet;
bool testbench::layer_instruction_in_I_loopData_L1_relevancy_skip_once;
bool testbench::layer_instruction_in_I_loopData_L1_relevancy_skip_noerr;
int  testbench::layer_instruction_in_I_loopData_L1_relevancy_array_comp_first;
int  testbench::layer_instruction_in_I_loopData_L1_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_I_loopData_L1_relevancy_wait_ctrl;
bool testbench::layer_instruction_in_W_loopData_L3_bound_ignore;
void mc_testbench_layer_instruction_in_W_loopData_L3_bound_skip(bool v) { testbench::layer_instruction_in_W_loopData_L3_bound_skip = v; }
bool testbench::layer_instruction_in_W_loopData_L3_bound_skip;
bool testbench::layer_instruction_in_W_loopData_L3_bound_skip_quiet;
bool testbench::layer_instruction_in_W_loopData_L3_bound_skip_once;
bool testbench::layer_instruction_in_W_loopData_L3_bound_skip_noerr;
int  testbench::layer_instruction_in_W_loopData_L3_bound_array_comp_first;
int  testbench::layer_instruction_in_W_loopData_L3_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_W_loopData_L3_bound_wait_ctrl;
bool testbench::layer_instruction_in_W_loopData_L3_relevancy_ignore;
void mc_testbench_layer_instruction_in_W_loopData_L3_relevancy_skip(bool v) { testbench::layer_instruction_in_W_loopData_L3_relevancy_skip = v; }
bool testbench::layer_instruction_in_W_loopData_L3_relevancy_skip;
bool testbench::layer_instruction_in_W_loopData_L3_relevancy_skip_quiet;
bool testbench::layer_instruction_in_W_loopData_L3_relevancy_skip_once;
bool testbench::layer_instruction_in_W_loopData_L3_relevancy_skip_noerr;
int  testbench::layer_instruction_in_W_loopData_L3_relevancy_array_comp_first;
int  testbench::layer_instruction_in_W_loopData_L3_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_W_loopData_L3_relevancy_wait_ctrl;
bool testbench::layer_instruction_in_W_loopData_L2_bound_ignore;
void mc_testbench_layer_instruction_in_W_loopData_L2_bound_skip(bool v) { testbench::layer_instruction_in_W_loopData_L2_bound_skip = v; }
bool testbench::layer_instruction_in_W_loopData_L2_bound_skip;
bool testbench::layer_instruction_in_W_loopData_L2_bound_skip_quiet;
bool testbench::layer_instruction_in_W_loopData_L2_bound_skip_once;
bool testbench::layer_instruction_in_W_loopData_L2_bound_skip_noerr;
int  testbench::layer_instruction_in_W_loopData_L2_bound_array_comp_first;
int  testbench::layer_instruction_in_W_loopData_L2_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_W_loopData_L2_bound_wait_ctrl;
bool testbench::layer_instruction_in_W_loopData_L2_relevancy_ignore;
void mc_testbench_layer_instruction_in_W_loopData_L2_relevancy_skip(bool v) { testbench::layer_instruction_in_W_loopData_L2_relevancy_skip = v; }
bool testbench::layer_instruction_in_W_loopData_L2_relevancy_skip;
bool testbench::layer_instruction_in_W_loopData_L2_relevancy_skip_quiet;
bool testbench::layer_instruction_in_W_loopData_L2_relevancy_skip_once;
bool testbench::layer_instruction_in_W_loopData_L2_relevancy_skip_noerr;
int  testbench::layer_instruction_in_W_loopData_L2_relevancy_array_comp_first;
int  testbench::layer_instruction_in_W_loopData_L2_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_W_loopData_L2_relevancy_wait_ctrl;
bool testbench::layer_instruction_in_W_loopData_L1_bound_ignore;
void mc_testbench_layer_instruction_in_W_loopData_L1_bound_skip(bool v) { testbench::layer_instruction_in_W_loopData_L1_bound_skip = v; }
bool testbench::layer_instruction_in_W_loopData_L1_bound_skip;
bool testbench::layer_instruction_in_W_loopData_L1_bound_skip_quiet;
bool testbench::layer_instruction_in_W_loopData_L1_bound_skip_once;
bool testbench::layer_instruction_in_W_loopData_L1_bound_skip_noerr;
int  testbench::layer_instruction_in_W_loopData_L1_bound_array_comp_first;
int  testbench::layer_instruction_in_W_loopData_L1_bound_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_W_loopData_L1_bound_wait_ctrl;
bool testbench::layer_instruction_in_W_loopData_L1_relevancy_ignore;
void mc_testbench_layer_instruction_in_W_loopData_L1_relevancy_skip(bool v) { testbench::layer_instruction_in_W_loopData_L1_relevancy_skip = v; }
bool testbench::layer_instruction_in_W_loopData_L1_relevancy_skip;
bool testbench::layer_instruction_in_W_loopData_L1_relevancy_skip_quiet;
bool testbench::layer_instruction_in_W_loopData_L1_relevancy_skip_once;
bool testbench::layer_instruction_in_W_loopData_L1_relevancy_skip_noerr;
int  testbench::layer_instruction_in_W_loopData_L1_relevancy_array_comp_first;
int  testbench::layer_instruction_in_W_loopData_L1_relevancy_array_comp_last;
mc_wait_ctrl testbench::layer_instruction_in_W_loopData_L1_relevancy_wait_ctrl;
#ifndef CCS_SCVERIFY_USE_CCS_BLOCK
void testbench::exec_run( ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_in,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_out,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &I_data_in,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &W_data_in,  ac_channel<bool > &zero_guard_in,  ac_channel<bool > &done_out,  ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > > &layer_instruction_in) {
   return mc_testbench::exec_run(O_data_in, O_data_out, I_data_in, W_data_in, zero_guard_in, done_out, layer_instruction_in);
}
#endif

// ============================================
// Function: wait_for_idle_sync
// --------------------------------------------

void mc_testbench::wait_for_idle_sync()
{
   if (testbench::enable_idle_sync_mode) {
      std::cout << "mc_testbench STOPPING   @ " << sc_time_stamp() << std::endl;
      that->cpp_testbench_active.write(false);
      while (that->design_is_idle.read())  that->wait(that->design_is_idle.value_changed_event());
      while (!that->design_is_idle.read()) that->wait(that->design_is_idle.value_changed_event());
      that->cpp_testbench_active.write(true);
      std::cout << "mc_testbench CONTINUING @ " << sc_time_stamp() << std::endl;
   } else {
      that->cpp_testbench_active.write(true);
   }
}
// ============================================
// Function: set_enable_stalls
// --------------------------------------------

void mc_testbench::set_enable_stalls(bool flag)
{
   if (flag) {
     std::cout << "Enabling STALL_FLAG toggling" << std::endl;
     that->enable_stalls.write(sc_dt::Log_1);
   } else {
     std::cout << "Disabling STALL_FLAG toggling" << std::endl;
     that->enable_stalls.write(sc_dt::Log_0);
   }
}
// ============================================
// Function: reset_request
// --------------------------------------------

void mc_testbench::reset_request()
{
   reset_request_event.notify(0,SC_NS);
}
// ============================================
// Function: capture_O_data_in
// --------------------------------------------

void mc_testbench::capture_O_data_in( ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_in)
{
   static mgc_sysc_ver_array1D<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >,1> O_data_in_data_tmp;
   static int last_j_O_data_in_data_in = 0;
   if (O_data_in_data_iteration_count == wait_cnt)
      wait_on_input_required();
   if (_capture_O_data_in_data && !testbench::O_data_in_data_ignore)
   {
      if (!O_data_in_data_pointer_set) {
         O_data_in_data_pointer = &(O_data_in);
         O_data_in_data_pointer_set = true;
      } else if (O_data_in_data_pointer != &(O_data_in) && remaining_ccs_O_data_in_data == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface O_data_in source switched to a difference object in testbench with "
             << remaining_ccs_O_data_in_data << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         O_data_in_data_pointer = &(O_data_in);
      } else if (O_data_in_data_pointer != &(O_data_in) && remaining_ccs_O_data_in_data > 0 && remaining_ccs_O_data_in_data != O_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface O_data_in source switched to a different object in testbench with "
             << remaining_ccs_O_data_in_data << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = O_data_in_data_capture_count;
      ++O_data_in_data_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_O_data_in_data;
      while (ccs_scv_i < O_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
         for (ccs_scv_j = last_j_O_data_in_data_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < O_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
               int O_data_in_linear_idx = 0;
               for (int O_data_in_idx_0 = 0; O_data_in_idx_0 < 1; ++O_data_in_idx_0)
                  O_data_in_data_tmp[O_data_in_linear_idx++] = O_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::chan[ccs_scv_i].packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 >::data[O_data_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_O_data_in_data->put(O_data_in_data_tmp);
            last_j_O_data_in_data_in = 0;
            O_data_in_data_capture_count += chan_factor;
         } else {
            last_j_O_data_in_data_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("O_data_in_data",testbench::O_data_in_data_wait_ctrl,ccs_wait_ctrl_O_data_in_data.operator->(),cur_iter,O_data_in_data_capture_count,1);
   }
   testbench::O_data_in_data_ignore = false;
}
// ============================================
// Function: capture_O_data_out
// --------------------------------------------

void mc_testbench::capture_O_data_out( ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_out)
{
   static mc_golden_info< mgc_sysc_ver_array1D<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >,1>, MaskPacket<1, 16> > O_data_out_data_tmp(testbench::O_data_out_data_ignore, false, O_data_out_data_iteration_count);
   O_data_out_data_tmp._ignore = testbench::O_data_out_data_ignore;
   O_data_out_data_tmp._iteration = O_data_out_data_iteration_count;
   // BEGIN: testbench output_mask control for field_name O_data_out_data
   if ( testbench::O_data_out_data_use_mask ) {
      sc_lv<16> tmp_mask_lv;
      type_to_vector(testbench::O_data_out_data_output_mask, 16, tmp_mask_lv);
      O_data_out_data_tmp._use_mask = true;
      O_data_out_data_tmp._packet._mask = tmp_mask_lv;
   }
   // END: testbench output_mask control for field_name O_data_out_data
   O_data_out_data_tmp._data.mc_testbench_process_array_bounds("O_data_out_data",testbench::O_data_out_data_array_comp_first,testbench::O_data_out_data_array_comp_last,0,0);
   static int last_j_O_data_out_data_out = 0;
   if (_capture_O_data_out_data)
   {
      int cur_iter = O_data_out_data_capture_count;
      ++O_data_out_data_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_O_data_out_data_golden;
      while (ccs_scv_i < O_data_out.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
         for (ccs_scv_j = last_j_O_data_out_data_out; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < O_data_out.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
               int O_data_out_linear_idx = 0;
               for (int O_data_out_idx_0 = 0; O_data_out_idx_0 < 1; ++O_data_out_idx_0)
                  O_data_out_data_tmp._data[O_data_out_linear_idx++] = O_data_out.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::chan[ccs_scv_i].packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 >::data[O_data_out_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            O_data_out_data_golden.put(O_data_out_data_tmp);
            last_j_O_data_out_data_out = 0;
            O_data_out_data_capture_count += chan_factor;
         } else {
            last_j_O_data_out_data_out = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("O_data_out_data",testbench::O_data_out_data_wait_ctrl,ccs_wait_ctrl_O_data_out_data.operator->(),cur_iter,O_data_out_data_capture_count,1);
      testbench::O_data_out_data_use_mask = false;
   }
   testbench::O_data_out_data_ignore = false;
   testbench::O_data_out_data_skip = false;
}
// ============================================
// Function: capture_I_data_in
// --------------------------------------------

void mc_testbench::capture_I_data_in( ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &I_data_in)
{
   static mgc_sysc_ver_array1D<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >,1> I_data_in_data_tmp;
   static int last_j_I_data_in_data_in = 0;
   if (I_data_in_data_iteration_count == wait_cnt)
      wait_on_input_required();
   if (_capture_I_data_in_data && !testbench::I_data_in_data_ignore)
   {
      if (!I_data_in_data_pointer_set) {
         I_data_in_data_pointer = &(I_data_in);
         I_data_in_data_pointer_set = true;
      } else if (I_data_in_data_pointer != &(I_data_in) && remaining_ccs_I_data_in_data == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface I_data_in source switched to a difference object in testbench with "
             << remaining_ccs_I_data_in_data << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         I_data_in_data_pointer = &(I_data_in);
      } else if (I_data_in_data_pointer != &(I_data_in) && remaining_ccs_I_data_in_data > 0 && remaining_ccs_I_data_in_data != I_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface I_data_in source switched to a different object in testbench with "
             << remaining_ccs_I_data_in_data << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = I_data_in_data_capture_count;
      ++I_data_in_data_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_I_data_in_data;
      while (ccs_scv_i < I_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
         for (ccs_scv_j = last_j_I_data_in_data_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < I_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
               int I_data_in_linear_idx = 0;
               for (int I_data_in_idx_0 = 0; I_data_in_idx_0 < 1; ++I_data_in_idx_0)
                  I_data_in_data_tmp[I_data_in_linear_idx++] = I_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::chan[ccs_scv_i].packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 >::data[I_data_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_I_data_in_data->put(I_data_in_data_tmp);
            last_j_I_data_in_data_in = 0;
            I_data_in_data_capture_count += chan_factor;
         } else {
            last_j_I_data_in_data_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("I_data_in_data",testbench::I_data_in_data_wait_ctrl,ccs_wait_ctrl_I_data_in_data.operator->(),cur_iter,I_data_in_data_capture_count,1);
   }
   testbench::I_data_in_data_ignore = false;
}
// ============================================
// Function: capture_W_data_in
// --------------------------------------------

void mc_testbench::capture_W_data_in( ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &W_data_in)
{
   static mgc_sysc_ver_array1D<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >,1> W_data_in_data_tmp;
   static int last_j_W_data_in_data_in = 0;
   if (W_data_in_data_iteration_count == wait_cnt)
      wait_on_input_required();
   if (_capture_W_data_in_data && !testbench::W_data_in_data_ignore)
   {
      if (!W_data_in_data_pointer_set) {
         W_data_in_data_pointer = &(W_data_in);
         W_data_in_data_pointer_set = true;
      } else if (W_data_in_data_pointer != &(W_data_in) && remaining_ccs_W_data_in_data == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface W_data_in source switched to a difference object in testbench with "
             << remaining_ccs_W_data_in_data << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         W_data_in_data_pointer = &(W_data_in);
      } else if (W_data_in_data_pointer != &(W_data_in) && remaining_ccs_W_data_in_data > 0 && remaining_ccs_W_data_in_data != W_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface W_data_in source switched to a different object in testbench with "
             << remaining_ccs_W_data_in_data << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = W_data_in_data_capture_count;
      ++W_data_in_data_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_W_data_in_data;
      while (ccs_scv_i < W_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
         for (ccs_scv_j = last_j_W_data_in_data_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < W_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size()) {
               int W_data_in_linear_idx = 0;
               for (int W_data_in_idx_0 = 0; W_data_in_idx_0 < 1; ++W_data_in_idx_0)
                  W_data_in_data_tmp[W_data_in_linear_idx++] = W_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::chan[ccs_scv_i].packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 >::data[W_data_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_W_data_in_data->put(W_data_in_data_tmp);
            last_j_W_data_in_data_in = 0;
            W_data_in_data_capture_count += chan_factor;
         } else {
            last_j_W_data_in_data_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("W_data_in_data",testbench::W_data_in_data_wait_ctrl,ccs_wait_ctrl_W_data_in_data.operator->(),cur_iter,W_data_in_data_capture_count,1);
   }
   testbench::W_data_in_data_ignore = false;
}
// ============================================
// Function: capture_zero_guard_in
// --------------------------------------------

void mc_testbench::capture_zero_guard_in( ac_channel<bool > &zero_guard_in)
{
   static bool zero_guard_in_tmp;
   static int last_j_zero_guard_in_in = 0;
   if (zero_guard_in_iteration_count == wait_cnt)
      wait_on_input_required();
   if (_capture_zero_guard_in && !testbench::zero_guard_in_ignore)
   {
      if (!zero_guard_in_pointer_set) {
         zero_guard_in_pointer = &(zero_guard_in);
         zero_guard_in_pointer_set = true;
      } else if (zero_guard_in_pointer != &(zero_guard_in) && remaining_ccs_zero_guard_in == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface zero_guard_in source switched to a difference object in testbench with "
             << remaining_ccs_zero_guard_in << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         zero_guard_in_pointer = &(zero_guard_in);
      } else if (zero_guard_in_pointer != &(zero_guard_in) && remaining_ccs_zero_guard_in > 0 && remaining_ccs_zero_guard_in != zero_guard_in.ac_channel<bool >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface zero_guard_in source switched to a different object in testbench with "
             << remaining_ccs_zero_guard_in << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = zero_guard_in_capture_count;
      ++zero_guard_in_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_zero_guard_in;
      while (ccs_scv_i < zero_guard_in.ac_channel<bool >::debug_size()) {
         for (ccs_scv_j = last_j_zero_guard_in_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < zero_guard_in.ac_channel<bool >::debug_size()) {
               zero_guard_in_tmp = zero_guard_in.ac_channel<bool >::chan[ccs_scv_i];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_zero_guard_in->put(zero_guard_in_tmp);
            last_j_zero_guard_in_in = 0;
            zero_guard_in_capture_count += chan_factor;
         } else {
            last_j_zero_guard_in_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("zero_guard_in",testbench::zero_guard_in_wait_ctrl,ccs_wait_ctrl_zero_guard_in.operator->(),cur_iter,zero_guard_in_capture_count,1);
   }
   testbench::zero_guard_in_ignore = false;
}
// ============================================
// Function: capture_done_out
// --------------------------------------------

void mc_testbench::capture_done_out( ac_channel<bool > &done_out)
{
}
// ============================================
// Function: capture_layer_instruction_in
// --------------------------------------------

void mc_testbench::capture_layer_instruction_in( ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > > &layer_instruction_in)
{
   static mgc_sysc_ver_array1D<ac_int<14, false >,5> layer_instruction_in_O_loopData_L3_bound_tmp;
   static int last_j_layer_instruction_in_O_loopData_L3_bound_in = 0;
   if (layer_instruction_in_O_loopData_L3_bound_iteration_count == wait_cnt)
      wait_on_input_required();
   if (_capture_layer_instruction_in_O_loopData_L3_bound && !testbench::layer_instruction_in_O_loopData_L3_bound_ignore)
   {
      if (!layer_instruction_in_O_loopData_L3_bound_pointer_set) {
         layer_instruction_in_O_loopData_L3_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_O_loopData_L3_bound_pointer_set = true;
      } else if (layer_instruction_in_O_loopData_L3_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L3_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L3_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_O_loopData_L3_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_O_loopData_L3_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L3_bound > 0 && remaining_ccs_layer_instruction_in_O_loopData_L3_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L3_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_O_loopData_L3_bound_capture_count;
      ++layer_instruction_in_O_loopData_L3_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_O_loopData_L3_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_O_loopData_L3_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_O_loopData_L3_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::O_loopData_L3.loopData<ac_int<14, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_O_loopData_L3_bound->put(layer_instruction_in_O_loopData_L3_bound_tmp);
            last_j_layer_instruction_in_O_loopData_L3_bound_in = 0;
            layer_instruction_in_O_loopData_L3_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_O_loopData_L3_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_O_loopData_L3_bound",testbench::layer_instruction_in_O_loopData_L3_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_O_loopData_L3_bound.operator->(),cur_iter,layer_instruction_in_O_loopData_L3_bound_capture_count,1);
   }
   testbench::layer_instruction_in_O_loopData_L3_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_O_loopData_L3_relevancy_tmp;
   static int last_j_layer_instruction_in_O_loopData_L3_relevancy_in = 0;
   if (_capture_layer_instruction_in_O_loopData_L3_relevancy && !testbench::layer_instruction_in_O_loopData_L3_relevancy_ignore)
   {
      if (!layer_instruction_in_O_loopData_L3_relevancy_pointer_set) {
         layer_instruction_in_O_loopData_L3_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_O_loopData_L3_relevancy_pointer_set = true;
      } else if (layer_instruction_in_O_loopData_L3_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_O_loopData_L3_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_O_loopData_L3_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy > 0 && remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_O_loopData_L3_relevancy_capture_count;
      ++layer_instruction_in_O_loopData_L3_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_O_loopData_L3_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_O_loopData_L3_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::O_loopData_L3.loopData<ac_int<14, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_O_loopData_L3_relevancy->put(layer_instruction_in_O_loopData_L3_relevancy_tmp);
            last_j_layer_instruction_in_O_loopData_L3_relevancy_in = 0;
            layer_instruction_in_O_loopData_L3_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_O_loopData_L3_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_O_loopData_L3_relevancy",testbench::layer_instruction_in_O_loopData_L3_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_O_loopData_L3_relevancy.operator->(),cur_iter,layer_instruction_in_O_loopData_L3_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_O_loopData_L3_relevancy_ignore = false;
   static mgc_sysc_ver_array1D<ac_int<9, false >,5> layer_instruction_in_O_loopData_L2_bound_tmp;
   static int last_j_layer_instruction_in_O_loopData_L2_bound_in = 0;
   if (_capture_layer_instruction_in_O_loopData_L2_bound && !testbench::layer_instruction_in_O_loopData_L2_bound_ignore)
   {
      if (!layer_instruction_in_O_loopData_L2_bound_pointer_set) {
         layer_instruction_in_O_loopData_L2_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_O_loopData_L2_bound_pointer_set = true;
      } else if (layer_instruction_in_O_loopData_L2_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L2_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L2_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_O_loopData_L2_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_O_loopData_L2_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L2_bound > 0 && remaining_ccs_layer_instruction_in_O_loopData_L2_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L2_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_O_loopData_L2_bound_capture_count;
      ++layer_instruction_in_O_loopData_L2_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_O_loopData_L2_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_O_loopData_L2_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_O_loopData_L2_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::O_loopData_L2.loopData<ac_int<9, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_O_loopData_L2_bound->put(layer_instruction_in_O_loopData_L2_bound_tmp);
            last_j_layer_instruction_in_O_loopData_L2_bound_in = 0;
            layer_instruction_in_O_loopData_L2_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_O_loopData_L2_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_O_loopData_L2_bound",testbench::layer_instruction_in_O_loopData_L2_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_O_loopData_L2_bound.operator->(),cur_iter,layer_instruction_in_O_loopData_L2_bound_capture_count,1);
   }
   testbench::layer_instruction_in_O_loopData_L2_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_O_loopData_L2_relevancy_tmp;
   static int last_j_layer_instruction_in_O_loopData_L2_relevancy_in = 0;
   if (_capture_layer_instruction_in_O_loopData_L2_relevancy && !testbench::layer_instruction_in_O_loopData_L2_relevancy_ignore)
   {
      if (!layer_instruction_in_O_loopData_L2_relevancy_pointer_set) {
         layer_instruction_in_O_loopData_L2_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_O_loopData_L2_relevancy_pointer_set = true;
      } else if (layer_instruction_in_O_loopData_L2_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_O_loopData_L2_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_O_loopData_L2_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy > 0 && remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_O_loopData_L2_relevancy_capture_count;
      ++layer_instruction_in_O_loopData_L2_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_O_loopData_L2_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_O_loopData_L2_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::O_loopData_L2.loopData<ac_int<9, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_O_loopData_L2_relevancy->put(layer_instruction_in_O_loopData_L2_relevancy_tmp);
            last_j_layer_instruction_in_O_loopData_L2_relevancy_in = 0;
            layer_instruction_in_O_loopData_L2_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_O_loopData_L2_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_O_loopData_L2_relevancy",testbench::layer_instruction_in_O_loopData_L2_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_O_loopData_L2_relevancy.operator->(),cur_iter,layer_instruction_in_O_loopData_L2_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_O_loopData_L2_relevancy_ignore = false;
   static mgc_sysc_ver_array1D<ac_int<5, false >,5> layer_instruction_in_O_loopData_L1_bound_tmp;
   static int last_j_layer_instruction_in_O_loopData_L1_bound_in = 0;
   if (_capture_layer_instruction_in_O_loopData_L1_bound && !testbench::layer_instruction_in_O_loopData_L1_bound_ignore)
   {
      if (!layer_instruction_in_O_loopData_L1_bound_pointer_set) {
         layer_instruction_in_O_loopData_L1_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_O_loopData_L1_bound_pointer_set = true;
      } else if (layer_instruction_in_O_loopData_L1_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L1_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L1_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_O_loopData_L1_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_O_loopData_L1_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L1_bound > 0 && remaining_ccs_layer_instruction_in_O_loopData_L1_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L1_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_O_loopData_L1_bound_capture_count;
      ++layer_instruction_in_O_loopData_L1_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_O_loopData_L1_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_O_loopData_L1_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_O_loopData_L1_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::O_loopData_L1.loopData<ac_int<5, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_O_loopData_L1_bound->put(layer_instruction_in_O_loopData_L1_bound_tmp);
            last_j_layer_instruction_in_O_loopData_L1_bound_in = 0;
            layer_instruction_in_O_loopData_L1_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_O_loopData_L1_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_O_loopData_L1_bound",testbench::layer_instruction_in_O_loopData_L1_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_O_loopData_L1_bound.operator->(),cur_iter,layer_instruction_in_O_loopData_L1_bound_capture_count,1);
   }
   testbench::layer_instruction_in_O_loopData_L1_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_O_loopData_L1_relevancy_tmp;
   static int last_j_layer_instruction_in_O_loopData_L1_relevancy_in = 0;
   if (_capture_layer_instruction_in_O_loopData_L1_relevancy && !testbench::layer_instruction_in_O_loopData_L1_relevancy_ignore)
   {
      if (!layer_instruction_in_O_loopData_L1_relevancy_pointer_set) {
         layer_instruction_in_O_loopData_L1_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_O_loopData_L1_relevancy_pointer_set = true;
      } else if (layer_instruction_in_O_loopData_L1_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_O_loopData_L1_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_O_loopData_L1_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy > 0 && remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_O_loopData_L1_relevancy_capture_count;
      ++layer_instruction_in_O_loopData_L1_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_O_loopData_L1_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_O_loopData_L1_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::O_loopData_L1.loopData<ac_int<5, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_O_loopData_L1_relevancy->put(layer_instruction_in_O_loopData_L1_relevancy_tmp);
            last_j_layer_instruction_in_O_loopData_L1_relevancy_in = 0;
            layer_instruction_in_O_loopData_L1_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_O_loopData_L1_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_O_loopData_L1_relevancy",testbench::layer_instruction_in_O_loopData_L1_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_O_loopData_L1_relevancy.operator->(),cur_iter,layer_instruction_in_O_loopData_L1_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_O_loopData_L1_relevancy_ignore = false;
   static mgc_sysc_ver_array1D<ac_int<14, false >,5> layer_instruction_in_I_loopData_L3_bound_tmp;
   static int last_j_layer_instruction_in_I_loopData_L3_bound_in = 0;
   if (_capture_layer_instruction_in_I_loopData_L3_bound && !testbench::layer_instruction_in_I_loopData_L3_bound_ignore)
   {
      if (!layer_instruction_in_I_loopData_L3_bound_pointer_set) {
         layer_instruction_in_I_loopData_L3_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_I_loopData_L3_bound_pointer_set = true;
      } else if (layer_instruction_in_I_loopData_L3_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L3_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L3_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_I_loopData_L3_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_I_loopData_L3_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L3_bound > 0 && remaining_ccs_layer_instruction_in_I_loopData_L3_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L3_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_I_loopData_L3_bound_capture_count;
      ++layer_instruction_in_I_loopData_L3_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_I_loopData_L3_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_I_loopData_L3_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_I_loopData_L3_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::I_loopData_L3.loopData<ac_int<14, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_I_loopData_L3_bound->put(layer_instruction_in_I_loopData_L3_bound_tmp);
            last_j_layer_instruction_in_I_loopData_L3_bound_in = 0;
            layer_instruction_in_I_loopData_L3_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_I_loopData_L3_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_I_loopData_L3_bound",testbench::layer_instruction_in_I_loopData_L3_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_I_loopData_L3_bound.operator->(),cur_iter,layer_instruction_in_I_loopData_L3_bound_capture_count,1);
   }
   testbench::layer_instruction_in_I_loopData_L3_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_I_loopData_L3_relevancy_tmp;
   static int last_j_layer_instruction_in_I_loopData_L3_relevancy_in = 0;
   if (_capture_layer_instruction_in_I_loopData_L3_relevancy && !testbench::layer_instruction_in_I_loopData_L3_relevancy_ignore)
   {
      if (!layer_instruction_in_I_loopData_L3_relevancy_pointer_set) {
         layer_instruction_in_I_loopData_L3_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_I_loopData_L3_relevancy_pointer_set = true;
      } else if (layer_instruction_in_I_loopData_L3_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_I_loopData_L3_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_I_loopData_L3_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy > 0 && remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_I_loopData_L3_relevancy_capture_count;
      ++layer_instruction_in_I_loopData_L3_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_I_loopData_L3_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_I_loopData_L3_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::I_loopData_L3.loopData<ac_int<14, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_I_loopData_L3_relevancy->put(layer_instruction_in_I_loopData_L3_relevancy_tmp);
            last_j_layer_instruction_in_I_loopData_L3_relevancy_in = 0;
            layer_instruction_in_I_loopData_L3_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_I_loopData_L3_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_I_loopData_L3_relevancy",testbench::layer_instruction_in_I_loopData_L3_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_I_loopData_L3_relevancy.operator->(),cur_iter,layer_instruction_in_I_loopData_L3_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_I_loopData_L3_relevancy_ignore = false;
   static mgc_sysc_ver_array1D<ac_int<9, false >,5> layer_instruction_in_I_loopData_L2_bound_tmp;
   static int last_j_layer_instruction_in_I_loopData_L2_bound_in = 0;
   if (_capture_layer_instruction_in_I_loopData_L2_bound && !testbench::layer_instruction_in_I_loopData_L2_bound_ignore)
   {
      if (!layer_instruction_in_I_loopData_L2_bound_pointer_set) {
         layer_instruction_in_I_loopData_L2_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_I_loopData_L2_bound_pointer_set = true;
      } else if (layer_instruction_in_I_loopData_L2_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L2_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L2_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_I_loopData_L2_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_I_loopData_L2_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L2_bound > 0 && remaining_ccs_layer_instruction_in_I_loopData_L2_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L2_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_I_loopData_L2_bound_capture_count;
      ++layer_instruction_in_I_loopData_L2_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_I_loopData_L2_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_I_loopData_L2_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_I_loopData_L2_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::I_loopData_L2.loopData<ac_int<9, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_I_loopData_L2_bound->put(layer_instruction_in_I_loopData_L2_bound_tmp);
            last_j_layer_instruction_in_I_loopData_L2_bound_in = 0;
            layer_instruction_in_I_loopData_L2_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_I_loopData_L2_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_I_loopData_L2_bound",testbench::layer_instruction_in_I_loopData_L2_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_I_loopData_L2_bound.operator->(),cur_iter,layer_instruction_in_I_loopData_L2_bound_capture_count,1);
   }
   testbench::layer_instruction_in_I_loopData_L2_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_I_loopData_L2_relevancy_tmp;
   static int last_j_layer_instruction_in_I_loopData_L2_relevancy_in = 0;
   if (_capture_layer_instruction_in_I_loopData_L2_relevancy && !testbench::layer_instruction_in_I_loopData_L2_relevancy_ignore)
   {
      if (!layer_instruction_in_I_loopData_L2_relevancy_pointer_set) {
         layer_instruction_in_I_loopData_L2_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_I_loopData_L2_relevancy_pointer_set = true;
      } else if (layer_instruction_in_I_loopData_L2_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_I_loopData_L2_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_I_loopData_L2_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy > 0 && remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_I_loopData_L2_relevancy_capture_count;
      ++layer_instruction_in_I_loopData_L2_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_I_loopData_L2_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_I_loopData_L2_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::I_loopData_L2.loopData<ac_int<9, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_I_loopData_L2_relevancy->put(layer_instruction_in_I_loopData_L2_relevancy_tmp);
            last_j_layer_instruction_in_I_loopData_L2_relevancy_in = 0;
            layer_instruction_in_I_loopData_L2_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_I_loopData_L2_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_I_loopData_L2_relevancy",testbench::layer_instruction_in_I_loopData_L2_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_I_loopData_L2_relevancy.operator->(),cur_iter,layer_instruction_in_I_loopData_L2_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_I_loopData_L2_relevancy_ignore = false;
   static mgc_sysc_ver_array1D<ac_int<5, false >,5> layer_instruction_in_I_loopData_L1_bound_tmp;
   static int last_j_layer_instruction_in_I_loopData_L1_bound_in = 0;
   if (_capture_layer_instruction_in_I_loopData_L1_bound && !testbench::layer_instruction_in_I_loopData_L1_bound_ignore)
   {
      if (!layer_instruction_in_I_loopData_L1_bound_pointer_set) {
         layer_instruction_in_I_loopData_L1_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_I_loopData_L1_bound_pointer_set = true;
      } else if (layer_instruction_in_I_loopData_L1_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L1_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L1_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_I_loopData_L1_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_I_loopData_L1_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L1_bound > 0 && remaining_ccs_layer_instruction_in_I_loopData_L1_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L1_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_I_loopData_L1_bound_capture_count;
      ++layer_instruction_in_I_loopData_L1_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_I_loopData_L1_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_I_loopData_L1_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_I_loopData_L1_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::I_loopData_L1.loopData<ac_int<5, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_I_loopData_L1_bound->put(layer_instruction_in_I_loopData_L1_bound_tmp);
            last_j_layer_instruction_in_I_loopData_L1_bound_in = 0;
            layer_instruction_in_I_loopData_L1_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_I_loopData_L1_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_I_loopData_L1_bound",testbench::layer_instruction_in_I_loopData_L1_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_I_loopData_L1_bound.operator->(),cur_iter,layer_instruction_in_I_loopData_L1_bound_capture_count,1);
   }
   testbench::layer_instruction_in_I_loopData_L1_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_I_loopData_L1_relevancy_tmp;
   static int last_j_layer_instruction_in_I_loopData_L1_relevancy_in = 0;
   if (_capture_layer_instruction_in_I_loopData_L1_relevancy && !testbench::layer_instruction_in_I_loopData_L1_relevancy_ignore)
   {
      if (!layer_instruction_in_I_loopData_L1_relevancy_pointer_set) {
         layer_instruction_in_I_loopData_L1_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_I_loopData_L1_relevancy_pointer_set = true;
      } else if (layer_instruction_in_I_loopData_L1_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_I_loopData_L1_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_I_loopData_L1_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy > 0 && remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_I_loopData_L1_relevancy_capture_count;
      ++layer_instruction_in_I_loopData_L1_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_I_loopData_L1_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_I_loopData_L1_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::I_loopData_L1.loopData<ac_int<5, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_I_loopData_L1_relevancy->put(layer_instruction_in_I_loopData_L1_relevancy_tmp);
            last_j_layer_instruction_in_I_loopData_L1_relevancy_in = 0;
            layer_instruction_in_I_loopData_L1_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_I_loopData_L1_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_I_loopData_L1_relevancy",testbench::layer_instruction_in_I_loopData_L1_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_I_loopData_L1_relevancy.operator->(),cur_iter,layer_instruction_in_I_loopData_L1_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_I_loopData_L1_relevancy_ignore = false;
   static mgc_sysc_ver_array1D<ac_int<16, false >,5> layer_instruction_in_W_loopData_L3_bound_tmp;
   static int last_j_layer_instruction_in_W_loopData_L3_bound_in = 0;
   if (_capture_layer_instruction_in_W_loopData_L3_bound && !testbench::layer_instruction_in_W_loopData_L3_bound_ignore)
   {
      if (!layer_instruction_in_W_loopData_L3_bound_pointer_set) {
         layer_instruction_in_W_loopData_L3_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_W_loopData_L3_bound_pointer_set = true;
      } else if (layer_instruction_in_W_loopData_L3_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L3_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L3_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_W_loopData_L3_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_W_loopData_L3_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L3_bound > 0 && remaining_ccs_layer_instruction_in_W_loopData_L3_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L3_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_W_loopData_L3_bound_capture_count;
      ++layer_instruction_in_W_loopData_L3_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_W_loopData_L3_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_W_loopData_L3_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_W_loopData_L3_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::W_loopData_L3.loopData<ac_int<16, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_W_loopData_L3_bound->put(layer_instruction_in_W_loopData_L3_bound_tmp);
            last_j_layer_instruction_in_W_loopData_L3_bound_in = 0;
            layer_instruction_in_W_loopData_L3_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_W_loopData_L3_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_W_loopData_L3_bound",testbench::layer_instruction_in_W_loopData_L3_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_W_loopData_L3_bound.operator->(),cur_iter,layer_instruction_in_W_loopData_L3_bound_capture_count,1);
   }
   testbench::layer_instruction_in_W_loopData_L3_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_W_loopData_L3_relevancy_tmp;
   static int last_j_layer_instruction_in_W_loopData_L3_relevancy_in = 0;
   if (_capture_layer_instruction_in_W_loopData_L3_relevancy && !testbench::layer_instruction_in_W_loopData_L3_relevancy_ignore)
   {
      if (!layer_instruction_in_W_loopData_L3_relevancy_pointer_set) {
         layer_instruction_in_W_loopData_L3_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_W_loopData_L3_relevancy_pointer_set = true;
      } else if (layer_instruction_in_W_loopData_L3_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_W_loopData_L3_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_W_loopData_L3_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy > 0 && remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_W_loopData_L3_relevancy_capture_count;
      ++layer_instruction_in_W_loopData_L3_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_W_loopData_L3_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_W_loopData_L3_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::W_loopData_L3.loopData<ac_int<16, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_W_loopData_L3_relevancy->put(layer_instruction_in_W_loopData_L3_relevancy_tmp);
            last_j_layer_instruction_in_W_loopData_L3_relevancy_in = 0;
            layer_instruction_in_W_loopData_L3_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_W_loopData_L3_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_W_loopData_L3_relevancy",testbench::layer_instruction_in_W_loopData_L3_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_W_loopData_L3_relevancy.operator->(),cur_iter,layer_instruction_in_W_loopData_L3_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_W_loopData_L3_relevancy_ignore = false;
   static mgc_sysc_ver_array1D<ac_int<11, false >,5> layer_instruction_in_W_loopData_L2_bound_tmp;
   static int last_j_layer_instruction_in_W_loopData_L2_bound_in = 0;
   if (_capture_layer_instruction_in_W_loopData_L2_bound && !testbench::layer_instruction_in_W_loopData_L2_bound_ignore)
   {
      if (!layer_instruction_in_W_loopData_L2_bound_pointer_set) {
         layer_instruction_in_W_loopData_L2_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_W_loopData_L2_bound_pointer_set = true;
      } else if (layer_instruction_in_W_loopData_L2_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L2_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L2_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_W_loopData_L2_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_W_loopData_L2_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L2_bound > 0 && remaining_ccs_layer_instruction_in_W_loopData_L2_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L2_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_W_loopData_L2_bound_capture_count;
      ++layer_instruction_in_W_loopData_L2_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_W_loopData_L2_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_W_loopData_L2_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_W_loopData_L2_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::W_loopData_L2.loopData<ac_int<11, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_W_loopData_L2_bound->put(layer_instruction_in_W_loopData_L2_bound_tmp);
            last_j_layer_instruction_in_W_loopData_L2_bound_in = 0;
            layer_instruction_in_W_loopData_L2_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_W_loopData_L2_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_W_loopData_L2_bound",testbench::layer_instruction_in_W_loopData_L2_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_W_loopData_L2_bound.operator->(),cur_iter,layer_instruction_in_W_loopData_L2_bound_capture_count,1);
   }
   testbench::layer_instruction_in_W_loopData_L2_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_W_loopData_L2_relevancy_tmp;
   static int last_j_layer_instruction_in_W_loopData_L2_relevancy_in = 0;
   if (_capture_layer_instruction_in_W_loopData_L2_relevancy && !testbench::layer_instruction_in_W_loopData_L2_relevancy_ignore)
   {
      if (!layer_instruction_in_W_loopData_L2_relevancy_pointer_set) {
         layer_instruction_in_W_loopData_L2_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_W_loopData_L2_relevancy_pointer_set = true;
      } else if (layer_instruction_in_W_loopData_L2_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_W_loopData_L2_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_W_loopData_L2_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy > 0 && remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_W_loopData_L2_relevancy_capture_count;
      ++layer_instruction_in_W_loopData_L2_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_W_loopData_L2_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_W_loopData_L2_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::W_loopData_L2.loopData<ac_int<11, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_W_loopData_L2_relevancy->put(layer_instruction_in_W_loopData_L2_relevancy_tmp);
            last_j_layer_instruction_in_W_loopData_L2_relevancy_in = 0;
            layer_instruction_in_W_loopData_L2_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_W_loopData_L2_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_W_loopData_L2_relevancy",testbench::layer_instruction_in_W_loopData_L2_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_W_loopData_L2_relevancy.operator->(),cur_iter,layer_instruction_in_W_loopData_L2_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_W_loopData_L2_relevancy_ignore = false;
   static mgc_sysc_ver_array1D<ac_int<5, false >,5> layer_instruction_in_W_loopData_L1_bound_tmp;
   static int last_j_layer_instruction_in_W_loopData_L1_bound_in = 0;
   if (_capture_layer_instruction_in_W_loopData_L1_bound && !testbench::layer_instruction_in_W_loopData_L1_bound_ignore)
   {
      if (!layer_instruction_in_W_loopData_L1_bound_pointer_set) {
         layer_instruction_in_W_loopData_L1_bound_pointer = &(layer_instruction_in);
         layer_instruction_in_W_loopData_L1_bound_pointer_set = true;
      } else if (layer_instruction_in_W_loopData_L1_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L1_bound == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L1_bound << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_W_loopData_L1_bound_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_W_loopData_L1_bound_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L1_bound > 0 && remaining_ccs_layer_instruction_in_W_loopData_L1_bound != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L1_bound << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_W_loopData_L1_bound_capture_count;
      ++layer_instruction_in_W_loopData_L1_bound_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_W_loopData_L1_bound;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_W_loopData_L1_bound_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_W_loopData_L1_bound_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::W_loopData_L1.loopData<ac_int<5, false >, 5 >::bound[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_W_loopData_L1_bound->put(layer_instruction_in_W_loopData_L1_bound_tmp);
            last_j_layer_instruction_in_W_loopData_L1_bound_in = 0;
            layer_instruction_in_W_loopData_L1_bound_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_W_loopData_L1_bound_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_W_loopData_L1_bound",testbench::layer_instruction_in_W_loopData_L1_bound_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_W_loopData_L1_bound.operator->(),cur_iter,layer_instruction_in_W_loopData_L1_bound_capture_count,1);
   }
   testbench::layer_instruction_in_W_loopData_L1_bound_ignore = false;
   static mgc_sysc_ver_array1D<bool,5> layer_instruction_in_W_loopData_L1_relevancy_tmp;
   static int last_j_layer_instruction_in_W_loopData_L1_relevancy_in = 0;
   if (_capture_layer_instruction_in_W_loopData_L1_relevancy && !testbench::layer_instruction_in_W_loopData_L1_relevancy_ignore)
   {
      if (!layer_instruction_in_W_loopData_L1_relevancy_pointer_set) {
         layer_instruction_in_W_loopData_L1_relevancy_pointer = &(layer_instruction_in);
         layer_instruction_in_W_loopData_L1_relevancy_pointer_set = true;
      } else if (layer_instruction_in_W_loopData_L1_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy == 0) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a difference object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy << " values remaining in input fifo. No data mismatch detected." <<" @ " << sc_time_stamp();
         SC_REPORT_INFO("User testbench", msg.str().c_str());
         layer_instruction_in_W_loopData_L1_relevancy_pointer = &(layer_instruction_in);
      } else if (layer_instruction_in_W_loopData_L1_relevancy_pointer != &(layer_instruction_in) && remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy > 0 && remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy != layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         std::ostringstream msg; msg.str("");
         msg << "Interface layer_instruction_in source switched to a different object in testbench with "
             << remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy << " values remaining in input fifo. Simulation mismatch likely. Check golden vs DUT comparison values for errors." <<" @ " << sc_time_stamp();
         SC_REPORT_WARNING("User testbench", msg.str().c_str());
         _channel_mismatch = true;
      }
      int cur_iter = layer_instruction_in_W_loopData_L1_relevancy_capture_count;
      ++layer_instruction_in_W_loopData_L1_relevancy_iteration_count;
      unsigned int chan_factor = 1;
      unsigned int ccs_scv_i,ccs_scv_j;
      ccs_scv_i = remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy;
      while (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
         for (ccs_scv_j = last_j_layer_instruction_in_W_loopData_L1_relevancy_in; ccs_scv_j < chan_factor; ccs_scv_j++,ccs_scv_i++) {
            if (ccs_scv_i < layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size()) {
               int layer_instruction_in_linear_idx = 0;
               for (int layer_instruction_in_idx_0 = 0; layer_instruction_in_idx_0 < 5; ++layer_instruction_in_idx_0)
                  layer_instruction_in_W_loopData_L1_relevancy_tmp[layer_instruction_in_linear_idx++] = layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::chan[ccs_scv_i].loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 >::W_loopData_L1.loopData<ac_int<5, false >, 5 >::relevancy[layer_instruction_in_idx_0];
            } else {
               break;
            }
         }
         if (ccs_scv_j == chan_factor) {
            ccs_layer_instruction_in_W_loopData_L1_relevancy->put(layer_instruction_in_W_loopData_L1_relevancy_tmp);
            last_j_layer_instruction_in_W_loopData_L1_relevancy_in = 0;
            layer_instruction_in_W_loopData_L1_relevancy_capture_count += chan_factor;
         } else {
            last_j_layer_instruction_in_W_loopData_L1_relevancy_in = ccs_scv_j;
         }
      }
      mc_testbench_util::process_wait_ctrl("layer_instruction_in_W_loopData_L1_relevancy",testbench::layer_instruction_in_W_loopData_L1_relevancy_wait_ctrl,ccs_wait_ctrl_layer_instruction_in_W_loopData_L1_relevancy.operator->(),cur_iter,layer_instruction_in_W_loopData_L1_relevancy_capture_count,1);
   }
   testbench::layer_instruction_in_W_loopData_L1_relevancy_ignore = false;
}
// ============================================
// Function: wait_on_input_required
// --------------------------------------------

void mc_testbench::wait_on_input_required()
{
   ++wait_cnt;
   wait(SC_ZERO_TIME); // get fifos a chance to update
   ++period_counter;
   sc_time timeout = sc_time_stamp() - previous_timestamp;
   if (calculate_period && sc_time_stamp() > SC_ZERO_TIME && sc_time_stamp() != previous_timestamp && sc_time_stamp() != timeout) {
      average_period = (average_period + timeout) / 2;
   }
   previous_timestamp = sc_time_stamp();
   while (atleast_one_active_input) {
      if (_capture_O_data_in_data && ccs_O_data_in_data->used() == 0) return;
      if (_capture_I_data_in_data && ccs_I_data_in_data->used() == 0) return;
      if (_capture_W_data_in_data && ccs_W_data_in_data->used() == 0) return;
      if (_capture_zero_guard_in && ccs_zero_guard_in->used() == 0) return;
      if (_capture_layer_instruction_in_O_loopData_L3_bound && ccs_layer_instruction_in_O_loopData_L3_bound->used() == 0) return;
      if (_capture_layer_instruction_in_O_loopData_L3_relevancy && ccs_layer_instruction_in_O_loopData_L3_relevancy->used() == 0) return;
      if (_capture_layer_instruction_in_O_loopData_L2_bound && ccs_layer_instruction_in_O_loopData_L2_bound->used() == 0) return;
      if (_capture_layer_instruction_in_O_loopData_L2_relevancy && ccs_layer_instruction_in_O_loopData_L2_relevancy->used() == 0) return;
      if (_capture_layer_instruction_in_O_loopData_L1_bound && ccs_layer_instruction_in_O_loopData_L1_bound->used() == 0) return;
      if (_capture_layer_instruction_in_O_loopData_L1_relevancy && ccs_layer_instruction_in_O_loopData_L1_relevancy->used() == 0) return;
      if (_capture_layer_instruction_in_I_loopData_L3_bound && ccs_layer_instruction_in_I_loopData_L3_bound->used() == 0) return;
      if (_capture_layer_instruction_in_I_loopData_L3_relevancy && ccs_layer_instruction_in_I_loopData_L3_relevancy->used() == 0) return;
      if (_capture_layer_instruction_in_I_loopData_L2_bound && ccs_layer_instruction_in_I_loopData_L2_bound->used() == 0) return;
      if (_capture_layer_instruction_in_I_loopData_L2_relevancy && ccs_layer_instruction_in_I_loopData_L2_relevancy->used() == 0) return;
      if (_capture_layer_instruction_in_I_loopData_L1_bound && ccs_layer_instruction_in_I_loopData_L1_bound->used() == 0) return;
      if (_capture_layer_instruction_in_I_loopData_L1_relevancy && ccs_layer_instruction_in_I_loopData_L1_relevancy->used() == 0) return;
      if (_capture_layer_instruction_in_W_loopData_L3_bound && ccs_layer_instruction_in_W_loopData_L3_bound->used() == 0) return;
      if (_capture_layer_instruction_in_W_loopData_L3_relevancy && ccs_layer_instruction_in_W_loopData_L3_relevancy->used() == 0) return;
      if (_capture_layer_instruction_in_W_loopData_L2_bound && ccs_layer_instruction_in_W_loopData_L2_bound->used() == 0) return;
      if (_capture_layer_instruction_in_W_loopData_L2_relevancy && ccs_layer_instruction_in_W_loopData_L2_relevancy->used() == 0) return;
      if (_capture_layer_instruction_in_W_loopData_L1_bound && ccs_layer_instruction_in_W_loopData_L1_bound->used() == 0) return;
      if (_capture_layer_instruction_in_W_loopData_L1_relevancy && ccs_layer_instruction_in_W_loopData_L1_relevancy->used() == 0) return;
      that->cpp_testbench_active.write(false);
      if (average_period > SC_ZERO_TIME && sc_time_stamp() != timeout)
         wait(average_period * 10, ccs_O_data_in_data->ok_to_put() | ccs_I_data_in_data->ok_to_put() | ccs_W_data_in_data->ok_to_put() | ccs_zero_guard_in->ok_to_put() | ccs_layer_instruction_in_O_loopData_L3_bound->ok_to_put() | ccs_layer_instruction_in_O_loopData_L3_relevancy->ok_to_put() | ccs_layer_instruction_in_O_loopData_L2_bound->ok_to_put() | ccs_layer_instruction_in_O_loopData_L2_relevancy->ok_to_put() | ccs_layer_instruction_in_O_loopData_L1_bound->ok_to_put() | ccs_layer_instruction_in_O_loopData_L1_relevancy->ok_to_put() | ccs_layer_instruction_in_I_loopData_L3_bound->ok_to_put() | ccs_layer_instruction_in_I_loopData_L3_relevancy->ok_to_put() | ccs_layer_instruction_in_I_loopData_L2_bound->ok_to_put() | ccs_layer_instruction_in_I_loopData_L2_relevancy->ok_to_put() | ccs_layer_instruction_in_I_loopData_L1_bound->ok_to_put() | ccs_layer_instruction_in_I_loopData_L1_relevancy->ok_to_put() | ccs_layer_instruction_in_W_loopData_L3_bound->ok_to_put() | ccs_layer_instruction_in_W_loopData_L3_relevancy->ok_to_put() | ccs_layer_instruction_in_W_loopData_L2_bound->ok_to_put() | ccs_layer_instruction_in_W_loopData_L2_relevancy->ok_to_put() | ccs_layer_instruction_in_W_loopData_L1_bound->ok_to_put() | ccs_layer_instruction_in_W_loopData_L1_relevancy->ok_to_put());
      else
         wait(ccs_O_data_in_data->ok_to_put() | ccs_I_data_in_data->ok_to_put() | ccs_W_data_in_data->ok_to_put() | ccs_zero_guard_in->ok_to_put() | ccs_layer_instruction_in_O_loopData_L3_bound->ok_to_put() | ccs_layer_instruction_in_O_loopData_L3_relevancy->ok_to_put() | ccs_layer_instruction_in_O_loopData_L2_bound->ok_to_put() | ccs_layer_instruction_in_O_loopData_L2_relevancy->ok_to_put() | ccs_layer_instruction_in_O_loopData_L1_bound->ok_to_put() | ccs_layer_instruction_in_O_loopData_L1_relevancy->ok_to_put() | ccs_layer_instruction_in_I_loopData_L3_bound->ok_to_put() | ccs_layer_instruction_in_I_loopData_L3_relevancy->ok_to_put() | ccs_layer_instruction_in_I_loopData_L2_bound->ok_to_put() | ccs_layer_instruction_in_I_loopData_L2_relevancy->ok_to_put() | ccs_layer_instruction_in_I_loopData_L1_bound->ok_to_put() | ccs_layer_instruction_in_I_loopData_L1_relevancy->ok_to_put() | ccs_layer_instruction_in_W_loopData_L3_bound->ok_to_put() | ccs_layer_instruction_in_W_loopData_L3_relevancy->ok_to_put() | ccs_layer_instruction_in_W_loopData_L2_bound->ok_to_put() | ccs_layer_instruction_in_W_loopData_L2_relevancy->ok_to_put() | ccs_layer_instruction_in_W_loopData_L1_bound->ok_to_put() | ccs_layer_instruction_in_W_loopData_L1_relevancy->ok_to_put());
      that->cpp_testbench_active.write(true);
      if (timed_out()) {
         calculate_period = false;
         return;
      }
   }
}
// ============================================
// Function: capture_IN
// --------------------------------------------

void mc_testbench::capture_IN( ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_in,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_out,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &I_data_in,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &W_data_in,  ac_channel<bool > &zero_guard_in,  ac_channel<bool > &done_out,  ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > > &layer_instruction_in)
{
   that->capture_O_data_in(O_data_in);
   that->remaining_O_data_out_data_golden =  O_data_out.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size();
   that->capture_I_data_in(I_data_in);
   that->capture_W_data_in(W_data_in);
   that->capture_zero_guard_in(zero_guard_in);
   that->capture_done_out(done_out);
   that->capture_layer_instruction_in(layer_instruction_in);
}
// ============================================
// Function: capture_OUT
// --------------------------------------------

void mc_testbench::capture_OUT( ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_in,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_out,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &I_data_in,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &W_data_in,  ac_channel<bool > &zero_guard_in,  ac_channel<bool > &done_out,  ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > > &layer_instruction_in)
{
   that->remaining_ccs_O_data_in_data =  O_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_O_data_in_data != 0) {
      cout << "Warning: Testbench input channel 'O_data_in' not empty. Remaining size: " << that->remaining_ccs_O_data_in_data << endl;
   }
   that->capture_O_data_out(O_data_out);
   that->remaining_ccs_I_data_in_data =  I_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_I_data_in_data != 0) {
      cout << "Warning: Testbench input channel 'I_data_in' not empty. Remaining size: " << that->remaining_ccs_I_data_in_data << endl;
   }
   that->remaining_ccs_W_data_in_data =  W_data_in.ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_W_data_in_data != 0) {
      cout << "Warning: Testbench input channel 'W_data_in' not empty. Remaining size: " << that->remaining_ccs_W_data_in_data << endl;
   }
   that->remaining_ccs_zero_guard_in =  zero_guard_in.ac_channel<bool >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_zero_guard_in != 0) {
      cout << "Warning: Testbench input channel 'zero_guard_in' not empty. Remaining size: " << that->remaining_ccs_zero_guard_in << endl;
   }
   that->remaining_ccs_layer_instruction_in_O_loopData_L3_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_O_loopData_L3_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_O_loopData_L3_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_O_loopData_L3_relevancy << endl;
   }
   that->remaining_ccs_layer_instruction_in_O_loopData_L2_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_O_loopData_L2_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_O_loopData_L2_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_O_loopData_L2_relevancy << endl;
   }
   that->remaining_ccs_layer_instruction_in_O_loopData_L1_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_O_loopData_L1_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_O_loopData_L1_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_O_loopData_L1_relevancy << endl;
   }
   that->remaining_ccs_layer_instruction_in_I_loopData_L3_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_I_loopData_L3_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_I_loopData_L3_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_I_loopData_L3_relevancy << endl;
   }
   that->remaining_ccs_layer_instruction_in_I_loopData_L2_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_I_loopData_L2_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_I_loopData_L2_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_I_loopData_L2_relevancy << endl;
   }
   that->remaining_ccs_layer_instruction_in_I_loopData_L1_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_I_loopData_L1_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_I_loopData_L1_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_I_loopData_L1_relevancy << endl;
   }
   that->remaining_ccs_layer_instruction_in_W_loopData_L3_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_W_loopData_L3_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_W_loopData_L3_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_W_loopData_L3_relevancy << endl;
   }
   that->remaining_ccs_layer_instruction_in_W_loopData_L2_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_W_loopData_L2_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_W_loopData_L2_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_W_loopData_L2_relevancy << endl;
   }
   that->remaining_ccs_layer_instruction_in_W_loopData_L1_bound =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_W_loopData_L1_bound != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_W_loopData_L1_bound << endl;
   }
   that->remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy =  layer_instruction_in.ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > >::debug_size();
   if (testbench::enable_idle_sync_mode && that->remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy != 0) {
      cout << "Warning: Testbench input channel 'layer_instruction_in' not empty. Remaining size: " << that->remaining_ccs_layer_instruction_in_W_loopData_L1_relevancy << endl;
   }
}
// ============================================
// Function: exec_run
// --------------------------------------------

void mc_testbench::exec_run( ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_in,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &O_data_out,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &I_data_in,  ac_channel<packedData<ac_fixed<16, 16, false, AC_TRN, AC_WRAP >, 1 > > &W_data_in,  ac_channel<bool > &zero_guard_in,  ac_channel<bool > &done_out,  ac_channel<loopinstrData<ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<14, false >, ac_int<9, false >, ac_int<5, false >, ac_int<16, false >, ac_int<11, false >, ac_int<5, false >, 5 > > &layer_instruction_in)
{
   #ifndef CCS_SCVERIFY_USE_CCS_BLOCK
   that->cpp_testbench_active.write(true);
   capture_IN(O_data_in, O_data_out, I_data_in, W_data_in, zero_guard_in, done_out, layer_instruction_in);
   top<5, 32, 1, 1, O_addr_type_L1, 32, 1, 1, I_addr_type_L1, 32, 1, 1, W_addr_type_L1, 5, 288, 8, 8, O_addr_type_L2, 312, 8, 8, I_addr_type_L2, 1728, 8, 8, W_addr_type_L2, 5, 8640, 8, 8, O_addr_type_L3, 8640, 8, 8, I_addr_type_L3, 55296, 8, 8, W_addr_type_L3, O_partial_type, I_type, W_type>::run(O_data_in, O_data_out, I_data_in, W_data_in, zero_guard_in, done_out, layer_instruction_in);
   // throttle ac_channel based on number of calls to chan::size() or chan::empty() or chan::nb_read() (but not chan::available()) 
   if (1) {
      int cnt=0;
      if (cnt) std::cout << "mc_testbench.cpp: CONTINUES @ " << sc_time_stamp() << std::endl;
      if (cnt) that->cpp_testbench_active.write(true);
   }
   capture_OUT(O_data_in, O_data_out, I_data_in, W_data_in, zero_guard_in, done_out, layer_instruction_in);
   #else
   #endif
}
// ============================================
// Function: start_of_simulation
// --------------------------------------------

void mc_testbench::start_of_simulation()
{
   set_enable_stalls(false);
}
// ============================================
// Function: end_of_simulation
// --------------------------------------------

void mc_testbench::end_of_simulation()
{
   if (!_checked_results) {
      SC_REPORT_INFO(name(), "Testbench exited early or ran into deadlock");
      check_results();
   }
}
// ============================================
// Function: check_results
// --------------------------------------------

void mc_testbench::check_results()
{
   if (_checked_results) return;
   _checked_results = true;
   cout<<endl;
   cout<<"Checking results"<<endl;
   if (main_exit_code) _failed = true;
   int _num_outputs_checked = 0;
   bool _has_capture_counts = false;
   std::ostringstream mctb_msg;
   
   if (!_capture_O_data_out_data) {
      cout<<"'O_data_out_data' - warning, output was optimized away"<<endl;
   } else {
      _num_outputs_checked++;
      _failed |= O_data_out_data_comp->check_results(O_data_out_data_capture_count,testbench::O_data_out_data_skip_noerr);
      _has_capture_counts |= !!(O_data_out_data_capture_count);
   }
   cout<<endl;
   if (_num_outputs_checked == 0) {
      cout<<"Error: All outputs were optimized away. No output values were compared."<<endl;
      _failed = _failed || (_num_outputs_checked == 0);
   }
   if (!_has_capture_counts) {
      cout<<"Error: Nothing to compare, all output capture counts are zero."<<endl;
      _failed = true;
   }
   if (main_exit_code) cout << "Error: C++ Testbench 'main()' returned a non-zero exit code ("<<main_exit_code<<"). Check your testbench." <<endl;
   mctb_msg.clear();
   if (_failed) mctb_msg << "Simulation FAILED";
   else         mctb_msg << "Simulation PASSED";
   mctb_msg << " @ " << sc_time_stamp();
   if (_channel_mismatch && _failed)
   mctb_msg << endl << "An input channel was switched before the input fifo was fully empty. Check your testbench.";
   SC_REPORT_INFO(this->name(), mctb_msg.str().c_str());
}
// ============================================
// Function: failed
// --------------------------------------------

bool mc_testbench::failed()
{
   return _failed;
}
// ============================================
// Function: set_failed
// --------------------------------------------

void mc_testbench::set_failed(bool fail)
{
   _failed = fail;
}
// ---------------------------------------------------------------
// Process: SC_METHOD wait_for_end
// Static sensitivity: sensitive << clk.pos() << testbench_end_event;

void mc_testbench::wait_for_end() {
   // If run() has not finished, we do nothing here
   if (!testbench_ended) return;
   // check for completed outputs
   if (O_data_out_data_comp->get_compare_count() < O_data_out_data_capture_count) {testbench_end_event.notify(1,SC_NS); return;}
   // If we made it here, all outputs have flushed. Check the results
   SC_REPORT_INFO(name(), "Simulation completed");
   check_results();
   sc_stop();
}
// ---------------------------------------------------------------
// Process: SC_THREAD run
// Static sensitivity: 

void mc_testbench::run() {
   testbench::enable_idle_sync_mode = false;
   testbench::idle_sync_stable_cycles = 1;
   _channel_mismatch = false;
   testbench::O_data_in_data_ignore = false;
   testbench::O_data_in_data_skip = false;
   testbench::O_data_in_data_skip_quiet = false;
   testbench::O_data_in_data_skip_once = false;
   testbench::O_data_in_data_skip_noerr = false;
   testbench::O_data_in_data_array_comp_first = -1;
   testbench::O_data_in_data_array_comp_last = -1;
   testbench::O_data_in_data_wait_ctrl.clear();
   O_data_in_data_capture_count = 0;
   O_data_in_data_iteration_count = 0;
   O_data_in_data_pointer_set = false;
   testbench::O_data_out_data_ignore = false;
   testbench::O_data_out_data_skip = false;
   testbench::O_data_out_data_skip_quiet = false;
   testbench::O_data_out_data_skip_once = false;
   testbench::O_data_out_data_skip_noerr = false;
   testbench::O_data_out_data_array_comp_first = -1;
   testbench::O_data_out_data_array_comp_last = -1;
   testbench::O_data_out_data_use_mask = false;
   testbench::O_data_out_data_output_mask = (ac_fixed<16, 16, false, AC_TRN, AC_WRAP >) ~0;
   testbench::O_data_out_data_wait_ctrl.clear();
   O_data_out_data_capture_count = 0;
   O_data_out_data_iteration_count = 0;
   O_data_out_data_pointer_set = false;
   testbench::I_data_in_data_ignore = false;
   testbench::I_data_in_data_skip = false;
   testbench::I_data_in_data_skip_quiet = false;
   testbench::I_data_in_data_skip_once = false;
   testbench::I_data_in_data_skip_noerr = false;
   testbench::I_data_in_data_array_comp_first = -1;
   testbench::I_data_in_data_array_comp_last = -1;
   testbench::I_data_in_data_wait_ctrl.clear();
   I_data_in_data_capture_count = 0;
   I_data_in_data_iteration_count = 0;
   I_data_in_data_pointer_set = false;
   testbench::W_data_in_data_ignore = false;
   testbench::W_data_in_data_skip = false;
   testbench::W_data_in_data_skip_quiet = false;
   testbench::W_data_in_data_skip_once = false;
   testbench::W_data_in_data_skip_noerr = false;
   testbench::W_data_in_data_array_comp_first = -1;
   testbench::W_data_in_data_array_comp_last = -1;
   testbench::W_data_in_data_wait_ctrl.clear();
   W_data_in_data_capture_count = 0;
   W_data_in_data_iteration_count = 0;
   W_data_in_data_pointer_set = false;
   testbench::zero_guard_in_ignore = false;
   testbench::zero_guard_in_skip = false;
   testbench::zero_guard_in_skip_quiet = false;
   testbench::zero_guard_in_skip_once = false;
   testbench::zero_guard_in_skip_noerr = false;
   testbench::zero_guard_in_array_comp_first = -1;
   testbench::zero_guard_in_array_comp_last = -1;
   testbench::zero_guard_in_wait_ctrl.clear();
   zero_guard_in_capture_count = 0;
   zero_guard_in_iteration_count = 0;
   zero_guard_in_pointer_set = false;
   testbench::done_out_ignore = false;
   testbench::done_out_skip = false;
   testbench::done_out_skip_quiet = false;
   testbench::done_out_skip_once = false;
   testbench::done_out_skip_noerr = false;
   testbench::done_out_array_comp_first = -1;
   testbench::done_out_array_comp_last = -1;
   testbench::done_out_wait_ctrl.clear();
   testbench::layer_instruction_in_O_loopData_L3_bound_ignore = false;
   testbench::layer_instruction_in_O_loopData_L3_bound_skip = false;
   testbench::layer_instruction_in_O_loopData_L3_bound_skip_quiet = false;
   testbench::layer_instruction_in_O_loopData_L3_bound_skip_once = false;
   testbench::layer_instruction_in_O_loopData_L3_bound_skip_noerr = false;
   testbench::layer_instruction_in_O_loopData_L3_bound_array_comp_first = -1;
   testbench::layer_instruction_in_O_loopData_L3_bound_array_comp_last = -1;
   testbench::layer_instruction_in_O_loopData_L3_bound_wait_ctrl.clear();
   layer_instruction_in_O_loopData_L3_bound_capture_count = 0;
   layer_instruction_in_O_loopData_L3_bound_iteration_count = 0;
   testbench::layer_instruction_in_O_loopData_L3_relevancy_ignore = false;
   testbench::layer_instruction_in_O_loopData_L3_relevancy_skip = false;
   testbench::layer_instruction_in_O_loopData_L3_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_O_loopData_L3_relevancy_skip_once = false;
   testbench::layer_instruction_in_O_loopData_L3_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_O_loopData_L3_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_O_loopData_L3_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_O_loopData_L3_relevancy_wait_ctrl.clear();
   layer_instruction_in_O_loopData_L3_relevancy_capture_count = 0;
   layer_instruction_in_O_loopData_L3_relevancy_iteration_count = 0;
   testbench::layer_instruction_in_O_loopData_L2_bound_ignore = false;
   testbench::layer_instruction_in_O_loopData_L2_bound_skip = false;
   testbench::layer_instruction_in_O_loopData_L2_bound_skip_quiet = false;
   testbench::layer_instruction_in_O_loopData_L2_bound_skip_once = false;
   testbench::layer_instruction_in_O_loopData_L2_bound_skip_noerr = false;
   testbench::layer_instruction_in_O_loopData_L2_bound_array_comp_first = -1;
   testbench::layer_instruction_in_O_loopData_L2_bound_array_comp_last = -1;
   testbench::layer_instruction_in_O_loopData_L2_bound_wait_ctrl.clear();
   layer_instruction_in_O_loopData_L2_bound_capture_count = 0;
   layer_instruction_in_O_loopData_L2_bound_iteration_count = 0;
   testbench::layer_instruction_in_O_loopData_L2_relevancy_ignore = false;
   testbench::layer_instruction_in_O_loopData_L2_relevancy_skip = false;
   testbench::layer_instruction_in_O_loopData_L2_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_O_loopData_L2_relevancy_skip_once = false;
   testbench::layer_instruction_in_O_loopData_L2_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_O_loopData_L2_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_O_loopData_L2_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_O_loopData_L2_relevancy_wait_ctrl.clear();
   layer_instruction_in_O_loopData_L2_relevancy_capture_count = 0;
   layer_instruction_in_O_loopData_L2_relevancy_iteration_count = 0;
   testbench::layer_instruction_in_O_loopData_L1_bound_ignore = false;
   testbench::layer_instruction_in_O_loopData_L1_bound_skip = false;
   testbench::layer_instruction_in_O_loopData_L1_bound_skip_quiet = false;
   testbench::layer_instruction_in_O_loopData_L1_bound_skip_once = false;
   testbench::layer_instruction_in_O_loopData_L1_bound_skip_noerr = false;
   testbench::layer_instruction_in_O_loopData_L1_bound_array_comp_first = -1;
   testbench::layer_instruction_in_O_loopData_L1_bound_array_comp_last = -1;
   testbench::layer_instruction_in_O_loopData_L1_bound_wait_ctrl.clear();
   layer_instruction_in_O_loopData_L1_bound_capture_count = 0;
   layer_instruction_in_O_loopData_L1_bound_iteration_count = 0;
   testbench::layer_instruction_in_O_loopData_L1_relevancy_ignore = false;
   testbench::layer_instruction_in_O_loopData_L1_relevancy_skip = false;
   testbench::layer_instruction_in_O_loopData_L1_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_O_loopData_L1_relevancy_skip_once = false;
   testbench::layer_instruction_in_O_loopData_L1_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_O_loopData_L1_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_O_loopData_L1_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_O_loopData_L1_relevancy_wait_ctrl.clear();
   layer_instruction_in_O_loopData_L1_relevancy_capture_count = 0;
   layer_instruction_in_O_loopData_L1_relevancy_iteration_count = 0;
   testbench::layer_instruction_in_I_loopData_L3_bound_ignore = false;
   testbench::layer_instruction_in_I_loopData_L3_bound_skip = false;
   testbench::layer_instruction_in_I_loopData_L3_bound_skip_quiet = false;
   testbench::layer_instruction_in_I_loopData_L3_bound_skip_once = false;
   testbench::layer_instruction_in_I_loopData_L3_bound_skip_noerr = false;
   testbench::layer_instruction_in_I_loopData_L3_bound_array_comp_first = -1;
   testbench::layer_instruction_in_I_loopData_L3_bound_array_comp_last = -1;
   testbench::layer_instruction_in_I_loopData_L3_bound_wait_ctrl.clear();
   layer_instruction_in_I_loopData_L3_bound_capture_count = 0;
   layer_instruction_in_I_loopData_L3_bound_iteration_count = 0;
   testbench::layer_instruction_in_I_loopData_L3_relevancy_ignore = false;
   testbench::layer_instruction_in_I_loopData_L3_relevancy_skip = false;
   testbench::layer_instruction_in_I_loopData_L3_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_I_loopData_L3_relevancy_skip_once = false;
   testbench::layer_instruction_in_I_loopData_L3_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_I_loopData_L3_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_I_loopData_L3_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_I_loopData_L3_relevancy_wait_ctrl.clear();
   layer_instruction_in_I_loopData_L3_relevancy_capture_count = 0;
   layer_instruction_in_I_loopData_L3_relevancy_iteration_count = 0;
   testbench::layer_instruction_in_I_loopData_L2_bound_ignore = false;
   testbench::layer_instruction_in_I_loopData_L2_bound_skip = false;
   testbench::layer_instruction_in_I_loopData_L2_bound_skip_quiet = false;
   testbench::layer_instruction_in_I_loopData_L2_bound_skip_once = false;
   testbench::layer_instruction_in_I_loopData_L2_bound_skip_noerr = false;
   testbench::layer_instruction_in_I_loopData_L2_bound_array_comp_first = -1;
   testbench::layer_instruction_in_I_loopData_L2_bound_array_comp_last = -1;
   testbench::layer_instruction_in_I_loopData_L2_bound_wait_ctrl.clear();
   layer_instruction_in_I_loopData_L2_bound_capture_count = 0;
   layer_instruction_in_I_loopData_L2_bound_iteration_count = 0;
   testbench::layer_instruction_in_I_loopData_L2_relevancy_ignore = false;
   testbench::layer_instruction_in_I_loopData_L2_relevancy_skip = false;
   testbench::layer_instruction_in_I_loopData_L2_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_I_loopData_L2_relevancy_skip_once = false;
   testbench::layer_instruction_in_I_loopData_L2_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_I_loopData_L2_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_I_loopData_L2_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_I_loopData_L2_relevancy_wait_ctrl.clear();
   layer_instruction_in_I_loopData_L2_relevancy_capture_count = 0;
   layer_instruction_in_I_loopData_L2_relevancy_iteration_count = 0;
   testbench::layer_instruction_in_I_loopData_L1_bound_ignore = false;
   testbench::layer_instruction_in_I_loopData_L1_bound_skip = false;
   testbench::layer_instruction_in_I_loopData_L1_bound_skip_quiet = false;
   testbench::layer_instruction_in_I_loopData_L1_bound_skip_once = false;
   testbench::layer_instruction_in_I_loopData_L1_bound_skip_noerr = false;
   testbench::layer_instruction_in_I_loopData_L1_bound_array_comp_first = -1;
   testbench::layer_instruction_in_I_loopData_L1_bound_array_comp_last = -1;
   testbench::layer_instruction_in_I_loopData_L1_bound_wait_ctrl.clear();
   layer_instruction_in_I_loopData_L1_bound_capture_count = 0;
   layer_instruction_in_I_loopData_L1_bound_iteration_count = 0;
   testbench::layer_instruction_in_I_loopData_L1_relevancy_ignore = false;
   testbench::layer_instruction_in_I_loopData_L1_relevancy_skip = false;
   testbench::layer_instruction_in_I_loopData_L1_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_I_loopData_L1_relevancy_skip_once = false;
   testbench::layer_instruction_in_I_loopData_L1_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_I_loopData_L1_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_I_loopData_L1_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_I_loopData_L1_relevancy_wait_ctrl.clear();
   layer_instruction_in_I_loopData_L1_relevancy_capture_count = 0;
   layer_instruction_in_I_loopData_L1_relevancy_iteration_count = 0;
   testbench::layer_instruction_in_W_loopData_L3_bound_ignore = false;
   testbench::layer_instruction_in_W_loopData_L3_bound_skip = false;
   testbench::layer_instruction_in_W_loopData_L3_bound_skip_quiet = false;
   testbench::layer_instruction_in_W_loopData_L3_bound_skip_once = false;
   testbench::layer_instruction_in_W_loopData_L3_bound_skip_noerr = false;
   testbench::layer_instruction_in_W_loopData_L3_bound_array_comp_first = -1;
   testbench::layer_instruction_in_W_loopData_L3_bound_array_comp_last = -1;
   testbench::layer_instruction_in_W_loopData_L3_bound_wait_ctrl.clear();
   layer_instruction_in_W_loopData_L3_bound_capture_count = 0;
   layer_instruction_in_W_loopData_L3_bound_iteration_count = 0;
   testbench::layer_instruction_in_W_loopData_L3_relevancy_ignore = false;
   testbench::layer_instruction_in_W_loopData_L3_relevancy_skip = false;
   testbench::layer_instruction_in_W_loopData_L3_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_W_loopData_L3_relevancy_skip_once = false;
   testbench::layer_instruction_in_W_loopData_L3_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_W_loopData_L3_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_W_loopData_L3_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_W_loopData_L3_relevancy_wait_ctrl.clear();
   layer_instruction_in_W_loopData_L3_relevancy_capture_count = 0;
   layer_instruction_in_W_loopData_L3_relevancy_iteration_count = 0;
   testbench::layer_instruction_in_W_loopData_L2_bound_ignore = false;
   testbench::layer_instruction_in_W_loopData_L2_bound_skip = false;
   testbench::layer_instruction_in_W_loopData_L2_bound_skip_quiet = false;
   testbench::layer_instruction_in_W_loopData_L2_bound_skip_once = false;
   testbench::layer_instruction_in_W_loopData_L2_bound_skip_noerr = false;
   testbench::layer_instruction_in_W_loopData_L2_bound_array_comp_first = -1;
   testbench::layer_instruction_in_W_loopData_L2_bound_array_comp_last = -1;
   testbench::layer_instruction_in_W_loopData_L2_bound_wait_ctrl.clear();
   layer_instruction_in_W_loopData_L2_bound_capture_count = 0;
   layer_instruction_in_W_loopData_L2_bound_iteration_count = 0;
   testbench::layer_instruction_in_W_loopData_L2_relevancy_ignore = false;
   testbench::layer_instruction_in_W_loopData_L2_relevancy_skip = false;
   testbench::layer_instruction_in_W_loopData_L2_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_W_loopData_L2_relevancy_skip_once = false;
   testbench::layer_instruction_in_W_loopData_L2_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_W_loopData_L2_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_W_loopData_L2_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_W_loopData_L2_relevancy_wait_ctrl.clear();
   layer_instruction_in_W_loopData_L2_relevancy_capture_count = 0;
   layer_instruction_in_W_loopData_L2_relevancy_iteration_count = 0;
   testbench::layer_instruction_in_W_loopData_L1_bound_ignore = false;
   testbench::layer_instruction_in_W_loopData_L1_bound_skip = false;
   testbench::layer_instruction_in_W_loopData_L1_bound_skip_quiet = false;
   testbench::layer_instruction_in_W_loopData_L1_bound_skip_once = false;
   testbench::layer_instruction_in_W_loopData_L1_bound_skip_noerr = false;
   testbench::layer_instruction_in_W_loopData_L1_bound_array_comp_first = -1;
   testbench::layer_instruction_in_W_loopData_L1_bound_array_comp_last = -1;
   testbench::layer_instruction_in_W_loopData_L1_bound_wait_ctrl.clear();
   layer_instruction_in_W_loopData_L1_bound_capture_count = 0;
   layer_instruction_in_W_loopData_L1_bound_iteration_count = 0;
   testbench::layer_instruction_in_W_loopData_L1_relevancy_ignore = false;
   testbench::layer_instruction_in_W_loopData_L1_relevancy_skip = false;
   testbench::layer_instruction_in_W_loopData_L1_relevancy_skip_quiet = false;
   testbench::layer_instruction_in_W_loopData_L1_relevancy_skip_once = false;
   testbench::layer_instruction_in_W_loopData_L1_relevancy_skip_noerr = false;
   testbench::layer_instruction_in_W_loopData_L1_relevancy_array_comp_first = -1;
   testbench::layer_instruction_in_W_loopData_L1_relevancy_array_comp_last = -1;
   testbench::layer_instruction_in_W_loopData_L1_relevancy_wait_ctrl.clear();
   layer_instruction_in_W_loopData_L1_relevancy_capture_count = 0;
   layer_instruction_in_W_loopData_L1_relevancy_iteration_count = 0;
   layer_instruction_in_O_loopData_L3_bound_pointer_set = false;
   layer_instruction_in_O_loopData_L3_relevancy_pointer_set = false;
   layer_instruction_in_O_loopData_L2_bound_pointer_set = false;
   layer_instruction_in_O_loopData_L2_relevancy_pointer_set = false;
   layer_instruction_in_O_loopData_L1_bound_pointer_set = false;
   layer_instruction_in_O_loopData_L1_relevancy_pointer_set = false;
   layer_instruction_in_I_loopData_L3_bound_pointer_set = false;
   layer_instruction_in_I_loopData_L3_relevancy_pointer_set = false;
   layer_instruction_in_I_loopData_L2_bound_pointer_set = false;
   layer_instruction_in_I_loopData_L2_relevancy_pointer_set = false;
   layer_instruction_in_I_loopData_L1_bound_pointer_set = false;
   layer_instruction_in_I_loopData_L1_relevancy_pointer_set = false;
   layer_instruction_in_W_loopData_L3_bound_pointer_set = false;
   layer_instruction_in_W_loopData_L3_relevancy_pointer_set = false;
   layer_instruction_in_W_loopData_L2_bound_pointer_set = false;
   layer_instruction_in_W_loopData_L2_relevancy_pointer_set = false;
   layer_instruction_in_W_loopData_L1_bound_pointer_set = false;
   layer_instruction_in_W_loopData_L1_relevancy_pointer_set = false;
   testbench testbench_inst(sc_argc(), sc_argv());
   main_exit_code = testbench_inst.main();
   cout<<"Info: Execution of user-supplied C++ testbench 'main()' has completed with exit code = " << main_exit_code << endl;
   cout<<endl;
   cout<<"Info: Collecting data completed"<<endl;
   cout<<"   captured "<<O_data_in_data_capture_count<<" values of O_data_in_data"<<endl;
   cout<<"   captured "<<O_data_out_data_capture_count<<" values of O_data_out_data"<<endl;
   cout<<"   captured "<<I_data_in_data_capture_count<<" values of I_data_in_data"<<endl;
   cout<<"   captured "<<W_data_in_data_capture_count<<" values of W_data_in_data"<<endl;
   cout<<"   captured "<<zero_guard_in_capture_count<<" values of zero_guard_in"<<endl;
   cout<<"   captured "<<layer_instruction_in_O_loopData_L3_bound_capture_count<<" values of layer_instruction_in_O_loopData_L3_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_O_loopData_L3_relevancy_capture_count<<" values of layer_instruction_in_O_loopData_L3_relevancy"<<endl;
   cout<<"   captured "<<layer_instruction_in_O_loopData_L2_bound_capture_count<<" values of layer_instruction_in_O_loopData_L2_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_O_loopData_L2_relevancy_capture_count<<" values of layer_instruction_in_O_loopData_L2_relevancy"<<endl;
   cout<<"   captured "<<layer_instruction_in_O_loopData_L1_bound_capture_count<<" values of layer_instruction_in_O_loopData_L1_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_O_loopData_L1_relevancy_capture_count<<" values of layer_instruction_in_O_loopData_L1_relevancy"<<endl;
   cout<<"   captured "<<layer_instruction_in_I_loopData_L3_bound_capture_count<<" values of layer_instruction_in_I_loopData_L3_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_I_loopData_L3_relevancy_capture_count<<" values of layer_instruction_in_I_loopData_L3_relevancy"<<endl;
   cout<<"   captured "<<layer_instruction_in_I_loopData_L2_bound_capture_count<<" values of layer_instruction_in_I_loopData_L2_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_I_loopData_L2_relevancy_capture_count<<" values of layer_instruction_in_I_loopData_L2_relevancy"<<endl;
   cout<<"   captured "<<layer_instruction_in_I_loopData_L1_bound_capture_count<<" values of layer_instruction_in_I_loopData_L1_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_I_loopData_L1_relevancy_capture_count<<" values of layer_instruction_in_I_loopData_L1_relevancy"<<endl;
   cout<<"   captured "<<layer_instruction_in_W_loopData_L3_bound_capture_count<<" values of layer_instruction_in_W_loopData_L3_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_W_loopData_L3_relevancy_capture_count<<" values of layer_instruction_in_W_loopData_L3_relevancy"<<endl;
   cout<<"   captured "<<layer_instruction_in_W_loopData_L2_bound_capture_count<<" values of layer_instruction_in_W_loopData_L2_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_W_loopData_L2_relevancy_capture_count<<" values of layer_instruction_in_W_loopData_L2_relevancy"<<endl;
   cout<<"   captured "<<layer_instruction_in_W_loopData_L1_bound_capture_count<<" values of layer_instruction_in_W_loopData_L1_bound"<<endl;
   cout<<"   captured "<<layer_instruction_in_W_loopData_L1_relevancy_capture_count<<" values of layer_instruction_in_W_loopData_L1_relevancy"<<endl;
   testbench_ended = true;
   testbench_end_event.notify(SC_ZERO_TIME);
}
#ifdef CCS_SCVERIFY_USE_CCS_BLOCK
#include "ccs_block_macros.cpp"
#endif
