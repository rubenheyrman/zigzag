--- /users/students/r0678912/Downloads/zigzag/hls_impl/PE/Catapult/SIF/power_top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_pa000000.v	2021-07-13 11:49:24.175629541 +0200
+++ /users/students/r0678912/Downloads/zigzag/hls_impl/PE/Catapult/SIF/calypto_opt_v/iter_write_rtl/calypto_insert_obs/0/power_top_5_32_1_1_O_addr_type_L1_32_1_1_I_addr_type_L1_32_1_1_W_addr_type_L1_5_288_8_8_O_addr_type_L2_312_8_8_I_addr_type_L2_1728_8_8_W_addr_type_L2_5_8640_8_8_O_addr_type_L3_8640_8_8_I_addr_type_L3_55296_8_8_W_addr_type_L3_O_pa000000.v	2021-07-13 11:49:57.957983143 +0200
@@ -1353,6 +1353,7 @@
   reg W_wr_data_rsci_ivld_bfwt;
   wire [15:0] W_wr_data_rsci_idat_gtd;
   reg [15:0] W_wr_data_rsci_idat_bfwt;
+ wire				cg_o_W_wr_data_rsci_idat_bfwt_en; // PowerPro-CG
 
 
   // Interconnect Declarations for Component Instantiations 
@@ -1362,6 +1363,10 @@
       W_wr_data_rsci_ivld);
   assign W_wr_data_rsci_idat_mxwt = MUX_v_16_2_2(W_wr_data_rsci_idat_gtd, W_wr_data_rsci_idat_bfwt,
       W_wr_data_rsci_bcwt);
+ //PowerPro-CG
+ cg_obs_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000031 inst_cg_obs_topless_5comma_32comma_1comm( .rst( rst ),
+	 .W_wr_data_rsci_ivld( W_wr_data_rsci_ivld ),
+	 .W_wr_data_rsci_idat_bfwt_en( cg_o_W_wr_data_rsci_idat_bfwt_en ));
   always @(posedge clk) begin
     if ( rst ) begin
       W_wr_data_rsci_bcwt <= 1'b0;
@@ -1373,10 +1378,12 @@
   always @(posedge clk) begin
     if ( rst ) begin
       W_wr_data_rsci_ivld_bfwt <= 1'b0;
+       if ( cg_o_W_wr_data_rsci_idat_bfwt_en ) //PowerPro-CG
       W_wr_data_rsci_idat_bfwt <= 16'b0000000000000000;
     end
     else if ( W_wr_data_rsci_biwt ) begin
       W_wr_data_rsci_ivld_bfwt <= W_wr_data_rsci_ivld;
+         if ( cg_o_W_wr_data_rsci_idat_bfwt_en ) //PowerPro-CG
       W_wr_data_rsci_idat_bfwt <= W_wr_data_rsci_idat_gtd;
     end
   end
@@ -1451,6 +1458,16 @@
     (
   clk, rst, I_wr_data_rsci_ivld_mxwt, I_wr_data_rsci_idat_mxwt, I_wr_data_rsci_biwt,
       I_wr_data_rsci_bdwt, I_wr_data_rsci_ivld, I_wr_data_rsci_idat
+  , //PowerPro-CG
+  reg_I_wr_data_rsci_irdy_run_psct_cse
+  , //PowerPro-CG
+  fsm_output
+  , //PowerPro-CG
+  run_wen
+  , //PowerPro-CG
+  and_tmp_80
+  , //PowerPro-CG
+  mux_360_nl
 );
   input clk;
   input rst;
@@ -1460,6 +1477,11 @@
   input I_wr_data_rsci_bdwt;
   input I_wr_data_rsci_ivld;
   input [15:0] I_wr_data_rsci_idat;
+ input wire		[0:0]		reg_I_wr_data_rsci_irdy_run_psct_cse; // PowerPro-CG
+ input wire		[1:0]		fsm_output; // PowerPro-CG
+ input wire		[0:0]		run_wen; // PowerPro-CG
+ input wire		[0:0]		and_tmp_80; // PowerPro-CG
+ input wire		[0:0]		mux_360_nl; // PowerPro-CG
 
 
   // Interconnect Declarations
@@ -1467,6 +1489,7 @@
   reg I_wr_data_rsci_ivld_bfwt;
   wire [15:0] I_wr_data_rsci_idat_gtd;
   reg [15:0] I_wr_data_rsci_idat_bfwt;
+ wire				cg_o_I_wr_data_rsci_idat_bfwt_en; // PowerPro-CG
 
 
   // Interconnect Declarations for Component Instantiations 
@@ -1476,6 +1499,17 @@
       I_wr_data_rsci_ivld);
   assign I_wr_data_rsci_idat_mxwt = MUX_v_16_2_2(I_wr_data_rsci_idat_gtd, I_wr_data_rsci_idat_bfwt,
       I_wr_data_rsci_bcwt);
+ //PowerPro-CG
+ cg_obs_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000026 inst_cg_obs_topless_5comma_32comma_1comm( .I_wr_data_rsci_oswt( reg_I_wr_data_rsci_irdy_run_psct_cse ),
+	 .fsm_output( fsm_output ),
+	 .I_wr_data_rsci_biwt( I_wr_data_rsci_biwt ),
+	 .I_wr_data_rsci_bdwt( I_wr_data_rsci_bdwt ),
+	 .I_wr_data_rsci_idat_bfwt_en( cg_o_I_wr_data_rsci_idat_bfwt_en ),
+	 .I_wr_data_rsci_bcwt( I_wr_data_rsci_bcwt ),
+	 .rst_3( rst ),
+	 .run_wen_1( run_wen ),
+	 .and_tmp_80( and_tmp_80 ),
+	 .mux_360_nl( mux_360_nl ));
   always @(posedge clk) begin
     if ( rst ) begin
       I_wr_data_rsci_bcwt <= 1'b0;
@@ -1487,10 +1521,12 @@
   always @(posedge clk) begin
     if ( rst ) begin
       I_wr_data_rsci_ivld_bfwt <= 1'b0;
+       if ( cg_o_I_wr_data_rsci_idat_bfwt_en ) //PowerPro-CG
       I_wr_data_rsci_idat_bfwt <= 16'b0000000000000000;
     end
     else if ( I_wr_data_rsci_biwt ) begin
       I_wr_data_rsci_ivld_bfwt <= I_wr_data_rsci_ivld;
+         if ( cg_o_I_wr_data_rsci_idat_bfwt_en ) //PowerPro-CG
       I_wr_data_rsci_idat_bfwt <= I_wr_data_rsci_idat_gtd;
     end
   end
@@ -1649,6 +1685,12 @@
     (
   clk, rst, O_wr_data_rsci_ivld_mxwt, O_wr_data_rsci_idat_mxwt, O_wr_data_rsci_biwt,
       O_wr_data_rsci_bdwt, O_wr_data_rsci_ivld, O_wr_data_rsci_idat
+  , //PowerPro-CG
+  reg_O_wr_data_rsci_irdy_run_psct_cse
+  , //PowerPro-CG
+  run_wen
+  , //PowerPro-CG
+  or_tmp_242
 );
   input clk;
   input rst;
@@ -1658,6 +1700,9 @@
   input O_wr_data_rsci_bdwt;
   input O_wr_data_rsci_ivld;
   input [15:0] O_wr_data_rsci_idat;
+ input wire		[0:0]		reg_O_wr_data_rsci_irdy_run_psct_cse; // PowerPro-CG
+ input wire		[0:0]		run_wen; // PowerPro-CG
+ input wire		[0:0]		or_tmp_242; // PowerPro-CG
 
 
   // Interconnect Declarations
@@ -1665,6 +1710,7 @@
   reg O_wr_data_rsci_ivld_bfwt;
   wire [15:0] O_wr_data_rsci_idat_gtd;
   reg [15:0] O_wr_data_rsci_idat_bfwt;
+ wire				cg_o_O_wr_data_rsci_idat_bfwt_en; // PowerPro-CG
 
 
   // Interconnect Declarations for Component Instantiations 
@@ -1674,6 +1720,15 @@
       O_wr_data_rsci_ivld);
   assign O_wr_data_rsci_idat_mxwt = MUX_v_16_2_2(O_wr_data_rsci_idat_gtd, O_wr_data_rsci_idat_bfwt,
       O_wr_data_rsci_bcwt);
+ //PowerPro-CG
+ cg_obs_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000016 inst_cg_obs_topless_5comma_32comma_1comm( .O_wr_data_rsci_oswt( reg_O_wr_data_rsci_irdy_run_psct_cse ),
+	 .O_wr_data_rsci_biwt( O_wr_data_rsci_biwt ),
+	 .O_wr_data_rsci_bdwt( O_wr_data_rsci_bdwt ),
+	 .O_wr_data_rsci_idat_bfwt_en( cg_o_O_wr_data_rsci_idat_bfwt_en ),
+	 .run_wen_1( run_wen ),
+	 .O_wr_data_rsci_bcwt( O_wr_data_rsci_bcwt ),
+	 .rst_2( rst ),
+	 .or_tmp_242( or_tmp_242 ));
   always @(posedge clk) begin
     if ( rst ) begin
       O_wr_data_rsci_bcwt <= 1'b0;
@@ -1684,11 +1739,15 @@
   end
   always @(posedge clk) begin
     if ( rst ) begin
+       if ( cg_o_O_wr_data_rsci_idat_bfwt_en ) //PowerPro-CG
       O_wr_data_rsci_ivld_bfwt <= 1'b0;
+       if ( cg_o_O_wr_data_rsci_idat_bfwt_en ) //PowerPro-CG
       O_wr_data_rsci_idat_bfwt <= 16'b0000000000000000;
     end
     else if ( O_wr_data_rsci_biwt ) begin
+         if ( cg_o_O_wr_data_rsci_idat_bfwt_en ) //PowerPro-CG
       O_wr_data_rsci_ivld_bfwt <= O_wr_data_rsci_ivld;
+         if ( cg_o_O_wr_data_rsci_idat_bfwt_en ) //PowerPro-CG
       O_wr_data_rsci_idat_bfwt <= O_wr_data_rsci_idat_gtd;
     end
   end
@@ -2735,6 +2794,12 @@
     (
   clk, rst, I_wr_data_rsc_dat, I_wr_data_rsc_vld, I_wr_data_rsc_rdy, run_wen, run_wten,
       I_wr_data_rsci_oswt, I_wr_data_rsci_ivld_mxwt, I_wr_data_rsci_idat_mxwt
+  , //PowerPro-CG
+  fsm_output
+  , //PowerPro-CG
+  and_tmp_80
+  , //PowerPro-CG
+  mux_360_nl
 );
   input clk;
   input rst;
@@ -2746,6 +2811,9 @@
   input I_wr_data_rsci_oswt;
   output I_wr_data_rsci_ivld_mxwt;
   output [15:0] I_wr_data_rsci_idat_mxwt;
+ input wire		[1:0]		fsm_output; // PowerPro-CG
+ input wire		[0:0]		and_tmp_80; // PowerPro-CG
+ input wire		[0:0]		mux_360_nl; // PowerPro-CG
 
 
   // Interconnect Declarations
@@ -2786,6 +2854,16 @@
       .I_wr_data_rsci_bdwt(I_wr_data_rsci_bdwt),
       .I_wr_data_rsci_ivld(I_wr_data_rsci_ivld),
       .I_wr_data_rsci_idat(I_wr_data_rsci_idat)
+      , //PowerPro-CG
+       .reg_I_wr_data_rsci_irdy_run_psct_cse( I_wr_data_rsci_oswt )
+      , //PowerPro-CG
+       .fsm_output( fsm_output )
+      , //PowerPro-CG
+       .run_wen( run_wen )
+      , //PowerPro-CG
+       .and_tmp_80( and_tmp_80 )
+      , //PowerPro-CG
+       .mux_360_nl( mux_360_nl )
     );
 endmodule
 
@@ -2858,6 +2936,8 @@
     (
   clk, rst, O_wr_data_rsc_dat, O_wr_data_rsc_vld, O_wr_data_rsc_rdy, run_wen, O_wr_data_rsci_oswt,
       run_wten, O_wr_data_rsci_ivld_mxwt, O_wr_data_rsci_idat_mxwt
+  , //PowerPro-CG
+  or_tmp_242
 );
   input clk;
   input rst;
@@ -2869,6 +2949,7 @@
   input run_wten;
   output O_wr_data_rsci_ivld_mxwt;
   output [15:0] O_wr_data_rsci_idat_mxwt;
+ input wire		[0:0]		or_tmp_242; // PowerPro-CG
 
 
   // Interconnect Declarations
@@ -2909,6 +2990,12 @@
       .O_wr_data_rsci_bdwt(O_wr_data_rsci_bdwt),
       .O_wr_data_rsci_ivld(O_wr_data_rsci_ivld),
       .O_wr_data_rsci_idat(O_wr_data_rsci_idat)
+      , //PowerPro-CG
+       .reg_O_wr_data_rsci_irdy_run_psct_cse( O_wr_data_rsci_oswt )
+      , //PowerPro-CG
+       .run_wen( run_wen )
+      , //PowerPro-CG
+       .or_tmp_242( or_tmp_242 )
     );
 endmodule
 
@@ -4683,6 +4770,7 @@
   assign nl_I_mac_pntr_cntInst_run_rg_counter_in = {I_mac_counter_4_sva , I_mac_counter_3_sva
       , I_mac_counter_2_sva , I_mac_counter_1_sva , I_mac_counter_0_sva};
   wire [24:0] nl_I_mac_pntr_cntInst_run_rg_tile_bound_in;
+ wire				cg_o_O_write_data_data_sva_en; // PowerPro-CG
   assign nl_I_mac_pntr_cntInst_run_rg_tile_bound_in = {I_mac_tile_bound_4_lpi_1_dfm_mx0
       , I_mac_tile_bound_3_lpi_1_dfm_mx0 , I_mac_tile_bound_2_lpi_1_dfm_mx0 , I_mac_tile_bound_1_lpi_1_dfm_mx0
       , I_mac_tile_bound_0_lpi_1_dfm_mx0};
@@ -4741,6 +4829,8 @@
       .run_wten(run_wten),
       .O_wr_data_rsci_ivld_mxwt(O_wr_data_rsci_ivld_mxwt),
       .O_wr_data_rsci_idat_mxwt(O_wr_data_rsci_idat_mxwt)
+      , //PowerPro-CG
+       .or_tmp_242( or_tmp_242 )
     );
   topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000006
       rf_5_32_32_32_1_1_1_1_1_1_O_partial_type_O_addr_type_L1_I_type_I_addr_type_L1_W_type_W_addr_type_L1_run_O_rd_data_rsci_inst
@@ -4769,6 +4859,12 @@
       .I_wr_data_rsci_oswt(reg_I_wr_data_rsci_irdy_run_psct_cse),
       .I_wr_data_rsci_ivld_mxwt(I_wr_data_rsci_ivld_mxwt),
       .I_wr_data_rsci_idat_mxwt(I_wr_data_rsci_idat_mxwt)
+      , //PowerPro-CG
+       .fsm_output( fsm_output )
+      , //PowerPro-CG
+       .and_tmp_80( and_tmp_80 )
+      , //PowerPro-CG
+       .mux_360_nl( mux_360_nl )
     );
   topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000008
       rf_5_32_32_32_1_1_1_1_1_1_O_partial_type_O_addr_type_L1_I_type_I_addr_type_L1_W_type_W_addr_type_L1_run_W_wr_data_rsci_inst
@@ -5653,6 +5749,11 @@
       and_526_cse);
   assign mux_661_nl = MUX_s_1_2_2((fsm_output[1]), nor_tmp_217, and_526_cse);
   assign mux_663_itm = MUX_s_1_2_2(mux_662_nl, mux_661_nl, or_756_cse);
+ //PowerPro-CG
+ cg_obs_topless_5comma_32comma_1comma_1comma_O_addr_type_L1comma_32comma_1comma_1comma_I_addr_type_L1comma_32comma_1comma_1comma_W_addr_type_L1comma_5comma_288comma_8comma_8comma_O_addr_type_L2comma_312comma_8comma_8comma_I_addr_type_L2c000003 inst_cg_obs_topless_5comma_32comma_1comm( .rst( rst ),
+	 .fsm_output( fsm_output ),
+	 .O_write_data_data_sva_en( cg_o_O_write_data_data_sva_en ),
+	 .land_9_lpi_1_dfm_1( land_9_lpi_1_dfm_1 ));
   always @(posedge clk) begin
     if ( rst ) begin
       reg_W_instr_in_rsci_oswt_cse_1 <= 1'b0;
@@ -6567,10 +6668,16 @@
   end
   always @(posedge clk) begin
     if ( rst ) begin
+    begin
+       if ( cg_o_O_write_data_data_sva_en ) //PowerPro-CG
       O_write_data_data_sva <= 16'b0000000000000000;
+       end
     end
     else if ( land_9_lpi_1_dfm_1_1 & run_wen ) begin
+    begin
+         if ( cg_o_O_write_data_data_sva_en ) //PowerPro-CG
       O_write_data_data_sva <= O_write_data_data_sva_mx0;
+       end
     end
   end
   always @(posedge clk) begin
