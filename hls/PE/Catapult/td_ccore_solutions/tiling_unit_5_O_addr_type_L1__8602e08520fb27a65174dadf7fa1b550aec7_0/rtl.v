// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    10.5c/896140 Production Release
//  HLS Date:       Sun Sep  6 22:45:38 PDT 2020
// 
//  Generated by:   r0678912@amazone.esat.kuleuven.be
//  Generated date: Tue Jul 13 10:58:02 2021
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    tiling_unit_5_O_addr_type_L1_run
// ------------------------------------------------------------------


module tiling_unit_5_O_addr_type_L1_run (
  loops_bound_rsc_dat, loops_relevancy_rsc_dat, tile_size_in_rsc_dat, tile_size_out_rsc_z,
      instr_bound_rsc_z, instr_tile_rsc_z, ccs_ccore_start_rsc_dat, ccs_ccore_clk,
      ccs_ccore_srst, ccs_ccore_en
);
  input [24:0] loops_bound_rsc_dat;
  input [4:0] loops_relevancy_rsc_dat;
  input [4:0] tile_size_in_rsc_dat;
  output [4:0] tile_size_out_rsc_z;
  output [24:0] instr_bound_rsc_z;
  output [24:0] instr_tile_rsc_z;
  input ccs_ccore_start_rsc_dat;
  input ccs_ccore_clk;
  input ccs_ccore_srst;
  input ccs_ccore_en;


  // Interconnect Declarations
  wire [24:0] loops_bound_rsci_idat;
  wire [4:0] loops_relevancy_rsci_idat;
  wire [4:0] tile_size_in_rsci_idat;
  wire ccs_ccore_start_rsci_idat;
  reg [4:0] instr_bound_rsci_d_24_20;
  reg [4:0] instr_bound_rsci_d_19_15;
  reg [4:0] instr_bound_rsci_d_14_10;
  reg [4:0] instr_bound_rsci_d_9_5;
  reg [4:0] instr_bound_rsci_d_4_0;
  reg [4:0] instr_tile_rsci_d_19_15;
  reg [4:0] instr_tile_rsci_d_14_10;
  reg [4:0] instr_tile_rsci_d_9_5;
  reg [4:0] instr_tile_rsci_d_4_0;
  reg [4:0] reg_tile_size_out_rsci_d_cse;
  wire [4:0] instr_tile_rsci_d_4_0_mx0;
  wire [4:0] instr_tile_rsci_d_19_15_mx0;
  wire [4:0] instr_tile_rsci_d_9_5_mx0;
  wire [4:0] instr_tile_rsci_d_14_10_mx0;
  wire tile_size_and_cse;

  wire[4:0] for_5_if_mul_nl;
  wire[9:0] nl_for_5_if_mul_nl;
  wire[4:0] for_1_if_mul_nl;
  wire[9:0] nl_for_1_if_mul_nl;
  wire[4:0] for_4_if_mul_nl;
  wire[9:0] nl_for_4_if_mul_nl;
  wire[4:0] for_2_if_mul_nl;
  wire[9:0] nl_for_2_if_mul_nl;
  wire[4:0] for_3_if_mul_nl;
  wire[9:0] nl_for_3_if_mul_nl;

  // Interconnect Declarations for Component Instantiations 
  wire [24:0] nl_instr_bound_rsci_d;
  assign nl_instr_bound_rsci_d = {instr_bound_rsci_d_24_20 , instr_bound_rsci_d_19_15
      , instr_bound_rsci_d_14_10 , instr_bound_rsci_d_9_5 , instr_bound_rsci_d_4_0};
  wire [24:0] nl_instr_tile_rsci_d;
  assign nl_instr_tile_rsci_d = {reg_tile_size_out_rsci_d_cse , instr_tile_rsci_d_19_15
      , instr_tile_rsci_d_14_10 , instr_tile_rsci_d_9_5 , instr_tile_rsci_d_4_0};
  ccs_in_v1 #(.rscid(32'sd1),
  .width(32'sd25)) loops_bound_rsci (
      .dat(loops_bound_rsc_dat),
      .idat(loops_bound_rsci_idat)
    );
  ccs_in_v1 #(.rscid(32'sd2),
  .width(32'sd5)) loops_relevancy_rsci (
      .dat(loops_relevancy_rsc_dat),
      .idat(loops_relevancy_rsci_idat)
    );
  mgc_out_dreg_v2 #(.rscid(32'sd4),
  .width(32'sd25)) instr_bound_rsci (
      .d(nl_instr_bound_rsci_d[24:0]),
      .z(instr_bound_rsc_z)
    );
  mgc_out_dreg_v2 #(.rscid(32'sd5),
  .width(32'sd25)) instr_tile_rsci (
      .d(nl_instr_tile_rsci_d[24:0]),
      .z(instr_tile_rsc_z)
    );
  ccs_in_v1 #(.rscid(32'sd130),
  .width(32'sd5)) tile_size_in_rsci (
      .dat(tile_size_in_rsc_dat),
      .idat(tile_size_in_rsci_idat)
    );
  mgc_out_dreg_v2 #(.rscid(32'sd131),
  .width(32'sd5)) tile_size_out_rsci (
      .d(reg_tile_size_out_rsci_d_cse),
      .z(tile_size_out_rsc_z)
    );
  ccs_in_v1 #(.rscid(32'sd137),
  .width(32'sd1)) ccs_ccore_start_rsci (
      .dat(ccs_ccore_start_rsc_dat),
      .idat(ccs_ccore_start_rsci_idat)
    );
  assign tile_size_and_cse = ccs_ccore_en & ccs_ccore_start_rsci_idat;
  assign nl_for_1_if_mul_nl = tile_size_in_rsci_idat * (loops_bound_rsci_idat[4:0]);
  assign for_1_if_mul_nl = nl_for_1_if_mul_nl[4:0];
  assign instr_tile_rsci_d_4_0_mx0 = MUX_v_5_2_2(tile_size_in_rsci_idat, for_1_if_mul_nl,
      loops_relevancy_rsci_idat[0]);
  assign nl_for_4_if_mul_nl = instr_tile_rsci_d_14_10_mx0 * (loops_bound_rsci_idat[19:15]);
  assign for_4_if_mul_nl = nl_for_4_if_mul_nl[4:0];
  assign instr_tile_rsci_d_19_15_mx0 = MUX_v_5_2_2(instr_tile_rsci_d_14_10_mx0, for_4_if_mul_nl,
      loops_relevancy_rsci_idat[3]);
  assign nl_for_2_if_mul_nl = instr_tile_rsci_d_4_0_mx0 * (loops_bound_rsci_idat[9:5]);
  assign for_2_if_mul_nl = nl_for_2_if_mul_nl[4:0];
  assign instr_tile_rsci_d_9_5_mx0 = MUX_v_5_2_2(instr_tile_rsci_d_4_0_mx0, for_2_if_mul_nl,
      loops_relevancy_rsci_idat[1]);
  assign nl_for_3_if_mul_nl = instr_tile_rsci_d_9_5_mx0 * (loops_bound_rsci_idat[14:10]);
  assign for_3_if_mul_nl = nl_for_3_if_mul_nl[4:0];
  assign instr_tile_rsci_d_14_10_mx0 = MUX_v_5_2_2(instr_tile_rsci_d_9_5_mx0, for_3_if_mul_nl,
      loops_relevancy_rsci_idat[2]);
  always @(posedge ccs_ccore_clk) begin
    if ( ccs_ccore_srst ) begin
      reg_tile_size_out_rsci_d_cse <= 5'b00000;
      instr_tile_rsci_d_4_0 <= 5'b00000;
      instr_tile_rsci_d_19_15 <= 5'b00000;
      instr_tile_rsci_d_9_5 <= 5'b00000;
      instr_tile_rsci_d_14_10 <= 5'b00000;
    end
    else if ( tile_size_and_cse ) begin
      reg_tile_size_out_rsci_d_cse <= MUX_v_5_2_2(instr_tile_rsci_d_19_15_mx0, for_5_if_mul_nl,
          loops_relevancy_rsci_idat[4]);
      instr_tile_rsci_d_4_0 <= instr_tile_rsci_d_4_0_mx0;
      instr_tile_rsci_d_19_15 <= instr_tile_rsci_d_19_15_mx0;
      instr_tile_rsci_d_9_5 <= instr_tile_rsci_d_9_5_mx0;
      instr_tile_rsci_d_14_10 <= instr_tile_rsci_d_14_10_mx0;
    end
  end
  always @(posedge ccs_ccore_clk) begin
    if ( ccs_ccore_srst ) begin
      instr_bound_rsci_d_24_20 <= 5'b00000;
      instr_bound_rsci_d_4_0 <= 5'b00000;
      instr_bound_rsci_d_19_15 <= 5'b00000;
      instr_bound_rsci_d_9_5 <= 5'b00000;
      instr_bound_rsci_d_14_10 <= 5'b00000;
    end
    else if ( ccs_ccore_en ) begin
      instr_bound_rsci_d_24_20 <= MUX_v_5_2_2((loops_bound_rsci_idat[24:20]), 5'b00001,
          loops_relevancy_rsci_idat[4]);
      instr_bound_rsci_d_4_0 <= MUX_v_5_2_2((loops_bound_rsci_idat[4:0]), 5'b00001,
          loops_relevancy_rsci_idat[0]);
      instr_bound_rsci_d_19_15 <= MUX_v_5_2_2((loops_bound_rsci_idat[19:15]), 5'b00001,
          loops_relevancy_rsci_idat[3]);
      instr_bound_rsci_d_9_5 <= MUX_v_5_2_2((loops_bound_rsci_idat[9:5]), 5'b00001,
          loops_relevancy_rsci_idat[1]);
      instr_bound_rsci_d_14_10 <= MUX_v_5_2_2((loops_bound_rsci_idat[14:10]), 5'b00001,
          loops_relevancy_rsci_idat[2]);
    end
  end
  assign nl_for_5_if_mul_nl = instr_tile_rsci_d_19_15_mx0 * (loops_bound_rsci_idat[24:20]);
  assign for_5_if_mul_nl = nl_for_5_if_mul_nl[4:0];

  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    tiling_unit_5_O_addr_type_L1
// ------------------------------------------------------------------


module tiling_unit_5_O_addr_type_L1 (
  loops_bound_rsc_dat, loops_relevancy_rsc_dat, tile_size_in_rsc_dat, tile_size_out_rsc_z,
      instr_bound_rsc_z, instr_tile_rsc_z, ccs_ccore_start_rsc_dat, ccs_ccore_clk,
      ccs_ccore_srst, ccs_ccore_en
);
  input [24:0] loops_bound_rsc_dat;
  input [4:0] loops_relevancy_rsc_dat;
  input [4:0] tile_size_in_rsc_dat;
  output [4:0] tile_size_out_rsc_z;
  output [24:0] instr_bound_rsc_z;
  output [24:0] instr_tile_rsc_z;
  input ccs_ccore_start_rsc_dat;
  input ccs_ccore_clk;
  input ccs_ccore_srst;
  input ccs_ccore_en;



  // Interconnect Declarations for Component Instantiations 
  tiling_unit_5_O_addr_type_L1_run tiling_unit_5_O_addr_type_L1_run_inst (
      .loops_bound_rsc_dat(loops_bound_rsc_dat),
      .loops_relevancy_rsc_dat(loops_relevancy_rsc_dat),
      .tile_size_in_rsc_dat(tile_size_in_rsc_dat),
      .tile_size_out_rsc_z(tile_size_out_rsc_z),
      .instr_bound_rsc_z(instr_bound_rsc_z),
      .instr_tile_rsc_z(instr_tile_rsc_z),
      .ccs_ccore_start_rsc_dat(ccs_ccore_start_rsc_dat),
      .ccs_ccore_clk(ccs_ccore_clk),
      .ccs_ccore_srst(ccs_ccore_srst),
      .ccs_ccore_en(ccs_ccore_en)
    );
endmodule



